[{"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/index.js":"1","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/reportWebVitals.js":"2","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/App.js":"3","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Activate.js":"4","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Login.js":"5","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Home.js":"6","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/ResetPasswordConfirm.js":"7","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/PaginateCardList.js":"8","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/apartment_details.js":"9","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/shopdetails.js":"10","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/ResetPassword.js":"11","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/wishlist.js":"12","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/RecentBooking.js":"13","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/bookingdetails.js":"14","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/bookingdetails_apartment.js":"15","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/bookingdetails_shop.js":"16","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/shoplisting.js":"17","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/apartmentlisting.js":"18","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/admin.js":"19","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/complaintdetails.js":"20","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/complaint_form.js":"21","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/complaintdetails_shop.js":"22","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/complaint_form_shop.js":"23","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/complaintdetails_apartment.js":"24","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/complaint_form_apartment.js":"25","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/terms.js":"26","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Aboutus.js":"27","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/hocs/Layout.js":"28","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Profile.js":"29","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookform.js":"30","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookform_shop.js":"31","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookform_apartment.js":"32","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Checkout.js":"33","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/dashboard.js":"34","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/cancellation.js":"35","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/recentbookings.js":"36","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/cancelbooking_shop.js":"37","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/cancelbooking_apartment.js":"38","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/extendbooking.js":"39","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/extendbooking_shop.js":"40","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/extendbooking_apartment.js":"41","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/profile_form.js":"42","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/myprofile.js":"43","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/address_profile.js":"44","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/myrooms.js":"45","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bank_form.js":"46","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/myshops.js":"47","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/confirmdelete.js":"48","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/pausebooking.js":"49","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/myapartments.js":"50","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/givereviews.js":"51","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/analytics.js":"52","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/seller_reviews.js":"53","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mycomplaints.js":"54","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mycomplaints_shop.js":"55","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mycomplaints_apartment.js":"56","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mycoupons.js":"57","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Signup.js":"58","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/RoomDetails.js":"59","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/redux/auth/store.js":"60","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/room_form.js":"61","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/shop_form.js":"62","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/apartment_form.js":"63","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/coupon_form.js":"64","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/eror.js":"65","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/coupon_card.js":"66","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/complaintcard_apartment.js":"67","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/hocs/layout2.js":"68","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/complaintcard_shop.js":"69","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/seller_rating_and_reviews.js":"70","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/complaintcard.js":"71","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/selleranalytics.js":"72","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/redux/auth/actions/auth_actions.js":"73","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/seller_reviews_pop.js":"74","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/footer.js":"75","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/ScrollableIcons.js":"76","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Navbar.js":"77","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/wishlistsmackbar.js":"78","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/cartsmackbar.js":"79","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mapcomp.js":"80","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mapmobile.js":"81","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/MobileRatingSearchCard.js":"82","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcardmodel.js":"83","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/roomrules.js":"84","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/dateselect.js":"85","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RatingBar.js":"86","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/linegraph.js":"87","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/redux/auth/reducers/index.js":"88","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/redux/auth/actiontypes/auth_action_types.js":"89","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/seller_reviews_product.js":"90","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/BookCard.js":"91","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/error_snackbar.js":"92","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/success_snackbar.js":"93","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/capacityselect.js":"94","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/FacilityIconProvider.js":"95","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/MonthSelect.js":"96","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/CancellationPolicyPopover.js":"97","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcarddatepicker.js":"98","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/redux/auth/reducers/authreducers.js":"99","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/piechart3.js":"100","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/piechart2.js":"101","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/multicolor_chart.js":"102","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/piechart.js":"103","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/barchart.js":"104","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Rating.js":"105","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/map_form.js":"106","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mobileimages.js":"107","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mobileappbar.js":"108","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RatingWithCompliment.js":"109","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RoomDescriptionContent.js":"110","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/scrolloffers.js":"111","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RatingAndReviews.js":"112","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/SpecificRoomCarousel.js":"113","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/apartmentcard.js":"114","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/shop_card.js":"115","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/room_card.js":"116","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/address_card.js":"117","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bank_card.js":"118","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/profilecard.js":"119","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/FacilityIconProvider_shop.js":"120","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RecentBookingsTable_apartment.js":"121","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RecentBookingsTable_shop.js":"122","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RecentBookingTable.js":"123","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/SellerDetails.js":"124","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Review.js":"125","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/PaymentForm.js":"126","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/AddressForm.js":"127","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/booksummary_apartment.js":"128","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/customerdetails.js":"129","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/imagemodal.js":"130","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/descriptiontableapartment.js":"131","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/newcoupon.js":"132","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/descriptiontableshop.js":"133","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/rating_meter.js":"134","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/couponmodal.js":"135","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/descriptiontable.js":"136","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/coupon_card1.js":"137","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/booksummary_shop.js":"138","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/booksummary.js":"139","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/customerpolicies.js":"140","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/sellerpolicies.js":"141","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/complainttable.js":"142","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcardmodel1_apartment.js":"143","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcardmodel1_shop.js":"144","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/searchlist_apartment.js":"145","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/searchlist_shops.js":"146","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/facilitiestable.js":"147","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/invoice.js":"148","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/detailstable.js":"149","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/wishlistapartments.js":"150","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/wishlistshops.js":"151","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/wishlistrooms.js":"152","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcardmodel_shop.js":"153","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcardmodel_apartment.js":"154","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcard_shop.js":"155","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mobileimages_apartments.js":"156","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcard_apartment.js":"157","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/specificapartmentcarosel.js":"158","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcardmodel1.js":"159","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/searchlist.js":"160","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/datepick.js":"161","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/scrollapartment.js":"162","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/scrollshops.js":"163","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Welcome.js":"164","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/scrollroom.js":"165","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/scrollcoupons.js":"166","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/locationfilter.js":"167","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/apartment_type.js":"168","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mapmount_apartment.js":"169","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/BHKfilter.js":"170","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/sort.js":"171","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/searchfilter.js":"172","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/searchfilter2.js":"173","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bedtypefilter.js":"174","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/floorfilter.js":"175","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/minwindows_apartment.js":"176","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/sequrityfilter.js":"177","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/minratingfilter.js":"178","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mintrustpoints.js":"179","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/datefilter.js":"180","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/facilities_filter_apartment.js":"181","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/priceslider.js":"182","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/PaginationOutlined.js":"183","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/post_apartment.js":"184","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookedcheckbox.js":"185","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/minwindows_shop.js":"186","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mapmount_shops.js":"187","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/facilitiesfilter_shop.js":"188","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceThankYouMsg.js":"189","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceItemsTable.js":"190","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceNo.js":"191","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/BillTo.js":"192","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceTitle.js":"193","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Spinner.js":"194","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/card_1_apartment.js":"195","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/searchcard_apartment.js":"196","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/card_1.js":"197","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/searchcard_shop.js":"198","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/monthselect_shop.js":"199","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/facilityiconprovider_apartment.js":"200","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/card_1_shop.js":"201","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Mapmount.js":"202","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/minwindows.js":"203","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/facilitiesfilter.js":"204","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Capacityfilter.js":"205","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/foodcheckbox.js":"206","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/categoryselect.js":"207","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Posts.js":"208","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/post_shops.js":"209","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/newcardapartment.js":"210","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/newcardshop.js":"211","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Serachbox.js":"212","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/newcardroom.js":"213","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mapview.js":"214","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceTableFooter.js":"215","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceTableRow.js":"216","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceTableHeader.js":"217","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mobilesearchapartmentimage.js":"218","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/MobileSearchCardImage.js":"219","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mobilesearchshopimage.js":"220","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/SearchCard.js":"221","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/newcardimage.js":"222","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/iconscroll.js":"223","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/hooks/usescript.js":"224"},{"size":501,"mtime":1616391572226,"results":"225","hashOfConfig":"226"},{"size":362,"mtime":1616391572226,"results":"227","hashOfConfig":"226"},{"size":9930,"mtime":1621854052770,"results":"228","hashOfConfig":"226"},{"size":1121,"mtime":1616391572226,"results":"229","hashOfConfig":"226"},{"size":10163,"mtime":1621866913350,"results":"230","hashOfConfig":"226"},{"size":24812,"mtime":1622090875323,"results":"231","hashOfConfig":"226"},{"size":2166,"mtime":1616391572226,"results":"232","hashOfConfig":"226"},{"size":7975,"mtime":1621932554638,"results":"233","hashOfConfig":"226"},{"size":18613,"mtime":1622194989214,"results":"234","hashOfConfig":"226"},{"size":18626,"mtime":1622195095951,"results":"235","hashOfConfig":"226"},{"size":1571,"mtime":1618943230432,"results":"236","hashOfConfig":"226"},{"size":2192,"mtime":1616653937495,"results":"237","hashOfConfig":"226"},{"size":5805,"mtime":1618768968419,"results":"238","hashOfConfig":"226"},{"size":12097,"mtime":1622195602583,"results":"239","hashOfConfig":"226"},{"size":11137,"mtime":1622195542352,"results":"240","hashOfConfig":"226"},{"size":10819,"mtime":1622195584165,"results":"241","hashOfConfig":"226"},{"size":7515,"mtime":1621933343708,"results":"242","hashOfConfig":"226"},{"size":8202,"mtime":1621932599243,"results":"243","hashOfConfig":"226"},{"size":26316,"mtime":1617810219798,"results":"244","hashOfConfig":"226"},{"size":14636,"mtime":1622195647706,"results":"245","hashOfConfig":"226"},{"size":9455,"mtime":1621879995655,"results":"246","hashOfConfig":"226"},{"size":14492,"mtime":1622195699909,"results":"247","hashOfConfig":"226"},{"size":9459,"mtime":1621880009660,"results":"248","hashOfConfig":"226"},{"size":14540,"mtime":1622195721463,"results":"249","hashOfConfig":"226"},{"size":9478,"mtime":1621880023600,"results":"250","hashOfConfig":"226"},{"size":1648,"mtime":1621612689491,"results":"251","hashOfConfig":"226"},{"size":3981,"mtime":1621882662381,"results":"252","hashOfConfig":"226"},{"size":675,"mtime":1619005763228,"results":"253","hashOfConfig":"226"},{"size":10028,"mtime":1622196088731,"results":"254","hashOfConfig":"226"},{"size":12774,"mtime":1622125487136,"results":"255","hashOfConfig":"226"},{"size":12266,"mtime":1622125697654,"results":"256","hashOfConfig":"226"},{"size":12522,"mtime":1622125668398,"results":"257","hashOfConfig":"226"},{"size":4334,"mtime":1616391572218,"results":"258","hashOfConfig":"226"},{"size":866,"mtime":1618759396464,"results":"259","hashOfConfig":"226"},{"size":8699,"mtime":1618758601606,"results":"260","hashOfConfig":"226"},{"size":3376,"mtime":1618761778507,"results":"261","hashOfConfig":"226"},{"size":8646,"mtime":1618758574398,"results":"262","hashOfConfig":"226"},{"size":8697,"mtime":1618758558798,"results":"263","hashOfConfig":"226"},{"size":23266,"mtime":1621871172418,"results":"264","hashOfConfig":"226"},{"size":17523,"mtime":1621871167530,"results":"265","hashOfConfig":"226"},{"size":17910,"mtime":1621871195734,"results":"266","hashOfConfig":"226"},{"size":13367,"mtime":1622196125293,"results":"267","hashOfConfig":"226"},{"size":5674,"mtime":1622196291030,"results":"268","hashOfConfig":"226"},{"size":8743,"mtime":1618757507740,"results":"269","hashOfConfig":"226"},{"size":6417,"mtime":1622196270785,"results":"270","hashOfConfig":"226"},{"size":9342,"mtime":1618757701355,"results":"271","hashOfConfig":"226"},{"size":6027,"mtime":1622196253992,"results":"272","hashOfConfig":"226"},{"size":3765,"mtime":1618758910605,"results":"273","hashOfConfig":"226"},{"size":3821,"mtime":1622196173859,"results":"274","hashOfConfig":"226"},{"size":6065,"mtime":1622196401661,"results":"275","hashOfConfig":"226"},{"size":10534,"mtime":1621879972159,"results":"276","hashOfConfig":"226"},{"size":5260,"mtime":1621884447106,"results":"277","hashOfConfig":"226"},{"size":3979,"mtime":1622196200535,"results":"278","hashOfConfig":"226"},{"size":5692,"mtime":1622196346300,"results":"279","hashOfConfig":"226"},{"size":5699,"mtime":1622196365197,"results":"280","hashOfConfig":"226"},{"size":5714,"mtime":1622196380853,"results":"281","hashOfConfig":"226"},{"size":6063,"mtime":1622196317875,"results":"282","hashOfConfig":"226"},{"size":12164,"mtime":1622103866178,"results":"283","hashOfConfig":"226"},{"size":18710,"mtime":1622195455425,"results":"284","hashOfConfig":"226"},{"size":299,"mtime":1622180855152,"results":"285","hashOfConfig":"226"},{"size":114700,"mtime":1622188030623,"results":"286","hashOfConfig":"226"},{"size":71412,"mtime":1622187903056,"results":"287","hashOfConfig":"226"},{"size":92315,"mtime":1622187990626,"results":"288","hashOfConfig":"226"},{"size":16845,"mtime":1622105531728,"results":"289","hashOfConfig":"226"},{"size":288,"mtime":1622181545588,"results":"290","hashOfConfig":"226"},{"size":4298,"mtime":1622006518386,"results":"291","hashOfConfig":"226"},{"size":2928,"mtime":1618758837245,"results":"292","hashOfConfig":"226"},{"size":11746,"mtime":1622180651521,"results":"293","hashOfConfig":"226"},{"size":2925,"mtime":1618758845033,"results":"294","hashOfConfig":"226"},{"size":5019,"mtime":1618762293412,"results":"295","hashOfConfig":"226"},{"size":2925,"mtime":1618758852329,"results":"296","hashOfConfig":"226"},{"size":8010,"mtime":1622195898876,"results":"297","hashOfConfig":"226"},{"size":6077,"mtime":1618769682151,"results":"298","hashOfConfig":"226"},{"size":1385,"mtime":1618762344248,"results":"299","hashOfConfig":"226"},{"size":7536,"mtime":1622056601869,"results":"300","hashOfConfig":"226"},{"size":5357,"mtime":1622091589521,"results":"301","hashOfConfig":"226"},{"size":11409,"mtime":1622117826271,"results":"302","hashOfConfig":"226"},{"size":1075,"mtime":1616391572226,"results":"303","hashOfConfig":"226"},{"size":1026,"mtime":1618758796766,"results":"304","hashOfConfig":"226"},{"size":1317,"mtime":1621882199114,"results":"305","hashOfConfig":"226"},{"size":1316,"mtime":1621882206382,"results":"306","hashOfConfig":"226"},{"size":2930,"mtime":1616915342300,"results":"307","hashOfConfig":"226"},{"size":1818,"mtime":1622011820816,"results":"308","hashOfConfig":"226"},{"size":1292,"mtime":1621868354734,"results":"309","hashOfConfig":"226"},{"size":1883,"mtime":1618759461697,"results":"310","hashOfConfig":"226"},{"size":1872,"mtime":1616391572218,"results":"311","hashOfConfig":"226"},{"size":5250,"mtime":1616827597370,"results":"312","hashOfConfig":"226"},{"size":138,"mtime":1616391572226,"results":"313","hashOfConfig":"226"},{"size":818,"mtime":1616391572226,"results":"314","hashOfConfig":"226"},{"size":3531,"mtime":1622195971656,"results":"315","hashOfConfig":"226"},{"size":18793,"mtime":1622129185254,"results":"316","hashOfConfig":"226"},{"size":894,"mtime":1616391572222,"results":"317","hashOfConfig":"226"},{"size":898,"mtime":1616391572226,"results":"318","hashOfConfig":"226"},{"size":1178,"mtime":1618758668646,"results":"319","hashOfConfig":"226"},{"size":39452,"mtime":1618759993840,"results":"320","hashOfConfig":"226"},{"size":3191,"mtime":1618760952009,"results":"321","hashOfConfig":"226"},{"size":1708,"mtime":1616391572218,"results":"322","hashOfConfig":"226"},{"size":906,"mtime":1618758082851,"results":"323","hashOfConfig":"226"},{"size":1823,"mtime":1616391572226,"results":"324","hashOfConfig":"226"},{"size":2311,"mtime":1616391572226,"results":"325","hashOfConfig":"226"},{"size":2320,"mtime":1616391572226,"results":"326","hashOfConfig":"226"},{"size":5100,"mtime":1618760970105,"results":"327","hashOfConfig":"226"},{"size":1838,"mtime":1616827597370,"results":"328","hashOfConfig":"226"},{"size":4488,"mtime":1618757720262,"results":"329","hashOfConfig":"226"},{"size":1642,"mtime":1621880480161,"results":"330","hashOfConfig":"226"},{"size":5268,"mtime":1621882166822,"results":"331","hashOfConfig":"226"},{"size":5391,"mtime":1618760786762,"results":"332","hashOfConfig":"226"},{"size":2051,"mtime":1618760641124,"results":"333","hashOfConfig":"226"},{"size":3166,"mtime":1618761737162,"results":"334","hashOfConfig":"226"},{"size":1084,"mtime":1618761960078,"results":"335","hashOfConfig":"226"},{"size":5099,"mtime":1622112641415,"results":"336","hashOfConfig":"226"},{"size":6265,"mtime":1618761670545,"results":"337","hashOfConfig":"226"},{"size":12268,"mtime":1616391572222,"results":"338","hashOfConfig":"226"},{"size":3271,"mtime":1617905036074,"results":"339","hashOfConfig":"226"},{"size":3139,"mtime":1616391572226,"results":"340","hashOfConfig":"226"},{"size":3140,"mtime":1616391572226,"results":"341","hashOfConfig":"226"},{"size":2659,"mtime":1621881893063,"results":"342","hashOfConfig":"226"},{"size":2647,"mtime":1621881913483,"results":"343","hashOfConfig":"226"},{"size":2450,"mtime":1622117009119,"results":"344","hashOfConfig":"226"},{"size":24905,"mtime":1618759952536,"results":"345","hashOfConfig":"226"},{"size":4716,"mtime":1622123705179,"results":"346","hashOfConfig":"226"},{"size":4708,"mtime":1618943817320,"results":"347","hashOfConfig":"226"},{"size":4698,"mtime":1618943644435,"results":"348","hashOfConfig":"226"},{"size":1667,"mtime":1616391572222,"results":"349","hashOfConfig":"226"},{"size":2926,"mtime":1616391572218,"results":"350","hashOfConfig":"226"},{"size":1558,"mtime":1616391572218,"results":"351","hashOfConfig":"226"},{"size":2747,"mtime":1616391572218,"results":"352","hashOfConfig":"226"},{"size":4441,"mtime":1621870958868,"results":"353","hashOfConfig":"226"},{"size":3037,"mtime":1621842783116,"results":"354","hashOfConfig":"226"},{"size":1570,"mtime":1616391572222,"results":"355","hashOfConfig":"226"},{"size":7011,"mtime":1616842586543,"results":"356","hashOfConfig":"226"},{"size":3583,"mtime":1622027500590,"results":"357","hashOfConfig":"226"},{"size":6268,"mtime":1616842922944,"results":"358","hashOfConfig":"226"},{"size":1882,"mtime":1616391572226,"results":"359","hashOfConfig":"226"},{"size":1141,"mtime":1622015902219,"results":"360","hashOfConfig":"226"},{"size":7232,"mtime":1617779983757,"results":"361","hashOfConfig":"226"},{"size":4131,"mtime":1622027349554,"results":"362","hashOfConfig":"226"},{"size":4244,"mtime":1621870952024,"results":"363","hashOfConfig":"226"},{"size":4773,"mtime":1621870944712,"results":"364","hashOfConfig":"226"},{"size":8799,"mtime":1621613891445,"results":"365","hashOfConfig":"226"},{"size":8877,"mtime":1621614001006,"results":"366","hashOfConfig":"226"},{"size":1768,"mtime":1617519636291,"results":"367","hashOfConfig":"226"},{"size":1792,"mtime":1618758168870,"results":"368","hashOfConfig":"226"},{"size":1787,"mtime":1618758225189,"results":"369","hashOfConfig":"226"},{"size":15057,"mtime":1622009159860,"results":"370","hashOfConfig":"226"},{"size":14153,"mtime":1622009145389,"results":"371","hashOfConfig":"226"},{"size":6342,"mtime":1619341222815,"results":"372","hashOfConfig":"226"},{"size":1253,"mtime":1621880238468,"results":"373","hashOfConfig":"226"},{"size":8522,"mtime":1619341056371,"results":"374","hashOfConfig":"226"},{"size":2982,"mtime":1621884924302,"results":"375","hashOfConfig":"226"},{"size":2961,"mtime":1621958847349,"results":"376","hashOfConfig":"226"},{"size":2988,"mtime":1622129736457,"results":"377","hashOfConfig":"226"},{"size":1825,"mtime":1622011849564,"results":"378","hashOfConfig":"226"},{"size":1828,"mtime":1622011859519,"results":"379","hashOfConfig":"226"},{"size":12883,"mtime":1622129130623,"results":"380","hashOfConfig":"226"},{"size":6182,"mtime":1622028198568,"results":"381","hashOfConfig":"226"},{"size":13164,"mtime":1622129120567,"results":"382","hashOfConfig":"226"},{"size":12800,"mtime":1616391572226,"results":"383","hashOfConfig":"226"},{"size":1800,"mtime":1622011466284,"results":"384","hashOfConfig":"226"},{"size":15317,"mtime":1622009104850,"results":"385","hashOfConfig":"226"},{"size":3338,"mtime":1622010163010,"results":"386","hashOfConfig":"226"},{"size":2504,"mtime":1622112634271,"results":"387","hashOfConfig":"226"},{"size":2476,"mtime":1622112619639,"results":"388","hashOfConfig":"226"},{"size":2632,"mtime":1622004023727,"results":"389","hashOfConfig":"226"},{"size":2478,"mtime":1622112627631,"results":"390","hashOfConfig":"226"},{"size":2499,"mtime":1622112649443,"results":"391","hashOfConfig":"226"},{"size":2260,"mtime":1622007647457,"results":"392","hashOfConfig":"226"},{"size":1409,"mtime":1618757641175,"results":"393","hashOfConfig":"226"},{"size":3869,"mtime":1621959871106,"results":"394","hashOfConfig":"226"},{"size":1461,"mtime":1616391572218,"results":"395","hashOfConfig":"226"},{"size":1580,"mtime":1616391572226,"results":"396","hashOfConfig":"226"},{"size":776,"mtime":1622008160761,"results":"397","hashOfConfig":"226"},{"size":774,"mtime":1622008131573,"results":"398","hashOfConfig":"226"},{"size":1263,"mtime":1622008692832,"results":"399","hashOfConfig":"226"},{"size":1265,"mtime":1616391572222,"results":"400","hashOfConfig":"226"},{"size":10188,"mtime":1616391572222,"results":"401","hashOfConfig":"226"},{"size":2530,"mtime":1622008626799,"results":"402","hashOfConfig":"226"},{"size":1339,"mtime":1616391572222,"results":"403","hashOfConfig":"226"},{"size":2423,"mtime":1616391572222,"results":"404","hashOfConfig":"226"},{"size":2715,"mtime":1622008518518,"results":"405","hashOfConfig":"226"},{"size":7473,"mtime":1622008571834,"results":"406","hashOfConfig":"226"},{"size":1137,"mtime":1622008044864,"results":"407","hashOfConfig":"226"},{"size":811,"mtime":1619007089387,"results":"408","hashOfConfig":"226"},{"size":1778,"mtime":1616391572226,"results":"409","hashOfConfig":"226"},{"size":1425,"mtime":1619337141100,"results":"410","hashOfConfig":"226"},{"size":4702,"mtime":1616391572222,"results":"411","hashOfConfig":"226"},{"size":3222,"mtime":1618760484741,"results":"412","hashOfConfig":"226"},{"size":5230,"mtime":1622008565826,"results":"413","hashOfConfig":"226"},{"size":535,"mtime":1616761897955,"results":"414","hashOfConfig":"226"},{"size":750,"mtime":1618760200191,"results":"415","hashOfConfig":"226"},{"size":1565,"mtime":1616755140895,"results":"416","hashOfConfig":"226"},{"size":949,"mtime":1616762318308,"results":"417","hashOfConfig":"226"},{"size":595,"mtime":1619341407910,"results":"418","hashOfConfig":"226"},{"size":1094,"mtime":1622195363172,"results":"419","hashOfConfig":"226"},{"size":3980,"mtime":1622055427120,"results":"420","hashOfConfig":"226"},{"size":13234,"mtime":1618762156099,"results":"421","hashOfConfig":"226"},{"size":3959,"mtime":1622055402095,"results":"422","hashOfConfig":"226"},{"size":13060,"mtime":1618762197943,"results":"423","hashOfConfig":"226"},{"size":3151,"mtime":1618760940145,"results":"424","hashOfConfig":"226"},{"size":29956,"mtime":1618759960488,"results":"425","hashOfConfig":"226"},{"size":3957,"mtime":1622055413835,"results":"426","hashOfConfig":"226"},{"size":3493,"mtime":1618760509985,"results":"427","hashOfConfig":"226"},{"size":2530,"mtime":1616391572222,"results":"428","hashOfConfig":"226"},{"size":9735,"mtime":1622008548246,"results":"429","hashOfConfig":"226"},{"size":1283,"mtime":1616391572218,"results":"430","hashOfConfig":"226"},{"size":1794,"mtime":1622008608235,"results":"431","hashOfConfig":"226"},{"size":2617,"mtime":1622008728017,"results":"432","hashOfConfig":"226"},{"size":1702,"mtime":1616391572218,"results":"433","hashOfConfig":"226"},{"size":1712,"mtime":1616391572226,"results":"434","hashOfConfig":"226"},{"size":2893,"mtime":1622055516219,"results":"435","hashOfConfig":"226"},{"size":2822,"mtime":1622055504095,"results":"436","hashOfConfig":"226"},{"size":9166,"mtime":1621952708109,"results":"437","hashOfConfig":"226"},{"size":2924,"mtime":1622055494109,"results":"438","hashOfConfig":"226"},{"size":5792,"mtime":1622196504957,"results":"439","hashOfConfig":"226"},{"size":971,"mtime":1619341572573,"results":"440","hashOfConfig":"226"},{"size":1383,"mtime":1619341537130,"results":"441","hashOfConfig":"226"},{"size":1165,"mtime":1619341503130,"results":"442","hashOfConfig":"226"},{"size":29027,"mtime":1618760855238,"results":"443","hashOfConfig":"226"},{"size":28995,"mtime":1618760887417,"results":"444","hashOfConfig":"226"},{"size":29000,"mtime":1618760919417,"results":"445","hashOfConfig":"226"},{"size":18246,"mtime":1618762240672,"results":"446","hashOfConfig":"226"},{"size":25130,"mtime":1616391572222,"results":"447","hashOfConfig":"226"},{"size":5297,"mtime":1618760155196,"results":"448","hashOfConfig":"226"},{"size":267,"mtime":1616391572226,"results":"449","hashOfConfig":"226"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},"ujqif",{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"452"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"452"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"452"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"452"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"452"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"452"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"452"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"452"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"452"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"452"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"452"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"452"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"452"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"452"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"452"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"452"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"452"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"452"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"452"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"528","messages":"529","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"452"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"452"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"452"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"452"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"452"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"452"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"452"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"452"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"452"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"452"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"452"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"452"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"566","messages":"567","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"568","messages":"569","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"452"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"573","messages":"574","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"452"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"452"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"452"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"584","messages":"585","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"586","messages":"587","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"452"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"452"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"452"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"597","messages":"598","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"599","messages":"600","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"601","messages":"602","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":59,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"452"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"452"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":49,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"452"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"452"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"623","messages":"624","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"625","messages":"626","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"627","messages":"628","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"629","messages":"630","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"631","messages":"632","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"633","messages":"634","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"635","messages":"636","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"452"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"642","messages":"643","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"644","messages":"645","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"646","messages":"647","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"648","messages":"649","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"650","messages":"651","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"658","messages":"659","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"672","messages":"673","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"452"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"685","messages":"686","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"691","messages":"692","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"693","messages":"694","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"695","messages":"696","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"697","messages":"698","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"701","messages":"702","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"703","messages":"704","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"705","messages":"706","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"707","messages":"708","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"711","messages":"712","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"717","messages":"718","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"719","messages":"720","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"735","messages":"736","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"737","messages":"738","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"739","messages":"740","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"741","messages":"742","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"751","messages":"752","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"757","messages":"758","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"761","messages":"762","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"767","messages":"768","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"773","messages":"774","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"775","messages":"776","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"779","messages":"780","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"781","messages":"782","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"783","messages":"784","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"785","messages":"786","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"793","messages":"794","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"795","messages":"796","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"797","messages":"798","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"799","messages":"800","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"801","messages":"802","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"803","messages":"804","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"805","messages":"806","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"807","messages":"808","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"809","messages":"810","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"811","messages":"812","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"813","messages":"814","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"815","messages":"816","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"817","messages":"818","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"819","messages":"820","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"823","messages":"824","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"825","messages":"826","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"831","messages":"832","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"845","messages":"846","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"853","messages":"854","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"863","messages":"864","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"865","messages":"866","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"867","messages":"868","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"873","messages":"874","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"881","messages":"882","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"883","usedDeprecatedRules":"452"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"886","messages":"887","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"888","messages":"889","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"890","messages":"891","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"892","messages":"893","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"894","messages":"895","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"896","messages":"897","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"898","messages":"899","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"900","messages":"901","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"902","messages":"903","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"904","messages":"905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"914","messages":"915","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"918","messages":"919","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"920","messages":"921","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"922","messages":"923","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"930","messages":"931","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"932","messages":"933","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"934","messages":"935","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"936","messages":"937","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"938","messages":"939","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"940","messages":"941","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/index.js",[],["944","945"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/reportWebVitals.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/App.js",["946","947","948"],"import 'antd/dist/antd.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; \nimport Activate from './containers/Activate';\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\nimport Signup from './containers/Signup';\nimport Layout from './hocs/Layout';\nimport { Provider } from 'react-redux';\nimport store from './redux/auth/store';\nimport PaginationCardList from './containers/PaginateCardList'\nimport rooms from './containers/RoomDetails'\nimport Shops from './containers/shopdetails'\nimport Apartments from './containers/apartment_details'\nimport SimpleTabs from './containers/wishlist';\nimport RecentBooking from './containers/RecentBooking'\nimport Profile from './components/Profile';\n\nimport Checkout from './components/bookform';\nimport Checkout_shop from './components/bookform_shop'\nimport Checkout_apartment from './components/bookform_apartment'\n// import Sforms from './components/Sforms'\nimport Sforms from './components/Checkout' \nimport Dashboard from './components/dashboard'\nimport RecentBooking1 from './components/recentbookings'\nimport Bookingdetails from './containers/bookingdetails'\nimport Bookingdetails_shop from './containers/bookingdetails_shop'\nimport Bookingdetails_apartment from './containers/bookingdetails_apartment'\nimport Bookingcancel from './components/cancellation'\nimport Bookingcancel_shop from './components/cancelbooking_shop'\nimport Bookingcancel_apartment from './components/cancelbooking_apartment'\nimport Bookingextend from './components/extendbooking'\nimport Bookingextend_shop from './components/extendbooking_shop'\nimport Bookingextend_apartment from './components/extendbooking_apartment'\nimport Myprofile from './components/myprofile';\nimport ProfileForm from './/components/profile_form'\nimport BankForm from './/components/bank_form'\nimport AddressForm from './/components/address_profile'\nimport Myrooms from './components/myrooms'\nimport Myshops from './components/myshops'\nimport RoomForm from './components/room_form'\nimport ConfirmDelete from './components/confirmdelete'\nimport ConfirmPause from './components/pausebooking'\nimport Myapartments from './components/myapartments'\nimport ShopForm from './components/shop_form'\nimport ApartmentForm from './components/apartment_form'\nimport Mycoupons from './components/mycoupons'\nimport CouponForm from './components/coupon_form'\nimport ReviewForm from './components/givereviews'\n\nimport ShopListing from './containers/shoplisting'\nimport ApartmentListing from './containers/apartmentlisting'\nimport MyReviews from './components/seller_reviews'\nimport Analytics from './components/analytics'\nimport Admin from './containers/admin'\n\nimport Complaintroom from './components/mycomplaints'\nimport Complaintroomdetails from './containers/complaintdetails'\nimport Complaintform from './containers/complaint_form'\n\nimport Complaintshop from './components/mycomplaints_shop'\nimport Complaintshopdetails from './containers/complaintdetails_shop'\nimport Complaintformshop from './containers/complaint_form_shop'\n\nimport Complainthousing from './components/mycomplaints_apartment'\nimport Complainthousingdetails from './containers/complaintdetails_apartment'\nimport Complaintformhousing from './containers/complaint_form_apartment'\nimport Terms from './containers/terms';\nimport About from './containers/Aboutus';\n\n\nrequire('dotenv').config()\n\n\nfunction App(props) {\n  \n  return (\n    <Provider store={store}>\n      <Router>\n          <Layout>\n            <Switch>\n              <>\n              <div \n              className=\"App\">\n                <Route exact path='/' component={Home} />\n                <Route exact path='/login' component={Login} />\n                <Route exact path='/signup' component={Signup} />\n                <Route exact path='/reset_password' component={ResetPassword} />\n                <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n                <Route exact path='/activate/:uid/:token' component={Activate} />\n                \n                <Route exact path='/rooms' component={PaginationCardList}/>\n                <Route exact path='/rooms/:roomid' component={rooms}/>\n                <Route exact path='/wishlist' component={SimpleTabs}/>\n                <Route exact path='/rooms/:roomid/book/' component={Checkout} />\n                <Route exact path='/recentBooking' component={ConfirmPause}/>\n\n                <Route exact path='/policies' component={Terms}/>\n\n\n                <Route exact path='/shops' component={ShopListing}/>\n                <Route exact path='/shops/:shopid' component={Shops}/>\n                <Route exact path='/shops/:shopid/book/' component={Checkout_shop} />\n\n                <Route exact path='/housing' component={ApartmentListing}/>\n                <Route exact path='/housing/:apartmentid' component={Apartments}/>\n                <Route exact path='/housing/:apartmentid/book/' component={Checkout_apartment} />\n\n                <Route exact path='/dashboard/analytics' component={Analytics}/>\n\n                <Route exact path='/dashboard/my_rooms' component={Myrooms}/>\n                <Route exact path='/dashboard/my_rooms/edit' component={RoomForm}/>\n                <Route exact path='/dashboard/my_rooms/delete' component={ConfirmDelete}/>\n                <Route exact path='/dashboard/my_rooms/pause_booking' component={ConfirmPause}/>\n                <Route exact path='/dashboard/my_shops' component={Myshops}/>\n                <Route exact path='/dashboard/my_shops/edit' component={ShopForm}/>\n                <Route exact path='/dashboard/my_shops/delete' component={ConfirmDelete}/>\n                <Route exact path='/dashboard/my_shops/pause_booking' component={ConfirmPause}/>\n                <Route exact path='/dashboard/my_housing' component={Myapartments}/>\n                <Route exact path='/dashboard/my_housing/edit' component={ApartmentForm}/>\n                <Route exact path='/dashboard/my_housing/delete' component={ConfirmDelete}/>\n                <Route exact path='/dashboard/my_housing/pause_booking' component={ConfirmPause}/>\n\n                <Route exact path='/dashboard/my_reviews' component={MyReviews}/>\n\n                <Route exact path='/dashboard/my_coupons' component={Mycoupons}/>\n                <Route exact path='/dashboard/my_coupons/edit' component={CouponForm}/>\n                <Route exact path='/dashboard/my_coupons/delete' component={ConfirmDelete}/>\n                \n                <Route exact path='/Sform' component={Sforms}/>\n                <Route exact path='/dashboard/profile' component={Myprofile}/>\n                <Route exact path='/dashboard/profile/edit' component={ProfileForm}/>\n                <Route exact path='/dashboard/bank_details/edit' component={BankForm}/>\n                <Route exact path='/dashboard/address_details/edit' component={AddressForm}/>\n\n            \n                <Route exact path='/dashboard/recentbookings' component={RecentBooking1}/>\n                <Route exact path='/dashboard/recentbookings/room-bookings/:bookingid' component={Bookingdetails}/>\n                <Route exact path='/dashboard/recentbookings/shop-bookings/:bookingid' component={Bookingdetails_shop}/>\n                <Route exact path='/dashboard/recentbookings/housing-bookings/:bookingid' component={Bookingdetails_apartment}/>\n\n                <Route exact path='/dashboard/recentbookings/room-bookings/cancel/:bookingid' component={Bookingcancel}/>\n                <Route exact path='/dashboard/recentbookings/room-bookings/extend/:bookingid' component={Bookingextend}/>\n\n                <Route exact path='/dashboard/recentbookings/shop-bookings/cancel/:bookingid' component={Bookingcancel_shop}/>\n                <Route exact path='/dashboard/recentbookings/shop-bookings/extend/:bookingid' component={Bookingextend_shop}/>\n\n                <Route exact path='/dashboard/recentbookings/housing-bookings/cancel/:bookingid' component={Bookingcancel_apartment}/>\n                <Route exact path='/dashboard/recentbookings/housing-bookings/extend/:bookingid' component={Bookingextend_apartment}/>\n\n                <Route exact path='/dashboard/recentbookings/room-bookings/:bookingid/feedback' component={ReviewForm}/>\n                <Route exact path='/dashboard/recentbookings/shop-bookings/:bookingid/feedback' component={ReviewForm}/>\n                <Route exact path='/dashboard/recentbookings/housing-bookings/:bookingid/feedback' component={ReviewForm}/>\n\n                <Route exact path='/admin/jdwai2021801yadb28ykha2sad1893812/awuhd812832232w7dyqw1/ada' component={Admin}/>\n\n\n                <Route exact path='/dashboard/complaints/room' component={Complaintroom}/>\n                <Route exact path='/complaints/room/:complaint_id' component={Complaintroomdetails}/>\n                <Route exact path='/dashboard/complaints/room/create' component={Complaintform}/>\n\n                <Route exact path='/dashboard/complaints/shop' component={Complaintshop}/>\n                <Route exact path='/complaints/shop/:complaint_id' component={Complaintshopdetails}/>\n                <Route exact path='/dashboard/complaints/shop/create' component={Complaintformshop}/>\n\n                <Route exact path='/dashboard/complaints/housing' component={Complainthousing}/>\n                <Route exact path='/complaints/housing/:complaint_id' component={Complainthousingdetails}/>\n                <Route exact path='/dashboard/complaints/housing/create' component={Complaintformhousing}/>\n                <Route exact path='/about-us' component={About} />\n\n              </div>\n              </>\n            </Switch>\n          </Layout>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Activate.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Login.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Home.js",["949","950","951","952","953","954","955","956","957","958"],"import React,{useState} from 'react'\nimport Welcome from './Welcome'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport { withStyles,makeStyles} from '@material-ui/core/styles';\nimport 'antd/dist/antd.css';\nimport axios from 'axios'\n\nimport Grid from '@material-ui/core/Grid';\nimport Scrollroom from '../components/scrollroom';\nimport Scrollshop from '../components/scrollshops';\nimport Scrollapartment from '../components/scrollapartment';\nimport Scrollcoupons from '../components/scrollcoupons';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport {Link,Redirect} from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper';\nimport '../components/css/App.css';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport StorefrontIcon from '@material-ui/icons/Storefront';\nimport ApartmentIcon from '@material-ui/icons/Apartment';\nimport TextField from '@material-ui/core/TextField';\nimport DatePick from '../components/datepick'\nimport Button from '@material-ui/core/Button';\nimport  {useMediaQuery} from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport Box from '@material-ui/core/Box';\nimport \"../components/css/App.css\"\n\nimport CookieConsent from \"react-cookie-consent\";\nimport bg from '../bg1.jpg';\n\n\nimport Footer from '../components/footer';\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst useStyles = makeStyles((theme) => ({\n    myclass: {\n        marginLeft:'4%'\n    },\n    myclass1: {\n        marginLeft:'2%',\n        \n    },\n    yoyoclass:{\n      backgroundImage: `url(${bg})`,\n      content: \"\",\n      \n        backgroundRepeat:'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n\n      width:'100%',\n      maxWidth:'1200px',\n      opacity:1,\n     \n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px',\n\n     \n  \n  \n     \n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n\n\n      [theme.breakpoints.up('md')]: {\n        backgroundImage: `url(https://image.freepik.com/free-photo/living-room-arrangement-with-yoga-mat_23-2148741917.jpg)`,\n        content: \"\",\n        \n          backgroundRepeat:'no-repeat',\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n  \n        width:'100%',\n        maxWidth:'1200px',\n        opacity:1,\n       \n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px',\n  \n       \n    \n    \n       \n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n    },\n    navclass:{\n        opacity:'1 !important',\n        \n        \n        textAlign: 'center',\n        color:'black',\n        fontWeight: 'bold'\n    },\n    navclass1:{\n        opacity:'1 !important',\n        \n        textAlign: 'center',\n        width:'90vw',\n    },\n    navclass122:{\n        opacity:'1 !important',\n        \n        textAlign: 'center',\n        color:'black',\n        fontWeight: 'bold',\n\n       \n    },\n\n    newclass12:{\n    paddingLeft:'3%',\n    },\n    myclass2: {\n        // backgroundColor: '#2d3436',\n        backgroundColor: '#081C15',\n        paddingLeft:'1%',\n    },\n    textclass: {\n        color:'white',\n        padding:'10px',\n    },\n    textclass2:{\n\n    },\n    gridclassnew:{\n        paddingTop:'3%',\n    },\n    bgclass:{\n        backgroundColor: '#457B9D',\n        // backgroundImage: '#457B9D',\n        elevation:30,\n    },\n    bgclass1:{\n        backgroundColor: '#575757',\n    },\n    bgclass2:{\n        backgroundImage: `url(\"https://image.freepik.com/free-photo/living-room-arrangement-with-yoga-mat_23-2148741917.jpg\")` ,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        width:'90vw',\n        maxWidth:'1200px',\n        \n    },\n    white:{\n        backgroundColor: '#ffffff'\n    },\n    headerclass:{\n        \n      },\n      containerclass:{\n       \n      },\n      footer1:{\n        backgroundColor: '#081C15',\n        // backgroundImage: `url(${bgd})`, \n        // backgroundImage: `url(\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRnyKdT_YR9I2OOqWE_Am3fAifdWNYW0EN7Lw&usqp=CAU\")` ,\n        \n      },\n      footer2:{\n        backgroundColor: '#081C15',\n    },\n      paperclass:{\n          width:'100%',\n          height:'100%',\n      },\n      gridclass1:{\n         \n      },\n      paperclass1:{\n          width:'90vw',\n          maxWidth:'1200px',\n          backgroundColor: '#575757',\n      },\n\n      root12: {\n       marginRight:'8px',\n       marginBottom:'8px'\n      },\n  \n  }));\n\n\n  const StyledTextField = withStyles((theme) => ({\n    root: {\n      margin: theme.spacing(2),\n     \n      \"& .MuiInputBase-root\": {\n        color: 'black',\n        width:'37vw',\n        maxWidth:200,\n        \n        height: 60,\n        \"& input\": {\n          textAlign: \"center\",\n         \n        }\n      },\n\n      '& input:valid + fieldset': {\n        borderColor: 'black',\n        borderWidth: 2,\n        \n      },\n      '& input:invalid + fieldset': {\n        borderColor: 'black',\n        borderWidth: 2,\n      },\n      '& input:valid:focus + fieldset': {\n        borderLeftWidth: 6,\n        borderColor: 'black',\n        padding: '4px !important', // override inline-style\n      },\n      \"& .MuiFormLabel-root\": {\n        color: 'black',\n        fontWeight: 'bold',\n       \n      }\n    }\n  }))(TextField);\n\n\nfunction Home(props) {\n    const classes = useStyles();\n    const [luxrooms,setluxrooms] = React.useState([])\n    const [classroom,setclassroom] = React.useState([])\n    const [singleroom,setsingleroom] = React.useState([])\n    const [shop,setshop] = React.useState([])\n    const [apartment,setapartment] = React.useState([])\n    const [coupons,setcoupons] = React.useState([])\n    const isSmall = useMediaQuery(\"(max-width: 600px)\");\n\n    const [display,setdisplay] = useState(false);\n    var warning=false;\n    if(props.location.state)\n    {warning = props.location.state.property_id;}\n\n    const [totalbookings,settotalbookings] = React.useState('')\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setdisplay(false);\n      };\n\n    React.useEffect(() => {\n        if(warning==true)\n        {\n          setdisplay(true);\n        }\n        else{\n          setdisplay(false);\n        }\n      },[warning])\n  \n      function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n      }\n\n\n    React.useEffect(async() => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n          };\n          try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourceaxcnfrudadv34/rooms/`,{\n            params:{\n             page:1,\n             category: 'Deluxe room',\n             ordering:'-trust_points',\n    \n            },\n            config:config\n          });\n          \n          setluxrooms(res.data.results);\n          \n          \n          }\n          catch{\n            \n          }\n    },[])\n\n    React.useEffect(async() => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n          };\n          try{const res1 = await axios.get(`${process.env.REACT_APP_API_URL}/sourceaxcnfrudadv34/rooms/`,{\n            params:{\n             page:1,\n             category: 'Classic room',\n             ordering:'-trust_points',\n    \n            },\n            config:config\n          });\n          \n          setclassroom(res1.data.results);\n          \n          }\n          catch{\n            \n          }\n    },[])\n\n    React.useEffect(async() => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n          };\n          try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourceaxcnfrudadv34/rooms/`,{\n            params:{\n             page:1,\n             category: 'Single',\n             ordering:'-trust_points',\n    \n            },\n            config:config\n          });\n          \n          setsingleroom(res.data.results);\n          \n          }\n          catch{\n            \n          }\n    },[])\n\n\n  \n\n    React.useEffect(async() => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n          };\n          try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourceadadk2647kfs/shops/`,{\n            params:{\n             page:1,\n             \n             ordering:'-trust_points',\n    \n            },\n            config:config\n          });\n          \n          setshop(res.data.results);\n          \n          \n          }\n          catch{\n            \n          }\n    },[])\n\n    React.useEffect(async() => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n          };\n          try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcebvdfesl2746/apartments/`,{\n            params:{\n             page:1,\n             \n             ordering:'-trust_points',\n    \n            },\n            config:config\n          });\n          \n          setapartment(res.data.results);\n          \n          \n          }\n          catch{\n            \n          }\n    },[])\n\n    React.useEffect(async() => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n          };\n          try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourceadbwub2812gbwga981/coupon/list/`,{\n            params:{\n             page:1,\n             \n             ordering:'-off',\n    \n            },\n            config:config\n          });\n        \n          setcoupons(res.data.results);\n          \n          \n          }\n          catch{\n            \n          }\n    },[])\n\n    const [value, setValue] = React.useState('Rooms');\n    const [roomsearch,setroomsearch] = React.useState(false)\n    const [shopsearch,setshopsearch] = React.useState(false)\n    const [apartmentsearch,setapartmentsearch] = React.useState(false)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const [input,setinput] = React.useState({\n      city:'',\n      state:'',\n      country:'',\n      date:'',\n  })\n\n  const handleinput = e => {\n      \n    \n      setinput({...input,[e.target.name]: e.target.value})\n  }\n\n  const handleclick = e => {\n      e.preventDefault();\n      if(value ==='Rooms')\n      {\n        setroomsearch(true);\n      }\n\n      if(value ==='Shops')\n      {\n        setshopsearch(true);\n      }\n\n      if(value ==='Housing')\n      {\n        setapartmentsearch(true);\n      }\n  }\n\n  if(roomsearch===true)\n  {\n      return <Redirect to={`/rooms/?city=${input.city.toUpperCase()}&state=${input.state.toUpperCase()}&country=${input.country.toUpperCase()}&booking_date=${input.date}`} style={{textDecoration:'none',color:'black'}} />\n  }\n  if(shopsearch===true)\n  {\n      return <Redirect to={`/shops/?city=${input.city.toUpperCase()}&state=${input.state.toUpperCase()}&country=${input.country.toUpperCase()}&booking_date=${input.date}`} style={{textDecoration:'none',color:'black'}} />\n  }\n  if(apartmentsearch===true)\n  {\n      return <Redirect to={`/housing/?city=${input.city.toUpperCase()}&state=${input.state.toUpperCase()}&country=${input.country.toUpperCase()}&booking_date=${input.date}`} style={{textDecoration:'none',color:'black'}} />\n  }\n\n    \n\n    \n    return (\n        <div>\n           \n            \n            <div className={classes.containerclass}>\n                <div className={classes.headerclass}>\n                    <Welcome />\n                </div>\n            </div>\n            {\n\n            }\n\n            {\n              props.isAuthenticated ? null :  <CookieConsent\n              location=\"bottom\"\n              buttonText=\"Got it\"\n              cookieName=\"csrftoken\"\n              style={{ background: \"#b6c9f0\" ,color:'#FFFFFF'}}\n              buttonStyle={{ backgroundColor: \"Transparent\", fontSize: \"14px\", border:\"2px solid #FFFFFF\",color:'#FFFFFF' }}\n              expires={150}\n              \n          >\n              This website uses cookies to enhance the user experience.{\" \"}\n              <span style={{ fontSize: \"13px\" }}></span>\n          </CookieConsent>\n            }\n\n{\n              props.isAuthenticated ? null :  <CookieConsent\n              location=\"bottom\"\n              buttonText=\"Got it\"\n              cookieName=\"sessionid\"\n              style={{ background: \"#b6c9f0\" ,color:'#FFFFFF'}}\n              buttonStyle={{ backgroundColor: \"Transparent\", fontSize: \"14px\", border:\"2px solid #FFFFFF\",color:'#FFFFFF' }}\n              expires={150}\n              \n          >\n              This website uses cookies to enhance the user experience.{\" \"}\n              <span style={{ fontSize: \"13px\" }}></span>\n          </CookieConsent>\n            }\n            \n           \n            \n\n            <Snackbar open={display} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"info\">\n              A seller can't place a booking\n            </Alert>\n          </Snackbar>\n            \n            \n\n            {\n                luxrooms.length>=1 ? <><Paper elevation={5} className={classes.paperclass}>\n                <div className=\"navbarclass1\">\n                <div   className={classes.myclass}>\n                <Typography variant='h6' className={classes.textclass}>\n                <Box fontSize={20}>\n                            <Link to='/rooms/?category=Deluxe+room' style={{textDecoration:'none',color:'white'}}>Our Deluxe Rooms...</Link>\n                        </Box>\n                </Typography>\n                </div>\n                </div>\n                </Paper>\n                <br />\n                <div className={classes.myclass1}>\n                <Scrollroom rooms={luxrooms}/>\n                </div>\n                \n    \n                <br /></> : null\n            }\n\n\n            \n            \n            {\n                classroom.length>=1 ? <><Paper elevation={5} className={classes.paperclass}>\n                <div className=\"navbarclass1\">\n                <div   className={classes.myclass}>\n                <Typography variant='h6' className={classes.textclass}>\n                <Box fontSize={20}>\n\n                    <Link to='/rooms/?category=Classic+room' style={{textDecoration:'none',color:'white'}}>Our Classic Rooms...</Link>\n                    </Box>\n                </Typography>\n                </div>\n                </div>\n                </Paper>\n                <br />\n                <div className={classes.myclass1}>\n                <Scrollroom rooms={classroom}/>\n                </div>\n    \n                <br /></> : null\n            }\n            \n\n            {\n                singleroom.length>=1 ? <><Paper elevation={5} className={classes.paperclass}>\n                <div className=\"navbarclass1\">\n                <div   className={classes.myclass}>\n                <Typography variant='h6' className={classes.textclass}>\n                <Box fontSize={20}>\n                    <Link to='/rooms/?category=Single' style={{textDecoration:'none',color:'white'}}>Our Single Rooms...</Link>\n                    </Box>\n                </Typography>\n                </div>\n                </div>\n                </Paper>\n                <br />\n                <div className={classes.myclass1}>\n                <Scrollroom rooms={singleroom}/></div> <br /></> : null\n            }\n\n\n\n            {\n                shop.length>=1 ? <><Paper elevation={5} className={classes.paperclass}>\n                <div className=\"navbarclass1\">\n                <div   className={classes.myclass}>\n                <Typography variant='h6' className={classes.textclass}>\n                <Box fontSize={20}>\n\n                    <Link to='/shops/' style={{textDecoration:'none',color:'white'}}>Our Shops...</Link>\n                    </Box>\n                </Typography>\n                </div>\n                </div>\n                </Paper>\n                <br />\n                <div className={classes.myclass1}>\n                <Scrollshop rooms={shop}/></div> <br /></> : null\n            }\n\n\n\n\n            {\n                apartment.length>=1 ? <><Paper elevation={5} className={classes.paperclass}>\n                <div className=\"navbarclass1\">\n                <div   className={classes.myclass}>\n                <Typography variant='h6' className={classes.textclass}>\n                <Box fontSize={20}>\n\n<Link to='/apartments/' style={{textDecoration:'none',color:'white'}}>Our Housing...</Link>\n</Box>\n                </Typography>\n                </div>\n                </div>\n                </Paper>\n                <br />\n                <div className={classes.myclass1}>\n                <Scrollapartment rooms={apartment}/></div> <br /></> : null\n            }\n            \n            <Paper elevation={5} className={classes.paperclass}>\n            <div className=\"navbarclass1\">\n            <div   className={classes.myclass}>\n            <Typography variant='h6' className={classes.textclass}>\n                <Box fontSize={20}>\n\n                %Offers and discount\n                </Box>\n            </Typography>\n            </div>\n            </div>\n            </Paper>\n            <br />\n            {\n                coupons.length>=1 ? <>\n                \n                <div className={classes.myclass1}>\n                <Scrollcoupons rooms={coupons}/></div> <br /></> : null\n            }\n            <div>\n            </div>\n\n\n\n            <br />\n            <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            \n            >\n\n            <div className={`searchcardme`}>\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            \n            >\n                {/* <div className={demowrap}></div> */}\n            <Paper elevation={5} className={`backgroundclass1 ${classes.yoyoclass}`}>\n                <br />\n\n                <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.gridclassnew}\n            \n            >\n            \n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            \n            >\n           \n            <Tabs\n                value={value}\n                indicatorColor=\"primary\"\n                \n                onChange={handleChange}\n                aria-label=\"disabled tabs example\"\n                className={classes.navclass}\n            >\n                <Tab label=\"Rooms\" icon={<MeetingRoomIcon />} className={classes.navclass122} value='Rooms'/>\n                <Tab label=\"Shops\" icon={<StorefrontIcon />} className={classes.navclass122} value='Shops'/>\n                <Tab label=\"Housing\" icon={<ApartmentIcon />} className={classes.navclass122} value='Housing'/>\n            </Tabs>\n          \n            </Grid>\n            <br />\n            \n            \n          <Hidden smDown>\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.navclass}\n            \n           \n            \n            >\n                {/* <div className={classes.white}> */}\n\n                    <div className={classes.root12}>\n                    <StyledTextField id=\"city\" label=\"City\" variant=\"outlined\" name=\"city\" value={input.city} onInput={handleinput}/>\n                     </div>\n                {/* </div> */}\n                {/* <div className={classes.white}> */}\n\n                    <div className={classes.root12}>\n                    <StyledTextField id=\"state\" label=\"State\" variant=\"outlined\" name=\"state\" value={input.state} onInput={handleinput}/>\n                    </div>\n                {/* </div> */}\n                {/* <div className={classes.white}> */}\n\n                    <div className={classes.root12}>\n                    <StyledTextField id=\"country\" label=\"Country\" variant=\"outlined\" name=\"country\" value={input.country} onInput={handleinput}/>\n                    </div>\n            \n\n            </Grid>\n\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.navclass}\n            \n            >\n\n            <DatePick value={input} setvalue={setinput} name={'date'} />\n\n            </Grid>\n            </Hidden>\n\n\n            <Hidden mdUp>\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n           \n            \n           \n            \n            >\n              \n\n                  \n              <Grid item xs={6}>\n              <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n           \n            \n           \n            \n            >\n                    <StyledTextField id=\"city\" label=\"City\" variant=\"outlined\" name=\"city\" value={input.city} onInput={handleinput}/>\n                    </Grid>\n                    </Grid>\n                    <Grid item xs={6}>\n                    <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n           \n            \n           \n            \n            >\n                    <StyledTextField id=\"state\" label=\"State\" variant=\"outlined\" name=\"state\" value={input.state} onInput={handleinput}/>\n                    </Grid>\n                    </Grid>\n                    </Grid>\n                    <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n           \n            \n           \n            \n            >\n                   <Grid item xs={6}>\n                   <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n           \n            \n           \n            \n            >\n                    <StyledTextField id=\"country\" label=\"Country\" variant=\"outlined\" name=\"country\" value={input.country} onInput={handleinput}/>\n                    </Grid>\n                    </Grid>\n                    <Grid item xs={6}>\n                    <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n           \n            \n           \n            \n            >\n                    <DatePick value={input} setvalue={setinput} name={'date'} />\n                    </Grid></Grid>\n                    </Grid>\n\n          \n            </Hidden>\n           \n\n           \n\n            <br />\n\n            \n\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.navclass}\n            \n            >\n\n            <Button variant=\"contained\" color=\"primary\" onClick={handleclick}>Search</Button>\n\n            </Grid>\n            <br />\n\n            </Grid>\n                \n            </Paper>\n            </Grid>\n            </div>\n\n            </Grid>\n\n            <br />\n            <br />\n\n\n            \n\n                {/* <br></br> */}\n    <Footer />\n                {/* <Divider  /> */}\n         {/* <div >\n         <Box  ml={3}>\n             <br></br>\n             <Typography variant='h6' className={classes.textclass}>\n                <Box >\n                    Contact Us :-\n                 </Box>\n             </Typography>\n             <Typography variant='subtitle1' className={classes.textclass}>\n                <Box  >\n                     Email\n                 </Box>\n             </Typography>\n             <Typography variant='subtitle1' className={classes.textclass}>\n                <Box  > \n                     Phone no.\n                 </Box>\n             </Typography>\n             <br></br>\n         </Box>\n         </div> */}\n       \n             \n\n            \n            \n                        \n    </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n \n});\n\nexport default connect(mapStateToProps)(Home);\n\n\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/ResetPasswordConfirm.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/PaginateCardList.js",["959","960","961","962","963"],"import React, { useState, useEffect } from 'react';\n/* import Pagination from '../components/Pagination'; */\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport ResponsiveDrawer from './searchlist';\nimport Eror from '../components/eror';\nimport Bookcardmodel from '../components/bookcardmodel1';\n\nimport { connect } from 'react-redux'\n\nimport {Redirect} from 'react-router-dom'\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst App = ({isAuthenticated}) => {\n\n  var temp=''\n  const urlParams = new URLSearchParams(window.location.search);\n  const myparam = urlParams.get('category')\n\n  if(myparam)\n  {\n    temp=myparam\n  }\n\n  var temp1=''\n  const myparam1 = urlParams.get('city')\n  \n  if(myparam1)\n  {\n    temp1=myparam1\n  }\n\n  var temp2=''\n  const myparam2 = urlParams.get('state')\n  \n  if(myparam2)\n  {\n    temp2=myparam2\n  }\n\n  var temp3=''\n  const myparam3 = urlParams.get('country')\n  \n  if(myparam3)\n  {\n    temp3=myparam3\n  }\n\n  \n  \n  \n  \n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(2);\n  const [totalposts, settotalPosts] = useState(0);\n  const [max_price, setmax_price] = useState(0);\n  const [min_price, setmin_price] = useState(0);\n\n  const [mapview,setmap] = useState(false);\n\n  const [error, setError] = useState('');\n  const [wishlistitems,changeitemswishlist] = useState(0)\n  const [cartitems,changeitemscart] = useState(0)\n  const [mypost,setmypost] = useState()\n  const [openmycard,setmycard] = useState(false)\n  const [loginpage,setloginpage] = useState(false)\n\n  const date = new Date(Date.now())\n\n    var x;\n    var y;\n    if(parseInt(date.getMonth()+1)<10)\n    {\n      x = `0${date.getMonth()+1}`;\n    }\n    if(parseInt(date.getMonth()+1)>=10)\n    {\n      x = `${date.getMonth()+1}`;\n    }\n    if(parseInt(date.getDate())<10)\n    {\n      y = `0${date.getDate()}`;\n    }\n    if(parseInt(date.getDate())>=10)\n    {\n      y = `${date.getDate()}`;\n    }\n\n    var temp4=`${date.getFullYear()}-${x}-${y}`\n  const myparam4 = urlParams.get('booking_date')\n  \n  if(myparam4)\n  {\n    temp4=myparam4\n  }\n\n  const [filters, setfilters] = useState({\n    nonveg_food:'',\n    veg_food:'',\n    guest_allowed:'',\n    iron:'',\n    laundry:'',\n    cooler:'',\n    AC:'',\n    room_TV:'',\n    power_backup:'',\n    floor_filter:'',\n    purified_water:'',\n    min_rating:'',\n    cctv_building:'',\n    bed_type:'',\n    building_guard:'',\n    balcony:'',\n    separate_washroom:'',\n    category:temp,\n\n    location:'',\n    city:temp1,\n    state:temp2,\n    country:temp3,\n    landmark:'',\n    pincode:'',\n\n    wifi:'',\n    breakfast:'',\n    lunch:'',\n    dinner:'',\n    house_TV:'',\n    geyser:'',\n    electricity:'',\n    \n    min_price:0,\n    max_price:400000,\n    capacity_filter:'',\n    trust_points_filter:'',\n    booked:'',\n    windows:'',\n    bookedtill:temp4,\n    search:'',\n    room_cleaning:'',\n    ordering:'-trust_points',\n    gender:'',\n    discount:'',\n    \n  });\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n      };\n      const page = currentPage\n      /* const params = new URLSearchParams([page,currentPage]) */\n      if(mapview===false){\n      try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourceaxcnfrudadv34/rooms/`,{\n        params:{\n          room_cleaning:filters.room_cleaning,\n          page:currentPage,\n          booked:filters.booked,\n          min_price:filters.min_price,\n          max_price:filters.max_price,\n          category:filters.category,\n          nonveg_food:filters.nonveg_food,\n          veg_food:filters.veg_food,\n          bookedtill_filter:filters.bookedtill,\n          min_rating:filters.min_rating,\n          capacity_filter:filters.capacity_filter,\n          trust_points_filter:filters.trust_points_filter,\n          windows_filter:filters.windows,\n          building_guard:filters.building_guard,\n          cctv_building:filters.cctv_building,\n          iron:filters.iron,\n          laundry:filters.laundry,\n          cooler:filters.cooler,\n          AC:filters.AC,\n          room_TV:filters.room_TV,\n          power_backup:filters.power_backup,\n          purified_water:filters.purified_water,\n          balcony_filter:filters.balcony,\n          separate_washroom:filters.separate_washroom,\n          wifi:filters.wifi,\n          breakfast:filters.breakfast,\n          lunch:filters.lunch,\n          dinner:filters.dinner,\n          house_TV:filters.house_TV,\n          geyser:filters.geyser,\n          guest_allowed:filters.guest_allowed,\n          floor_filter:filters.floor_filter,\n          search:filters.search,\n          ordering:filters.ordering,\n          gender:filters.gender,\n          discount:filters.discount,\n\n          city1:filters.city.toUpperCase(),\n          state1:filters.state.toUpperCase(),\n          country1:filters.country.toUpperCase(),\n          location1:filters.location.toUpperCase(),\n          landmark1:filters.landmark.toUpperCase(),\n          pincode1:filters.pincode,\n\n        },\n        config:config\n      });\n\n      const res2 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcekadwbda24/minmax_room/1/`,{\n        config:config\n      });\n\n      \n      setmax_price(res2.data.max_price);\n      setmin_price(res2.data.min_price);\n      \n      setPosts(res.data.results);\n      setLoading(false);\n      settotalPosts(res.data.count);\n      }\n      catch{\n        setLoading(false);\n      }\n    }\n    };\n   \n\n\n    fetchPosts();\n  }, [currentPage,filters]);\n\n\n  useEffect(async () => {\n    if(isAuthenticated){\n    const config = {\n      headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `JWT ${localStorage.getItem('access')}`,\n      },\n    };\n    \n      try {\n        await axios.put(`${process.env.REACT_APP_API_URL}/souraawdgrg33w24/wishlist/rooms/1/`,config,config)\n        .then(res1 => {\n          changeitemswishlist(res1.data);\n        })\n        .catch(err => {\n          \n        })\n        \n        }\n        catch{\n        }\n    }\n\n  },[isAuthenticated])\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if(error!=='')\n  {\n    return (\n      <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      >\n        <Grid item xs={5}><Eror eror={error}/></Grid>\n      </Grid>\n    );\n  }\n  if(loginpage)\n  {\n    return <Redirect to='/login' />\n  }\n\n  return (\n    <div>\n    <Bookcardmodel open={openmycard} change={setmycard} details={mypost} loginpage={loginpage} setloginpage={setloginpage}/>\n      <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      >\n        <Grid item lg={12} xs={12}>\n        <ResponsiveDrawer mypost={mypost} setmypost={setmypost} openmycard={openmycard} setmycard={setmycard} mapview={mapview} setmap={setmap} setfilters={setfilters} max_price={max_price} min_price={min_price} filters={filters} posts={posts} loading={loading} paginate={paginate} postsPerPage={postsPerPage} currentPage={currentPage} totalposts={totalposts} wishlistitems={wishlistitems} cartitems={cartitems} changeitemswishlist={changeitemswishlist} changeitemscart={changeitemscart}/>\n        \n\n        {/* <Pagination\n          postsPerPage={postsPerPage}\n          totalPosts={posts.length}\n          paginate={paginate}\n        /> */}\n      </Grid>\n      </Grid>\n\n      </div>\n  );\n};\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  access: state.authreducers.access\n});\n\nexport default connect(mapStateToProps)(App);","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/apartment_details.js",["964","965","966","967","968","969","970","971","972","973","974","975","976"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box'\nimport SpecificRoomCarousel from '../components/specificapartmentcarosel'\nimport RatingAndReviews from '../components/RatingAndReviews'\nimport RoomDescriptionContent from '../components/RoomDescriptionContent'\n\nimport BookCard from '../components/bookcard_apartment'\nimport RatingWithCompliment from '../components/RatingWithCompliment'\n\nimport Hidden from '@material-ui/core/Hidden';\nimport BottomAppBar from '../components/mobileappbar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport Icon from '@material-ui/core/Icon';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nimport CustomizedTabs1 from '../components/scrolloffers';\nimport Mobileimages from '../components/mobileimages_apartments';\nimport SimpleModal1 from '../components/bookcardmodel_apartment';\n\nimport RatingWithCompliments from '../components/MobileRatingSearchCard' \nimport Mapview from '../components/mapcomp'\nimport Footer from '../components/footer';\n\n\n\nimport axios from 'axios';\n\n\nimport {Redirect} from 'react-router-dom'\n\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { connect } from 'react-redux'\n\nimport Mapviewmobile from '../components/mapmobile'\nimport SimpleSnackbar from '../components/wishlistsmackbar';\nimport SimpleSnackbar1 from '../components/cartsmackbar';\n\nimport RenteneAppBar from '../components/Navbar'\n\nimport ReviewSeller from '../components/seller_reviews_pop';\nimport Button from '@material-ui/core/Button';\nimport ScrollableIcons from '../components/ScrollableIcons'\nimport Load1 from '../components/Spinner';\n\n\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflowX: 'hidden'\n  },\n  root1: {\n  \n   \n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  api:{\n    height:'450px'\n  },\n  mystyle: {\n    position: '-webkit-sticky',\n  position: 'sticky',\n  top: 0,\n  },\n  media1 : {\n    width:'100%',\n    right:0,\n  },\n  media2 : {\n    width:'100%',\n    right:0,\n  },\n  typo1 :{\n    fontSize: '200%',\n    fontWeight: 'normal',\n  },\n  typo2 :{\n    fontSize: '1rem',\n    fontWeight: 'normal',\n    marginLeft:'1rem',\n    color:'#f50057',\n  },\n  typo3:{\n    fontSize: '90%',\n  },\n  paraclass:{\n    marginTop:'15px',\n  },\n  margingrid : {\n    marginTop:'100px',\n  },\n  sizeclass: {\n    width:'50%',\n    fontSize: '1.5rem',\n  },\n  divclass:{\n    width:'100vw',\n    height:'30vh',\n    position:'absolute',\n    overflowX:'hidden',\n    display:'flex',\n    \n  },\n  apiclass:{\n    \n\n  },\n  paraclass1 :{\n    position:'relative',\n    float:'bottom',\n  },\n  mapclass:{\n\n  },\n  iconroot1: {\n    display: 'inline',\n    color:'#f44336',\n    \n  },\n  navclass:{\n    overflowX:'hidden',\n    position:'absolute',\n  },\n  scrollme:{\n    whiteSpace: 'nowrap',\n    flexWrap: 'nowrap',\n    width:'100vw',\n   \n    [theme.breakpoints.up('md')]: {\n      whiteSpace: 'nowrap',\n    flexWrap: 'nowrap',\n    width:'650px',\n   \n    },\n  \n  },\n  \n}));\n\nfunction FullWidthGrid(props) {\n\n\n \n\n  const roomid = props.match.params.apartmentid;\n\n  const classes = useStyles();\n  const [details, setDetails] = useState(false);\n  const [reviews, setReviews] = useState([])\n  const [loading, setLoading] = useState(false);\n  const [open_book,changeopen1] = useState(false)\n  const [loginpage,setloginpage] = useState(false);\n \n  const [params1,setparams] = useState({\n    page:1,\n    ordering:'-rating'\n  })\n  const [wishlistitems,changeitemswishlist] = useState(0)\n  const [cartitems,changeitemscart] = useState(0)\n  const [open1,setOpen1] = useState(false);\n  const [open2,setOpen2] = useState(false);\n  const [wishlist,changewishlist] = useState(false)\n  const [nav,setnav] = useState(false)\n  const [coupons,setcoupons] = useState([])\n\n  const [open,changeopen] = useState(false)\n\n\n\n \n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      setLoading(true);\n      const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n      };\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcebvdfesl2746/apartments/${roomid}/`,config);\n      \n      try{\n         \n        \n          setDetails(res.data);\n          setLoading(false);\n      \n\n      }  catch (err) {\n        // Handle Error Here\n        console.error(err);\n    }\n\n    \n    };\n\n   \n    fetchDetails();\n   \n  }, [props.isAuthenticated]);\n\n  useEffect( async() => {\n     \n    const config = {\n      headers: {\n          'Content-Type': 'application/json'\n      }\n    };\n    try{\n    const res1 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcemvdsnksnd59472/apartment/reviews/`,{\n      params:{\n        apartment_id:roomid,\n        page:params1.page,\n        ordering:params1.ordering,\n      },\n      config:config\n    });\n    \n   \n      \n        setReviews(res1.data.results);\n        \n        \n    }  catch (err) {\n      // Handle Error Here\n      console.error(err);\n  }\n  try{\n    const res12 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcesnajeijchi032uhd9w/coupon/give/`,{\n      params:{\n        roomid:roomid,\n        type:'apartment',\n      },\n      config:config\n    });\n    \n   \n       \n        setcoupons(res12.data);\n        \n        \n    }  catch (err) {\n      // Handle Error Here\n      console.error(err,'coupons_error');\n  }\n  },[])\n\n  useEffect( async() => {\n     \n    const config = {\n      headers: {\n          'Content-Type': 'application/json'\n      }\n    };\n    if(props.isAuthenticated){\n      const config = {\n        headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n      try {\n      await axios.get(`${process.env.REACT_APP_API_URL}/sourcenasdknahi29ad/wishlist/apartments/${roomid}/`,config,config)\n      .then(res => {\n        changewishlist(res.data);\n      })\n      .catch(err => {\n        \n      })\n      \n      }\n      catch{\n      }\n\n      try {\n        await axios.put(`${process.env.REACT_APP_API_URL}/sourcenasdknahi29ad/wishlist/apartments/1/`,config,config)\n        .then(res1 => {\n          changeitemswishlist(res1.data);\n        })\n        .catch(err => {\n          \n        })\n        \n        }\n        catch{\n        }\n    }\n  },[props.isAuthenticated])\n\n\n  const handleclick = async (event) => {\n    event.preventDefault();\n\n    if(props.isAuthenticated)\n    {\n\n      if(wishlist)\n      {\n        const config = {\n          headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `JWT ${localStorage.getItem('access')}`,\n          },\n        };\n        const res = await axios.delete(`${process.env.REACT_APP_API_URL}/sourcenasdknahi29ad/wishlist/apartments/${roomid}/`,config);\n\n        if(res.data == 'Removed from wishlist'){changewishlist(false); changeitemswishlist(wishlistitems-1); setnav(true);}\n      }\n    }else{\n      setOpen1(true);\n    }\n\n  }\n\n  const handleclick1 = async (event) => {\n    event.preventDefault();\n\n    if(props.isAuthenticated)\n    {\n      if(!wishlist)\n      {\n        const config = {\n          headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `JWT ${localStorage.getItem('access')}`,\n          },\n          params: {\n            apartment_id:roomid,\n          },\n        };\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/sourcenasdknahi29ad/wishlist/apartments/`,config,config);\n\n        if(res.data == 'Added to wishlist'){changewishlist(true);  changeitemswishlist(wishlistitems+1);  setnav(true);}\n      }\n    }else{\n      setOpen1(true);\n    }\n\n  }\n\n\n\n\nif(loginpage===true)\n{ \n  return <Redirect to='/login' />;\n}\n\n\n\nif(details){\n  return (\n\n    \n    \n    \n    \n    <div className={classes.root}>\n      <div className={classes.navclass}><RenteneAppBar no={wishlistitems} focus={true}/></div>\n      \n      \n      <SimpleSnackbar open={open1} setOpen={setOpen1}/>\n       <SimpleSnackbar1 open={open2} setOpen={setOpen2}/>\n\n       <ReviewSeller open={open} change={changeopen} id={details.seller_id}/>\n\n      <Hidden smDown>\n      <Grid container>\n\n        <Grid item xs={12} >\n          <SpecificRoomCarousel post={details}/>\n        </Grid>\n        <CssBaseline />\n        \n\n        <Container maxWidth='lg'>\n            <Grid container justify='space-between'>\n                <Grid item xs={7} >\n                    <Box mr={5} mt={7}>\n                  <Grid container >\n                  \n                      <Grid container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        >\n                          {/* Hostel Name and rating */}\n                            <Grid item xs={6} >\n                            \n                                <Typography variant=\"h4\" component=\"h4\">\n                                {details.title}\n                                </Typography>\n                                <Typography variant=\"h6\" component=\"h6\" gutterBottom >\n                                {details.location}\n                                </Typography>\n                            </Grid>\n                              \n                            <Grid item >\n                                <RatingWithCompliment rating={parseFloat(details.avg_rating)} reviews={parseFloat(details.reviews)}/>\n                            </Grid>\n                      </Grid>\n                      { \n        wishlist ? <Grid item ><IconButton color='error' onClick={(event) => {handleclick(event);}} className={classes.iconroot1}><FavoriteIcon /></IconButton> <Typography variant=\"body1\" color=\"error\">\n        {details.wishlist} have added this to their wishlist!\n        </Typography></Grid> : <Grid item ><IconButton color='error' onClick={(event) => {handleclick1(event);}} className={classes.iconroot1}><FavoriteBorderOutlinedIcon /></IconButton> <Typography variant=\"body1\"  color=\"error\">\n        {details.wishlist} have added this to their wishlist!\n        </Typography></Grid>\n        }\n  \n        <Grid item>\n        \n        </Grid>\n\n\n\n<List component=\"nav\" className={classes.root1} aria-label=\"offers\">\n          <Grid item >\n            <Divider variant='middle'/>\n            <ListItem>\n          <Typography variant=\"h5\" component=\"h4\" className={classes.typo2}>\n            *Offers Applicable\n            </Typography>\n            </ListItem>\n            </Grid>\n\n            <div className={classes.scrollme}>\n            \n            <CustomizedTabs1 post={coupons}/>\n          \n            </div>\n            \n            <Divider variant='middle'/>\n\n          \n          </List>\n\n                          <Grid item xs = {12}>\n                              <Typography variant='h5'>\n                                  Description\n                              </Typography>\n                              <RoomDescriptionContent details={details} type=\"apartment\"/>\n                          </Grid>\n                          <Grid item xs={12}>\n                          <Typography variant='h5'>\n                                  Facilities\n                              </Typography>\n                              <br />\n                              <ScrollableIcons post={details}/><br />\n                         <br />\n                          </Grid>\n                         \n                          \n                        \n                            <br />\n                            \n                            <div className={classes.apiclass}><Mapview value={details} /></div>\n                        \n\n                          <Grid item xs = {12}>\n                            <br /><br />\n                            <RatingAndReviews  reviews={reviews} params={params1} setparams={setparams} no={parseFloat(details.reviews)} rating={parseFloat(details.avg_rating)}/>\n                          </Grid>\n\n                          <Grid item>\n                          <br />\n                          <Button color=\"primary\" variant=\"contained\" onClick={(e) => {e.preventDefault();changeopen(true);}} >Owner Reviews</Button>\n                          \n                          </Grid>\n                      </Grid>\n                    </Box>\n                </Grid>\n\n                \n                <Grid item xs={4}>\n                  <Box mt={7} className={classes.mystyle}>\n                  \n                  <BookCard details={details} loginpage={loginpage} setloginpage={setloginpage}/>\n                  </Box>\n                </Grid>\n\n            </Grid>\n            <br />\n        </Container>\n      \n       \n              \n\n      </Grid>\n      <Footer />\n      </Hidden>\n\n\n\n      <Hidden mdUp>\n            \n\n         <Mobileimages post={details} wishlist={wishlist} handleclick1={handleclick1} handleclick={handleclick} />\n          \n         <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          > { \n            wishlist ? <><Grid item ><IconButton color='error' onClick={(event) => {handleclick(event);}} className={classes.iconroot1}><FavoriteIcon /></IconButton></Grid><Grid item><Typography variant=\"body1\" color=\"error\">\n            {details.wishlist} have added this to their wishlist!\n            </Typography></Grid></> : <><Grid item ><IconButton color='error' onClick={(event) => {handleclick1(event);}} className={classes.iconroot1}><FavoriteBorderOutlinedIcon /></IconButton></Grid><Grid item> <Typography variant=\"body1\"  color=\"error\">\n            {details.wishlist} have added this to their wishlist!\n            </Typography></Grid></>\n            }\n            </Grid>\n          \n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-around\"\n            alignItems=\"center\"\n          >\n  \n            <Grid item xs={1}></Grid>\n\n            <Grid item xs={6}>\n            <Typography variant=\"h5\" component=\"h4\" className={classes.typo1}>\n            {details.title}\n            </Typography>\n            <Typography variant=\"body1\" component=\"h6\" gutterBottom  className={classes.typo3}>\n                              <Icon color=\"error\" fontSize=\"inherit\"><LocationOnIcon /></Icon>  {details.location}, {details.city}\n                                </Typography>\n                                <Typography variant=\"body1\" component=\"h6\" gutterBottom className={classes.typo3}>\n                                ,  {details.state}, {details.country}\n                                </Typography>\n            </Grid>\n\n            <Grid item xs={4}>\n            <RatingWithCompliments reviews={parseFloat(details.reviews)} rating={parseFloat(details.avg_rating)}/>\n            </Grid>\n\n            \n            \n          </Grid>\n          \n          \n          <List component=\"nav\" className={classes.root1} aria-label=\"offers\">\n          <Grid item >\n            <Divider variant='middle'/>\n            <ListItem>\n          <Typography variant=\"h5\" component=\"h4\" className={classes.typo2}>\n            *Offers Applicable\n            </Typography>\n            </ListItem>\n            </Grid>\n\n            <div className={classes.scrollme}>\n          \n            <CustomizedTabs1 post={coupons}/>\n           \n            </div>\n            \n            <Divider variant='middle'/>\n\n          \n          </List>\n         \n          \n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-around\"\n            alignItems=\"center\"\n          >\n          <Grid item xs={1}></Grid>\n          <Grid item xs={10} className={classes.paraclass}>\n          <Typography variant='h5'>\n                                  Facilities\n                              </Typography>\n                              <br />\n                              <ScrollableIcons post={details}/>\n                         \n          </Grid>\n          <Grid item xs={1}></Grid>\n          </Grid>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n          <Grid item xs={1}></Grid>\n          <Grid item xs={10} className={classes.paraclass}>\n            <Typography variant='h5'>\n                Description\n            </Typography>\n            <RoomDescriptionContent details={details}  type=\"apartment\"/>\n          </Grid>\n          <Grid item xs={1}></Grid>\n          </Grid>\n\n          <br />\n\n          <br />\n          \n          \n          <Mapviewmobile value={details}/>\n       \n\n          <br />\n          <br />\n\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n          \n          <Grid item xs={10} className={classes.paraclass1}>\n            <RatingAndReviews reviews={reviews} params={params1} setparams={setparams} no={parseFloat(details.reviews)} rating={parseFloat(details.avg_rating)}/>\n          </Grid>\n          \n          </Grid>\n            <br />\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n          \n          <br />\n         <Button color=\"primary\" variant=\"contained\" onClick={(e) => {e.preventDefault();changeopen(true);}} >Owner Reviews</Button>\n         </Grid>   \n         <br />\n         <Footer />\n          \n\n          \n\n          \n         \n        \n\n       \n        <SimpleModal1 details={details} open={open_book} change={changeopen1} loginpage={loginpage} setloginpage={setloginpage}/>\n        <BottomAppBar details={details} open1={open_book} changeopen1={changeopen1}/>\n\n      </Hidden>\n\n\n    </div>\n     \n  );\n}\nelse{\n  return <div>\n    <Load1 loading={true}/>\n  </div>;\n}\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  access: state.authreducers.access\n});\n\nexport default connect(mapStateToProps)(FullWidthGrid);\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/shopdetails.js",["977","978","979","980","981","982","983","984","985","986","987","988","989"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box'\nimport SpecificRoomCarousel from '../components/SpecificRoomCarousel'\nimport RatingAndReviews from '../components/RatingAndReviews'\nimport RoomDescriptionContent from '../components/RoomDescriptionContent'\n\nimport BookCard from '../components/bookcard_shop'\nimport RatingWithCompliment from '../components/RatingWithCompliment'\n\nimport Hidden from '@material-ui/core/Hidden';\nimport BottomAppBar from '../components/mobileappbar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport Icon from '@material-ui/core/Icon';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nimport CustomizedTabs1 from '../components/scrolloffers';\nimport Mobileimages from '../components/mobileimages';\nimport SimpleModal1 from '../components/bookcardmodel_shop';\n\nimport RatingWithCompliments from '../components/MobileRatingSearchCard' \nimport Mapview from '../components/mapcomp'\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { connect } from 'react-redux'\nimport ScrollableIcons from '../components/ScrollableIcons'\n\nimport Footer from '../components/footer'\nimport Load1 from '../components/Spinner';\n\n\n\nimport axios from 'axios';\n\n\nimport {Redirect} from 'react-router-dom'\n\n\n\n\nimport Mapviewmobile from '../components/mapmobile'\nimport SimpleSnackbar from '../components/wishlistsmackbar';\nimport SimpleSnackbar1 from '../components/cartsmackbar';\n\nimport RenteneAppBar from '../components/Navbar'\n\nimport ReviewSeller from '../components/seller_reviews_pop';\nimport Button from '@material-ui/core/Button';\n\n\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflowX: 'hidden'\n  },\n  root1: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  api:{\n   \n  },\n  mystyle: {\n    position: '-webkit-sticky',\n  position: 'sticky',\n  top: 0,\n  },\n  media1 : {\n    width:'100%',\n    right:0,\n  },\n  media2 : {\n    width:'100%',\n    right:0,\n  },\n  typo1 :{\n    fontSize: '200%',\n    fontWeight: 'normal',\n  },\n  typo2 :{\n    fontSize: '1rem',\n    fontWeight: 'normal',\n    marginLeft:'1rem',\n    color:'#f50057',\n  },\n  typo3:{\n    fontSize: '90%',\n  },\n  paraclass:{\n    marginTop:'15px',\n  },\n  margingrid : {\n    marginTop:'100px',\n  },\n  sizeclass: {\n    width:'50%',\n    fontSize: '1.5rem',\n  },\n  divclass:{\n    width:'100vw',\n    height:'30vh',\n    position:'absolute',\n    overflowX:'hidden',\n    display:'flex',\n    \n  },\n  apiclass:{\n    \n\n  },\n  paraclass1 :{\n    position:'relative',\n    float:'bottom',\n  },\n  mapclass:{\n\n  },\n  iconroot1: {\n    display: 'inline',\n    color:'#f44336',\n    \n  },\n  navclass:{\n    overflowX:'hidden',\n    position:'absolute',\n  },\n  scrollme:{\n    whiteSpace: 'nowrap',\n    flexWrap: 'nowrap',\n    width:'100vw',\n    \n    [theme.breakpoints.up('md')]: {\n      whiteSpace: 'nowrap',\n    flexWrap: 'nowrap',\n    width:'650px',\n    \n    },\n  \n  },\n  \n}));\n\nfunction FullWidthGrid(props) {\n\n\n\n  const roomid = props.match.params.shopid;\n\n  const classes = useStyles();\n  const [details, setDetails] = useState(false);\n  const [reviews, setReviews] = useState([])\n  const [loading, setLoading] = useState(false);\n  const [open_book,changeopen1] = useState(false)\n  const [loginpage,setloginpage] = useState(false);\n \n  const [params1,setparams] = useState({\n    page:1,\n    ordering:'-rating'\n  })\n  const [wishlistitems,changeitemswishlist] = useState(0)\n  const [cartitems,changeitemscart] = useState(0)\n  const [open1,setOpen1] = useState(false);\n  const [open2,setOpen2] = useState(false);\n  const [wishlist,changewishlist] = useState(false)\n  const [nav,setnav] = useState(false)\n  const [coupons,setcoupons] = useState([])\n\n  const [open,changeopen] = useState(false)\n\n\n\n \n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      setLoading(true);\n      const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n      };\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourceadadk2647kfs/shops/${roomid}/`,config);\n      \n      try{\n        \n        \n          setDetails(res.data);\n          setLoading(false);\n        \n\n      }  catch (err) {\n        // Handle Error Here\n        console.error(err);\n    }\n\n    \n    };\n\n   \n    fetchDetails();\n   \n  }, [props.isAuthenticated]);\n\n  useEffect( async() => {\n     \n    const config = {\n      headers: {\n          'Content-Type': 'application/json'\n      }\n    };\n    try{\n    const res1 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcensjahdwua2853/shop/reviews/`,{\n      params:{\n        shop_id:roomid,\n        page:params1.page,\n        ordering:params1.ordering,\n      },\n      config:config\n    });\n    \n   \n       \n        setReviews(res1.data.results);\n        \n        \n    }  catch (err) {\n      // Handle Error Here\n      console.error(err);\n  }\n  try{\n    const res12 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcesnajeijchi032uhd9w/coupon/give/`,{\n      params:{\n        roomid:roomid,\n        type:'shop',\n      },\n      config:config\n    });\n    \n   \n        \n        setcoupons(res12.data);\n        \n        \n    }  catch (err) {\n      // Handle Error Here\n      console.error(err,'coupons_error');\n  }\n  },[])\n\n  useEffect( async() => {\n     \n    const config = {\n      headers: {\n          'Content-Type': 'application/json'\n      }\n    };\n    if(props.isAuthenticated){\n      const config = {\n        headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n      try {\n      await axios.get(`${process.env.REACT_APP_API_URL}/sourcesnjs03qjkda/wishlist/shops/${roomid}/`,config,config)\n      .then(res => {\n        changewishlist(res.data);\n      })\n      .catch(err => {\n        \n      })\n      \n      }\n      catch{\n      }\n\n      try {\n        await axios.put(`${process.env.REACT_APP_API_URL}/sourcesnjs03qjkda/wishlist/shops/1/`,config,config)\n        .then(res1 => {\n          changeitemswishlist(res1.data);\n        })\n        .catch(err => {\n          \n        })\n        \n        }\n        catch{\n        }\n    }\n  },[props.isAuthenticated])\n\n\n  const handleclick = async (event) => {\n    event.preventDefault();\n\n    if(props.isAuthenticated)\n    {\n\n      if(wishlist)\n      {\n        const config = {\n          headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `JWT ${localStorage.getItem('access')}`,\n          },\n        };\n        const res = await axios.delete(`${process.env.REACT_APP_API_URL}/sourcesnjs03qjkda/wishlist/shops/${roomid}/`,config);\n\n        if(res.data == 'Removed from wishlist'){changewishlist(false); changeitemswishlist(wishlistitems-1); setnav(true);}\n      }\n    }else{\n      setOpen1(true);\n    }\n\n  }\n\n  const handleclick1 = async (event) => {\n    event.preventDefault();\n\n    if(props.isAuthenticated)\n    {\n      if(!wishlist)\n      {\n        const config = {\n          headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `JWT ${localStorage.getItem('access')}`,\n          },\n          params: {\n            shop_id:roomid,\n          },\n        };\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/sourcesnjs03qjkda/wishlist/shops/`,config,config);\n\n        if(res.data == 'Added to wishlist'){changewishlist(true);  changeitemswishlist(wishlistitems+1);  setnav(true);}\n      }\n    }else{\n      setOpen1(true);\n    }\n\n  }\n\n\n\n\nif(loginpage===true)\n{ \n  return <Redirect to='/login' />;\n}\n\n\n\nif(details){\n  return (\n\n    \n    \n    \n    \n    <div className={classes.root}>\n      <div className={classes.navclass}><RenteneAppBar no={wishlistitems} focus={true}/></div>\n      \n      \n      <SimpleSnackbar open={open1} setOpen={setOpen1}/>\n       <SimpleSnackbar1 open={open2} setOpen={setOpen2}/>\n\n       <ReviewSeller open={open} change={changeopen} id={details.seller_id}/>\n\n      <Hidden smDown>\n      <Grid container>\n\n        <Grid item xs={12} >\n          <SpecificRoomCarousel post={details}/>\n        </Grid>\n        <CssBaseline />\n        \n\n        <Container maxWidth='lg'>\n            <Grid container justify='space-between'>\n                <Grid item xs={7} >\n                    <Box mr={5} mt={7}>\n                  <Grid container >\n                  \n                      <Grid container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        >\n                          {/* Hostel Name and rating */}\n                            <Grid item xs={6} >\n                            \n                                <Typography variant=\"h4\" component=\"h4\">\n                                {details.title}\n                                </Typography>\n                                <Typography variant=\"h6\" component=\"h6\" gutterBottom >\n                                {details.location}\n                                </Typography>\n                            </Grid>\n                              \n                            <Grid item >\n                                <RatingWithCompliment rating={parseFloat(details.avg_rating)} reviews={parseFloat(details.reviews)}/>\n                            </Grid>\n                      </Grid>\n                      { \n        wishlist ? <Grid item ><IconButton color='error' onClick={(event) => {handleclick(event);}} className={classes.iconroot1}><FavoriteIcon /></IconButton> <Typography variant=\"body1\" color=\"error\">\n        {details.wishlist} have added this to their wishlist!\n        </Typography></Grid> : <Grid item ><IconButton color='error' onClick={(event) => {handleclick1(event);}} className={classes.iconroot1}><FavoriteBorderOutlinedIcon /></IconButton> <Typography variant=\"body1\"  color=\"error\">\n        {details.wishlist} have added this to their wishlist!\n        </Typography></Grid>\n        }\n  \n        <Grid item>\n        \n        </Grid>\n\n\n\n<List component=\"nav\" className={classes.root1} aria-label=\"offers\">\n          <Grid item >\n            <Divider variant='middle'/>\n            <ListItem>\n          <Typography variant=\"h5\" component=\"h4\" className={classes.typo2}>\n            *Offers Applicable\n            </Typography>\n            </ListItem>\n            </Grid>\n\n            <div className={classes.scrollme}>\n           \n            <CustomizedTabs1 post={coupons}/>\n          \n            </div>\n            \n            <Divider variant='middle'/>\n\n          \n          </List>\n\n                          <Grid item xs = {12}>\n                              <Typography variant='h5'>\n                                  Description\n                              </Typography>\n                              <RoomDescriptionContent details={details} type=\"shop\"/>\n                          </Grid>\n                          <Grid item xs={12}>\n                          <Typography variant='h5'>\n                                  Facilities\n                              </Typography>\n                              <br />\n                              <ScrollableIcons post={details}/><br />\n                         <br />\n                          </Grid>\n                         \n                          \n                         \n                            <br />\n                            \n                            <div className={classes.apiclass}><Mapview value={details} /></div>\n                         \n                          \n                         \n\n                          <Grid item xs = {12}> <br />\n                          <br />\n                            <RatingAndReviews  reviews={reviews} params={params1} setparams={setparams} no={parseFloat(details.reviews)} rating={parseFloat(details.avg_rating)}/>\n                          </Grid>\n\n                          <Grid item>\n                          <br />\n                          <Button color=\"primary\" variant=\"contained\" onClick={(e) => {e.preventDefault();changeopen(true);}} >Owner Reviews</Button>\n                          \n                          </Grid>\n                      </Grid>\n                    </Box>\n                </Grid>\n\n                \n                <Grid item xs={4}>\n                  <Box mt={7} className={classes.mystyle}>\n                  \n                  <BookCard details={details} loginpage={loginpage} setloginpage={setloginpage}/>\n                  </Box>\n                </Grid>\n\n            </Grid>\n            <br />\n        </Container>\n      \n        \n            \n\n      </Grid>\n      <Footer /> \n      </Hidden>\n\n\n\n      <Hidden mdUp>\n            \n\n         <Mobileimages post={details} wishlist={wishlist} handleclick1={handleclick1} handleclick={handleclick} />\n          \n         <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          > { \n            wishlist ? <><Grid item ><IconButton color='error' onClick={(event) => {handleclick(event);}} className={classes.iconroot1}><FavoriteIcon /></IconButton></Grid><Grid item><Typography variant=\"body1\" color=\"error\">\n            {details.wishlist} have added this to their wishlist!\n            </Typography></Grid></> : <><Grid item ><IconButton color='error' onClick={(event) => {handleclick1(event);}} className={classes.iconroot1}><FavoriteBorderOutlinedIcon /></IconButton></Grid><Grid item> <Typography variant=\"body1\"  color=\"error\">\n            {details.wishlist} have added this to their wishlist!\n            </Typography></Grid></>\n            }\n            </Grid>\n          \n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-around\"\n            alignItems=\"center\"\n          >\n  \n            <Grid item xs={1}></Grid>\n\n            <Grid item xs={6}>\n            <Typography variant=\"h5\" component=\"h4\" className={classes.typo1}>\n            {details.title}\n            </Typography>\n            <Typography variant=\"body1\" component=\"h6\" gutterBottom  className={classes.typo3}>\n                              <Icon color=\"error\" fontSize=\"inherit\"><LocationOnIcon /></Icon>  {details.location}, {details.city}\n                                </Typography>\n                                <Typography variant=\"body1\" component=\"h6\" gutterBottom className={classes.typo3}>\n                                ,  {details.state}, {details.country}\n                                </Typography>\n            </Grid>\n\n            <Grid item xs={4}>\n            <RatingWithCompliments reviews={parseFloat(details.reviews)} rating={parseFloat(details.avg_rating)}/>\n            </Grid>\n\n            \n            \n          </Grid>\n          \n          \n          <List component=\"nav\" className={classes.root1} aria-label=\"offers\">\n          <Grid item >\n            <Divider variant='middle'/>\n            <ListItem>\n          <Typography variant=\"h5\" component=\"h4\" className={classes.typo2}>\n            *Offers Applicable\n            </Typography>\n            </ListItem>\n            </Grid>\n\n            <div className={classes.scrollme}>\n           \n            <CustomizedTabs1 post={coupons}/>\n           \n            </div>\n            \n            <Divider variant='middle'/>\n\n          \n          </List>\n         \n          \n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-around\"\n            alignItems=\"center\"\n          >\n          <Grid item xs={1}></Grid>\n          <Grid item xs={10} className={classes.paraclass}>\n          <Typography variant='h5'>\n                                  Facilities\n                              </Typography>\n                              <br />\n                              <ScrollableIcons post={details}/>\n                        \n          </Grid>\n          <Grid item xs={1}></Grid>\n          </Grid>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n          <Grid item xs={1}></Grid>\n          <Grid item xs={10} className={classes.paraclass}>\n            <Typography variant='h5'>\n                Description\n            </Typography>\n            <RoomDescriptionContent details={details} type=\"shop\"/>\n          </Grid>\n          <Grid item xs={1}></Grid>\n          </Grid>\n\n          <br />\n\n          <br />\n          \n          \n          <Mapviewmobile value={details}/>\n       \n\n          <br />\n          <br />\n\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n          \n          <Grid item xs={10} className={classes.paraclass1}>\n            <RatingAndReviews reviews={reviews} params={params1} setparams={setparams} no={parseFloat(details.reviews)} rating={parseFloat(details.avg_rating)}/>\n          </Grid>\n          \n          </Grid>\n          <br />\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n          \n          <br />\n         <Button color=\"primary\" variant=\"contained\" onClick={(e) => {e.preventDefault();changeopen(true);}} >Owner Reviews</Button>\n         </Grid> \n\n         <br />\n         <Footer />\n         \n          \n\n          \n\n          \n       \n        \n\n       \n        <SimpleModal1 details={details} open={open_book} change={changeopen1} loginpage={loginpage} setloginpage={setloginpage}/>\n        <BottomAppBar details={details} open1={open_book} changeopen1={changeopen1}/>\n\n      </Hidden>\n\n\n    </div>\n     \n  );\n}\nelse{\n  return <div><Load1 loading={true} /></div>;\n}\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  access: state.authreducers.access\n});\n\nexport default connect(mapStateToProps)(FullWidthGrid);\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/ResetPassword.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/wishlist.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/RecentBooking.js",["990"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport RecentBookingTable from '../components/RecentBookingTable'\n// import { mainListItems, secondaryListItems } from './listItems';\n// import Chart from './Chart';\n// import Deposits from './Deposits';\n// import Orders from './Orders';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Dashboard\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        {/* <List>{mainListItems}</List> */}\n        <Divider />\n        {/* <List>{secondaryListItems}</List> */}\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n                <Typography variant=\"h2\" color=\"inherit\">\n                    <Box mt={1} ml={0} mb={6} >\n                          Recent Booking\n                    </Box>\n                </Typography>\n            \n          <Grid container spacing={3}>\n            <Grid item>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              {/* <Paper > */}\n                {/* <Orders /> */}\n                < RecentBookingTable / >\n              {/* </Paper> */}\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/bookingdetails.js",["991","992","993","994","995"],"import React,{ useState} from 'react'\nimport {  makeStyles } from '@material-ui/core/styles';\nimport Dashboarddrawer from '../hocs/layout2'\nimport axios from 'axios'\nimport Eror from '../components/eror'\nimport Grid from '@material-ui/core/Grid';\n\n\n\nimport Button from '@material-ui/core/Button';\n\nimport {Redirect,Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport './myStyles.css'\nimport Paper from '@material-ui/core/Paper';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport Details from '../components/detailstable';\nimport FacilityDetails from '../components/facilitiestable'\nimport Invoice from '../components/invoice'\nimport { PDFDownloadLink} from '@react-pdf/renderer';\nimport Load1 from '../components/Spinner';\n\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\nconst ref = React.createRef();\n\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  myclass: {\n    \n   \n},\nbgclass: {\n \n \n\n\n},\nmyclass1: {\n  padding:'10px',\n  [theme.breakpoints.up('sm')]: {\n    padding:'30px',\n  },\n  \n},\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1.3),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  \n  \n \n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  topclass: {\n    marginTop:'10px',\n    [theme.breakpoints.up('sm')]: {\n      \n    },\n  },\n}));\n  \n\nfunction Bookingdetails(props) {\n \n    const bookingid = props.match.params.bookingid;\n    const [error,seterror] = useState(false);\n    const [extend,setextend] = useState(false);\n\n\n    const [mybooking,setmybooking]= useState()\n    const [cancelled,setcancelled]= useState(false)\n\n    const [invoiceData,setdata] = useState(false)\n\n    React.useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcehjbda983290whjba/room/book/${bookingid}/`,config);\n           \n             setmybooking(res.data)\n\n             setdata({\n              id: `${res.data.booking_id}`,\n              invoice_no: `${res.data.booking_id}`,\n              \n              company: `${res.data.first_name} ${res.data.last_name}`,\n              \n              phone: `${res.data.country_code} ${res.data.mobile}`,\n              phone2: `${res.data.country_code} ${res.data.alternate_mobile}`,\n              name:`${res.data.room_name}`,\n              booked_from: `${res.data.booked_from}`,\n              booked_till:`${res.data.booked_till}`,\n              trans_date: `${res.data.created_at}`,\n              due_date: `${res.data.created_at}`,\n              cancelled:`${res.data.cancelled ? `Yes ${res.data.cancelled_date}` : 'No'}`,\n              extended:`${res.data.extended ? `Yes` : 'No'}`,\n              pay:`${res.data.currency.slice(2,)} ${res.data.price_to_be_paid}`,\n              capacity:`${res.data.capacity}`,\n              duration:`${res.data.duration}`,\n              paid:`${res.data.paid ? `Yes` : 'No'}`,\n              coupon:`${res.data.coupon}`,\n              refunded:`${res.data.refunded}`,\n              items: [\n                {\n                  sno: 1,\n                  desc: \"WIFI\",\n                  qty: `${res.data.wifi ? `Yes` : 'No'}`,\n                 \n                },\n                {\n                  sno: 2,\n                  desc: \"House Refridgerator\",\n                  qty: `${res.data.house_refridgerator ? `Yes` : 'No'}`,\n                 \n                },\n                {\n                  sno: 3,\n                  desc: \"Room Refridgerator\",\n                  qty: `${res.data.room_refridgerator ? `Yes` : 'No'}`,\n                 \n                },\n                {\n                  sno: 4,\n                  desc: \"House TV\",\n                  qty: `${res.data.house_TV ? `Yes` : 'No'}`,\n                 \n                },\n                {\n                  sno: 5,\n                  desc: \"Room TV\",\n                  qty: `${res.data.room_TV ? `Yes` : 'No'}`,\n                 \n                },\n                {\n                  sno: 6,\n                  desc: \"AC\",\n                  qty: `${res.data.AC ? `Yes` : 'No'}`,\n                 \n                },\n                {\n                  sno: 7,\n                  desc: \"Cooler\",\n                  qty: `${res.data.cooler ? `Yes` : 'No'}`,\n                 \n                },\n                {\n                  sno: 8,\n                  desc: \"Geyser\",\n                  qty: `${res.data.geyser ? `Yes` : 'No'}`,\n                 \n                },\n                {\n                  sno: 9,\n                  desc: \"Breakfast\",\n                  qty: `${res.data.breakfast ? `Yes` : 'No'}`,\n                 \n                },\n                {\n                  sno: 10,\n                  desc: \"Lunch\",\n                  qty: `${res.data.lunch ? `Yes` : 'No'}`,\n                 \n                },\n                {\n                  sno: 11,\n                  desc: \"Dinner\",\n                  qty: `${res.data.dinner ? `Yes` : 'No'}`,\n                 \n                },\n                {\n                  sno: 12,\n                  desc: \"Purified Water\",\n                  qty: `${res.data.purified_water ? `Yes` : 'No'}`,\n                 \n                },\n              ],\n            })\n              \n              }\n                catch{\n                  seterror(true);\n                }\n\n        }\n    \n    ,[])\n\n\n    const classes = useStyles();\n\n    const handleclick1 = async (e) => {\n      setcancelled(true);\n      \n\n    }\n    const handleclick2 = async (e) => {\n      setextend(true);\n      \n\n    }\n\n\n\n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error' /></div>\n    }\n  \n    if(cancelled===true){\n      return <Redirect to={`/dashboard/recentbookings/room-bookings/cancel/${bookingid}`}/>\n    }\n    if(extend===true){\n      return <Redirect to={`/dashboard/recentbookings/room-bookings/extend/${bookingid}`}/>\n    }\n    if(mybooking && props.profile){\n    \n    \n    return (\n        <div>\n          \n            <Dashboarddrawer/>\n            <main className={classes.content}>\n            <div className={classes.toolbar} />\n\n            <div className={classes.bgclass}>\n    \n            <div className={classes.myclass}>\n\n            <div>\n\n            <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n           >\n             <Paper elevation={5} className={classes.myclass1}>\n\n            <div className={classes.topclass}>\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"center\"\n            \n            >\n            \n            <Grid item >\n              \n            <Typography variant=\"h5\" >BOOKING NO </Typography>\n            </Grid>\n            <Grid item >\n              \n              <Typography variant=\"body1\">\n                ({mybooking.booking_id})\n              </Typography>\n            </Grid>\n\n            \n\n            </Grid>\n         \n         {\n           mybooking.ended || mybooking.extended || props.profile.is_seller || mybooking.cancelled ? null : <Grid\n           container\n           direction=\"row\"\n           justify=\"center\"\n           alignItems=\"center\"\n           spacing={2}\n           >\n           <Grid item >\n           {\n               mybooking.ended || mybooking.extended || props.profile.is_seller || mybooking.cancelled ? null : <Button variant=\"contained\"  padding=\"auto\"color=\"secondary\" onClick={(e) => {handleclick1(e);}}>\n               Cancel booking\n             </Button>\n   }</Grid>\n  \n  <Grid item >\n           {\n               mybooking.ended || mybooking.extended || props.profile.is_seller || mybooking.cancelled ? null : <Button variant=\"contained\" padding=\"auto\"color=\"secondary\" onClick={(e) => {handleclick2(e);}}>\n               Extend booking\n             </Button>\n   }</Grid>\n   </Grid>\n         }\n\n         \n            \n            \n\n    <br />\n\n    {\n      mybooking.room_review || mybooking.cancelled ? null :  <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={2}\n      >\n      \n\n<Grid item >\n      {\n          mybooking.room_review || mybooking.cancelled ? null :  <Link to={{\n            pathname: `/dashboard/recentbookings/room-bookings/${mybooking.booking_id}/feedback`,\n            state: { property_id:'room' }\n          }} style={{textDecoration:'none'}}><Button variant=\"contained\" padding=\"auto\"color=\"secondary\" >\n          Give Feedback\n        </Button></Link>\n}</Grid>\n</Grid>\n    }\n\n   \n\n    \n           \n            \n            \n\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n            \n            \n\n            </Grid>\n            \n            <br />\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={3}\n            >\n            \n            <Grid item >\n              <Typography variant=\"h6\">Booked on </Typography> \n              <Typography variant=\"body1\">  {mybooking.created_at.slice(0,10)}</Typography>\n            </Grid>\n            <Grid item >\n\n            <Grid item >\n            <Typography variant=\"h6\">Booked at </Typography> \n              <Typography variant=\"body1\">  {mybooking.created_at.slice(11,19)}</Typography>\n            </Grid>\n           \n              \n            </Grid>\n\n            </Grid>\n\n            <br />\n\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            \n            >\n              <Grid item>\n                <Details booking={mybooking}  profile={props.profile} name={mybooking.room_name}/>\n              </Grid>\n            </Grid>\n            <br />\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            \n            >\n              <Grid item>\n                <Typography variant=\"h6\">\n                  Facilites Selected :-\n                </Typography>\n              </Grid>\n            </Grid>\n            <br />\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            \n            >\n              <Grid item>\n                <FacilityDetails mybooking={mybooking} profile={props.profile} type={'room'}/>\n              </Grid>\n            </Grid>\n            <br />\n\n            \n              \n             \n{\n  invoiceData ? <Grid item>\n  <br />\n             \n              <PDFDownloadLink document={<Invoice invoice={invoiceData}/>} fileName={`Booking(${mybooking.booking_id})`}> \n  \n        <Button variant=\"contained\" color=\"primary\"> Download </Button> \n  \n         </PDFDownloadLink>\n              </Grid> : null\n}\n             \n\n\n\n\n            </div>\n\n            </Paper>\n\n            </Grid>\n            </div>\n            </div>\n            </div>\n            </main>\n        </div>\n    )\n    }\n    else{\n      return <><Load1 loading={true} /></>;\n    }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(Bookingdetails);\n\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/bookingdetails_apartment.js",["996","997","998","999","1000","1001"],"\n\nimport React,{ useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dashboarddrawer from '../hocs/layout2'\nimport axios from 'axios'\nimport Eror from '../components/eror'\nimport Grid from '@material-ui/core/Grid';\n\n\n\nimport Button from '@material-ui/core/Button';\n\nimport {Redirect,Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport './myStyles.css'\nimport Paper from '@material-ui/core/Paper';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport Details from '../components/detailstable';\nimport FacilityDetails from '../components/facilitiestable'\nimport Invoice from '../components/invoice'\nimport { PDFDownloadLink} from '@react-pdf/renderer';\nimport Load1 from '../components/Spinner';\n\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\nconst ref = React.createRef();\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  myclass: {\n    \n   \n},\nbgclass: {\n \n \n\n\n},\nmyclass1: {\n  padding:'10px',\n  [theme.breakpoints.up('sm')]: {\n    padding:'30px',\n  },\n},\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1.3),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  topclass: {\n    marginTop:'10px',\n    [theme.breakpoints.up('sm')]: {\n      \n    },},\n  \n  \n \n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n  \n\nfunction Bookingdetails(props) {\n  \n    const bookingid = props.match.params.bookingid;\n    const [error,seterror] = useState(false);\n    const [extend,setextend] = useState(false);\n    const [invoiceData,setdata] = useState(false)\n\n\n    const [mybooking,setmybooking]= useState()\n    const [cancelled,setcancelled]= useState(false)\n\n    React.useEffect(\n      async () => {\n          const config = {\n              headers: {\n                      'Content-Type': 'application/json',\n                      'Authorization': `JWT ${localStorage.getItem('access')}`,\n              },\n            };\n            \n              try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcensinejfcdajewcn29210/apartment/book/${bookingid}/`,config);\n         \n           setmybooking(res.data)\n\n           setdata({\n            id: `${res.data.booking_id}`,\n            invoice_no: `${res.data.booking_id}`,\n            \n            company: `${res.data.first_name} ${res.data.last_name}`,\n            \n            phone: `${res.data.country_code} ${res.data.mobile}`,\n            phone2: `${res.data.country_code} ${res.data.alternate_mobile}`,\n            name:`${res.data.apartment_name}`,\n            booked_from: `${res.data.booked_from}`,\n            booked_till:`${res.data.booked_till}`,\n            trans_date: `${res.data.created_at}`,\n            due_date: `${res.data.created_at}`,\n            cancelled:`${res.data.cancelled ? `Yes ${res.data.cancelled_date}` : 'No'}`,\n            extended:`${res.data.extended ? `Yes` : 'No'}`,\n            pay:`${res.data.currency.slice(2,)} ${res.data.price_to_be_paid}`,\n            capacity:`None`,\n            duration:`${res.data.duration}`,\n            paid:`${res.data.paid ? `Yes` : 'No'}`,\n            coupon:`${res.data.coupon}`,\n            refunded:`${res.data.refunded}`,\n            items: [\n              {\n                sno: 1,\n                desc: \"WIFI\",\n                qty: `${res.data.wifi ? `Yes` : 'No'}`,\n               \n              },\n              {\n                sno: 2,\n                desc: \"Refridgerator\",\n                qty: `${res.data.house_refridgerator ? `Yes` : 'No'}`,\n               \n              },\n              \n              {\n                sno: 3,\n                desc: \"TV\",\n                qty: `${res.data.TV ? `Yes` : 'No'}`,\n               \n              },\n              \n              {\n                sno: 4,\n                desc: \"AC\",\n                qty: `${res.data.AC ? `Yes` : 'No'}`,\n               \n              },\n              {\n                sno: 5,\n                desc: \"Cooler\",\n                qty: `${res.data.cooler ? `Yes` : 'No'}`,\n               \n              },\n              {\n                sno: 6,\n                desc: \"Geyser\",\n                qty: `${res.data.geyser ? `Yes` : 'No'}`,\n               \n              },\n              \n              {\n                sno: 7,\n                desc: \"Purified Water\",\n                qty: `${res.data.purified_water ? `Yes` : 'No'}`,\n               \n              },\n              {\n                sno: 8,\n                desc: \"Laundry\",\n                qty: `${res.data.laundry ? `Yes` : 'No'}`,\n               \n              },\n            ],\n          })\n            \n            }\n              catch{\n                seterror(true);\n              }\n\n      }\n  \n  ,[])\n\n\n  const classes = useStyles();\n\n  const handleclick1 = async (e) => {\n    setcancelled(true);\n    \n\n  }\n  const handleclick2 = async (e) => {\n    setextend(true);\n    \n\n  }\n\n\n  if(error==true)\n  {\n    return <div className={classes.erorclass}><Eror error='Error' /></div>\n  }\n  \n  if(cancelled===true){\n    return <Redirect to={`/dashboard/recentbookings/housing-bookings/cancel/${bookingid}`}/>\n  }\n  if(extend===true){\n    return <Redirect to={`/dashboard/recentbookings/housing-bookings/extend/${bookingid}`}/>\n  }\n    if(mybooking && props.profile){\n    \n    \n    return (\n        <div>\n          \n            <Dashboarddrawer/>\n            <main className={classes.content}>\n            <div className={classes.toolbar} />\n\n            <div className={classes.bgclass}>\n    \n            <div className={classes.myclass}>\n\n            <div>\n\n            <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n           >\n             <Paper elevation={5} className={classes.myclass1}>\n\n\n            <div className={classes.topclass}>\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"center\"\n            \n            >\n            \n            <Grid item >\n              \n            <Typography variant=\"h5\" >BOOKING NO </Typography>\n            </Grid>\n            <Grid item >\n              \n              <Typography variant=\"body1\">\n                ({mybooking.booking_id})\n              </Typography>\n            </Grid>\n\n            \n\n            </Grid>\n         \n            \n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            >\n            <Grid item >\n            {\n                mybooking.ended || mybooking.extended || props.profile.is_seller || mybooking.cancelled ? null : <Button variant=\"contained\"  padding=\"auto\"color=\"secondary\" onClick={(e) => {handleclick1(e);}}>\n                Cancel booking\n              </Button>\n    }</Grid>\n   \n   <Grid item >\n            {\n                mybooking.ended || mybooking.extended || props.profile.is_seller || mybooking.cancelled ? null : <Button variant=\"contained\" padding=\"auto\"color=\"secondary\" onClick={(e) => {handleclick2(e);}}>\n                Extend booking\n              </Button>\n    }</Grid>\n    </Grid>\n\n    <br />\n\n    <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            >\n            \n   \n   <Grid item >\n            {\n                mybooking.apartment_review || mybooking.cancelled ? null :  <Link to={{\n                  pathname: `/dashboard/recentbookings/housing-bookings/${mybooking.booking_id}/feedback`,\n                  state: { property_id:'apartment' }\n                }} style={{textDecoration:'none'}}><Button variant=\"contained\" padding=\"auto\"color=\"secondary\" >\n                Give Feedback\n              </Button></Link>\n    }</Grid>\n    </Grid>\n  \n    \n           \n          \n            \n\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n            \n            \n\n            </Grid>\n            \n            <br />\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={3}\n            >\n            \n            <Grid item >\n              <Typography variant=\"h6\">Booked on </Typography> \n              <Typography variant=\"body1\">  {mybooking.created_at.slice(0,10)}</Typography>\n            </Grid>\n            <Grid item >\n\n            <Grid item >\n            <Typography variant=\"h6\">Booked at </Typography> \n              <Typography variant=\"body1\">  {mybooking.created_at.slice(11,19)}</Typography>\n            </Grid>\n           \n              \n            </Grid>\n\n            </Grid>\n\n            <br />\n\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            \n            >\n              <Grid item>\n                <Details booking={mybooking}  profile={props.profile} name={mybooking.apartment_name}/>\n              </Grid>\n            </Grid>\n            <br />\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            \n            >\n              <Grid item>\n                <Typography variant=\"h6\">\n                  Facilites Selected :-\n                </Typography>\n              </Grid>\n            </Grid>\n            <br />\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            \n            >\n              <Grid item>\n                <FacilityDetails mybooking={mybooking} profile={props.profile} type={'apartment'}/>\n              </Grid>\n            </Grid>\n            <br />\n\n            \n              \n             \n\n             \n\n\n\n            {\n  invoiceData ? <Grid item>\n  <br />\n             \n              <PDFDownloadLink document={<Invoice invoice={invoiceData}/>} fileName={\"FileName\"}fileName={`Booking(${mybooking.booking_id})`}> \n  \n              <Button variant=\"contained\" color=\"primary\"> Download </Button> \n  \n         </PDFDownloadLink>\n              </Grid> : null\n}\n    \n            </div>\n            </Paper>\n\n            </Grid>\n            </div>\n            </div>\n            </div>\n            </main>\n        </div>\n    )\n    }\n    else{\n      return <><Load1 loading={true} /></>;\n    }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(Bookingdetails);\n\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/bookingdetails_shop.js",["1002","1003","1004","1005","1006","1007","1008"],"\n\n\nimport React,{ useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dashboarddrawer from '../hocs/layout2'\nimport axios from 'axios'\nimport Eror from '../components/eror'\nimport Grid from '@material-ui/core/Grid';\n\n\n\nimport Button from '@material-ui/core/Button';\n\nimport {Redirect,Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport './myStyles.css'\nimport Paper from '@material-ui/core/Paper';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport Details from '../components/detailstable';\nimport FacilityDetails from '../components/facilitiestable'\nimport Invoice from '../components/invoice'\nimport { PDFDownloadLink} from '@react-pdf/renderer';\nimport Load1 from '../components/Spinner';\n\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\nconst ref = React.createRef();\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  myclass: {\n    \n   \n},\nbgclass: {\n \n \n\n\n},\nmyclass1: {\n  padding:'10px',\n  [theme.breakpoints.up('sm')]: {\n    padding:'30px',\n  },\n},\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1.3),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  \n  \n \n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  topclass: {\n    marginTop:'10px',\n    [theme.breakpoints.up('sm')]: {\n      \n    },},\n}));\n  \n\nfunction Bookingdetails(props) {\n  const [invoice,setinvoice] = useState(false)\n    const bookingid = props.match.params.bookingid;\n    const [error,seterror] = useState(false);\n    const [extend,setextend] = useState(false);\n    const [invoiceData,setdata] = useState(false)\n\n\n    const [mybooking,setmybooking]= useState()\n    const [cancelled,setcancelled]= useState(false)\n\n     React.useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcehdawnajk289uadhq/shop/book/${bookingid}/`,config);\n           \n             setmybooking(res.data)\n\n             setdata({\n              id: `${res.data.booking_id}`,\n              invoice_no: `${res.data.booking_id}`,\n             \n              company: `${res.data.first_name} ${res.data.last_name}`,\n              \n              phone: `${res.data.country_code} ${res.data.mobile}`,\n              phone2: `${res.data.country_code} ${res.data.alternate_mobile}`,\n              name:`${res.data.shop_name}`,\n              booked_from: `${res.data.booked_from}`,\n              booked_till:`${res.data.booked_till}`,\n              trans_date: `${res.data.created_at}`,\n              due_date: `${res.data.created_at}`,\n              cancelled:`${res.data.cancelled ? `Yes ${res.data.cancelled_date}` : 'No'}`,\n              extended:`${res.data.extended ? `Yes` : 'No'}`,\n              pay:`${res.data.currency.slice(2,)} ${res.data.price_to_be_paid}`,\n              capacity:`None`,\n              duration:`${res.data.duration}`,\n              coupon:`${res.data.coupon}`,\n              refunded:`${res.data.refunded}`,\n              paid:`${res.data.paid ? `Yes` : 'No'}`,\n              items: [\n                {\n                  sno: 1,\n                  desc: \"WIFI\",\n                  qty: `${res.data.wifi ? `Yes` : 'No'}`,\n                 \n                },\n                \n                {\n                  sno: 2,\n                  desc: \"TV\",\n                  qty: `${res.data.TV ? `Yes` : 'No'}`,\n                 \n                },\n               \n                {\n                  sno: 3,\n                  desc: \"AC\",\n                  qty: `${res.data.AC ? `Yes` : 'No'}`,\n                 \n                },\n                {\n                  sno: 4,\n                  desc: \"Cooler\",\n                  qty: `${res.data.cooler ? `Yes` : 'No'}`,\n                 \n                },\n              \n                {\n                  sno: 5,\n                  desc: \"Purified Water\",\n                  qty: `${res.data.purified_water ? `Yes` : 'No'}`,\n                 \n                },\n              ],\n            })\n              \n              \n              }\n                catch{\n                  seterror(true);\n                }\n\n        }\n    \n    ,[])\n\n\n    const classes = useStyles();\n\n    const handleclick1 = async (e) => {\n      setcancelled(true);\n      \n\n    }\n    const handleclick2 = async (e) => {\n      setextend(true);\n      \n\n    }\n\n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error' /></div>\n    }\n    \n    if(cancelled===true){\n      return <Redirect to={`/dashboard/recentbookings/shop-bookings/cancel/${bookingid}`}/>\n    }\n    if(extend===true){\n      return <Redirect to={`/dashboard/recentbookings/shop-bookings/extend/${bookingid}`}/>\n    }\n    if(mybooking && props.profile){\n    \n    \n    return (\n        <div>\n          \n            <Dashboarddrawer/>\n            <main className={classes.content}>\n            <div className={classes.toolbar} />\n\n            <div className={classes.bgclass}>\n    \n            <div className={classes.myclass}>\n\n            <div>\n\n            <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n           >\n             <Paper elevation={5} className={classes.myclass1}>\n\n\n            <div className={classes.topclass}>\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"center\"\n            \n            >\n            \n            <Grid item >\n              \n            <Typography variant=\"h5\" >BOOKING NO </Typography>\n            </Grid>\n            <Grid item >\n              \n              <Typography variant=\"body1\">\n                ({mybooking.booking_id})\n              </Typography>\n            </Grid>\n\n           \n\n            </Grid>\n           \n            \n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            >\n            <Grid item >\n            {\n                mybooking.ended || mybooking.extended || props.profile.is_seller || mybooking.cancelled ? null : <Button variant=\"contained\"  padding=\"auto\"color=\"secondary\" onClick={(e) => {handleclick1(e);}}>\n                Cancel booking\n              </Button>\n    }</Grid>\n   \n   <Grid item >\n            {\n                mybooking.ended || mybooking.extended || props.profile.is_seller || mybooking.cancelled ? null : <Button variant=\"contained\" padding=\"auto\"color=\"secondary\" onClick={(e) => {handleclick2(e);}}>\n                Extend booking\n              </Button>\n    }</Grid>\n    </Grid>\n\n    <br />\n\n    <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            >\n            \n   \n   <Grid item >\n            {\n                mybooking.shop_review || mybooking.cancelled ? null :  <Link to={{\n                  pathname: `/dashboard/recentbookings/shop-bookings/${mybooking.booking_id}/feedback`,\n                  state: { property_id:'shop' }\n                }} style={{textDecoration:'none'}}><Button variant=\"contained\" padding=\"auto\"color=\"secondary\" >\n                Give Feedback\n              </Button></Link>\n    }</Grid>\n    </Grid>\n \n    \n           \n          \n\n            \n\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n            \n            \n\n            </Grid>\n            <br />\n           \n           \n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={3}\n            >\n            \n            <Grid item >\n              <Typography variant=\"h6\">Booked on </Typography> \n              <Typography variant=\"body1\">  {mybooking.created_at.slice(0,10)}</Typography>\n            </Grid>\n            <Grid item >\n\n            <Grid item >\n            <Typography variant=\"h6\">Booked at </Typography> \n              <Typography variant=\"body1\">  {mybooking.created_at.slice(11,19)}</Typography>\n            </Grid>\n           \n              \n            </Grid>\n\n            </Grid>\n\n            <br />\n\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            \n            >\n              <Grid item>\n                <Details booking={mybooking}  profile={props.profile} name={mybooking.shop_name}/>\n              </Grid>\n            </Grid>\n            <br />\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            \n            >\n              <Grid item>\n                <Typography variant=\"h6\">\n                  Facilites Selected :-\n                </Typography>\n              </Grid>\n            </Grid>\n            <br />\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            \n            >\n              <Grid item>\n                <FacilityDetails mybooking={mybooking} profile={props.profile} type={'shop'}/>\n              </Grid>\n            </Grid>\n            <br />\n\n            \n              \n             \n\n             \n\n\n\n            {\n  invoiceData ? <Grid item>\n  <br />\n             \n              <PDFDownloadLink document={<Invoice invoice={invoiceData}/>} fileName={`Booking(${mybooking.booking_id})`}> \n  \n              <Button variant=\"contained\" color=\"primary\"> Download </Button>  \n  \n         </PDFDownloadLink>\n              </Grid> : null\n}\n            </div>\n            </Paper>\n\n            </Grid>\n            </div>\n            </div>\n            </div>\n            </main>\n        </div>\n    )\n    }\n    else{\n      return <><Load1 loading={true} /></>;\n    }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(Bookingdetails);\n\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/shoplisting.js",["1009","1010","1011","1012","1013","1014"],"import React, { useState, useEffect } from 'react';\n/* import Pagination from '../components/Pagination'; */\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport ResponsiveDrawer from './searchlist_shops';\nimport Eror from '../components/eror';\nimport Bookcardmodel from '../components/bookcardmodel1_shop';\nimport {Redirect} from 'react-router-dom'\n\nimport { connect } from 'react-redux'\n\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst App = ({isAuthenticated}) => {\n\n  \n  const urlParams = new URLSearchParams(window.location.search);\n\n  var temp1=''\n  const myparam1 = urlParams.get('city')\n  \n  if(myparam1)\n  {\n    temp1=myparam1\n  }\n\n  var temp2=''\n  const myparam2 = urlParams.get('state')\n  \n  if(myparam2)\n  {\n    temp2=myparam2\n  }\n\n  var temp3=''\n  const myparam3 = urlParams.get('country')\n  \n  if(myparam3)\n  {\n    temp3=myparam3\n  }\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(2);\n  const [totalposts, settotalPosts] = useState(0);\n  const [max_price, setmax_price] = useState(0);\n  const [min_price, setmin_price] = useState(0);\n  const [mypost,setmypost] = useState()\n  const [openmycard,setmycard] = useState(false)\n  const [loginpage,setloginpage] = useState(false)\n\n  const [mapview,setmap] = useState(false);\n\n  const [error, setError] = useState('');\n  const [wishlistitems,changeitemswishlist] = useState(0)\n  const [cartitems,changeitemscart] = useState(0)\n\n  const date = new Date(Date.now())\n\n    var x;\n    var y;\n    if(parseInt(date.getMonth()+1)<10)\n    {\n      x = `0${date.getMonth()+1}`;\n    }\n    if(parseInt(date.getMonth()+1)>=10)\n    {\n      x = `${date.getMonth()+1}`;\n    }\n    if(parseInt(date.getDate())<10)\n    {\n      y = `0${date.getDate()}`;\n    }\n    if(parseInt(date.getDate())>=10)\n    {\n      y = `${date.getDate()}`;\n    }\n\n    var temp4=`${date.getFullYear()}-${x}-${y}`\n    const myparam4 = urlParams.get('booking_date')\n    \n    if(myparam4)\n    {\n      temp4=myparam4\n    }\n\n  const [filters, setfilters] = useState({\n   \n   \n    cooler:'',\n    AC:'',\n    TV:'',\n    power_backup:'',\n    floor_filter:'',\n    room_filter:'',\n    washroom_filter:'',\n    windows:'',\n\n    purified_water:'',\n    min_rating:'',\n    cctv_building:'',\n   \n    building_guard:'',\n    balcony_filter:'',\n    separate_washroom:'',\n    category:'',\n\n    location:'',\n    city:temp1,\n    state:temp2,\n    landmark:'',\n    pincode:'',\n    country:temp3,\n\n    wifi:'',\n    gender:'',\n    discount:'',\n   \n\n    electricity:'',\n    \n    min_price:0,\n    max_price:400000,\n   \n    trust_points_filter:'',\n    booked:'',\n    windows:'',\n    bookedtill:temp4,\n    search:'',\n    shop_cleaning:'',\n    ordering:'-trust_points',\n    \n  });\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n      };\n      const page = currentPage\n      /* const params = new URLSearchParams([page,currentPage]) */\n      if(mapview===false){\n      try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourceadadk2647kfs/shops/`,{\n        params:{\n          shop_cleaning:filters.shop_cleaning,\n          page:currentPage,\n          booked:filters.booked,\n          min_price:filters.min_price,\n          max_price:filters.max_price,\n          category:filters.category,\n\n          room_filter:filters.room_filter,\n          washroom_filter:filters.washroom_filter,\n          \n          bookedtill_filter:filters.bookedtill,\n          min_rating:filters.min_rating,\n         \n          trust_points_filter:filters.trust_points_filter,\n          windows_filter:filters.windows,\n          building_guard:filters.building_guard,\n          cctv_building:filters.cctv_building,\n          discount:filters.discount,\n\n          cooler:filters.cooler,\n          AC:filters.AC,\n          TV:filters.TV,\n          power_backup:filters.power_backup,\n          purified_water:filters.purified_water,\n          balcony_filter:filters.balcony_filter,\n          separate_washroom:filters.separate_washroom,\n          wifi:filters.wifi,\n          gender:filters.gender,\n      \n          floor_filter:filters.floor_filter,\n          search:filters.search,\n          ordering:filters.ordering,\n\n          city1:filters.city.toUpperCase(),\n          state1:filters.state.toUpperCase(),\n          country1:filters.country.toUpperCase(),\n          location1:filters.location.toUpperCase(),\n          landmark1:filters.landmark.toUpperCase(),\n          pincode1:filters.pincode,\n          \n        },\n        config:config\n      });\n\n      const res2 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcekasdauhnuwiqlr2/minmax_shop/1/`,{\n        config:config\n      });\n\n      \n      setmax_price(res2.data.max_price);\n      setmin_price(res2.data.min_price);\n     \n      setPosts(res.data.results);\n      setLoading(false);\n      settotalPosts(res.data.count);\n      }\n      catch{\n        setLoading(false);\n        \n      }\n    }\n    };\n  \n\n\n    fetchPosts();\n  }, [currentPage,filters]);\n\n\n  useEffect(async () => {\n    if(isAuthenticated){\n    const config = {\n      headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `JWT ${localStorage.getItem('access')}`,\n      },\n    };\n    \n      try {\n        await axios.put(`${process.env.REACT_APP_API_URL}/sourcesnjs03qjkda/wishlist/shops/1/`,config,config)\n        .then(res1 => {\n          changeitemswishlist(res1.data);\n        })\n        .catch(err => {\n          \n        })\n        \n        }\n        catch{\n        }\n    }\n\n  },[isAuthenticated])\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if(error!=='')\n  {\n    return (\n      <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      >\n        <Grid item xs={5}><Eror eror={error}/></Grid>\n      </Grid>\n    );\n  }\n\n  if(loginpage)\n  {\n    return <Redirect to='/login' />\n  }\n\n\n \n  return (\n    <div>\n    <Bookcardmodel open={openmycard} change={setmycard} details={mypost} loginpage={loginpage} setloginpage={setloginpage}/>\n    \n      <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      >\n        <Grid item lg={12} xs={12}>\n        <ResponsiveDrawer  mypost={mypost} setmypost={setmypost} openmycard={openmycard} setmycard={setmycard} mapview={mapview} setmap={setmap} setfilters={setfilters} max_price={max_price} min_price={min_price} filters={filters} posts={posts} loading={loading} paginate={paginate} postsPerPage={postsPerPage} currentPage={currentPage} totalposts={totalposts} wishlistitems={wishlistitems} cartitems={cartitems} changeitemswishlist={changeitemswishlist} changeitemscart={changeitemscart}/>\n        \n\n        {/* <Pagination\n          postsPerPage={postsPerPage}\n          totalPosts={posts.length}\n          paginate={paginate}\n        /> */}\n      </Grid>\n      </Grid>\n      </div>\n  );\n      \n      \n};\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  access: state.authreducers.access\n});\n\nexport default connect(mapStateToProps)(App);","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/apartmentlisting.js",["1015","1016","1017","1018","1019","1020"],"import React, { useState, useEffect } from 'react';\n/* import Pagination from '../components/Pagination'; */\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport ResponsiveDrawer from './searchlist_apartment';\nimport Eror from '../components/eror';\n\nimport { connect } from 'react-redux'\n\nimport {Redirect} from 'react-router-dom'\n\nimport Bookcardmodel from '../components/bookcardmodel1_apartment';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst App = ({isAuthenticated}) => {\n\n  const urlParams = new URLSearchParams(window.location.search);\n\n  var temp1=''\n  const myparam1 = urlParams.get('city')\n  \n  if(myparam1)\n  {\n    temp1=myparam1\n  }\n\n  var temp2=''\n  const myparam2 = urlParams.get('state')\n  \n  if(myparam2)\n  {\n    temp2=myparam2\n  }\n\n  var temp3=''\n  const myparam3 = urlParams.get('country')\n  \n  if(myparam3)\n  {\n    temp3=myparam3\n  }\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(2);\n  const [totalposts, settotalPosts] = useState(0);\n  const [max_price, setmax_price] = useState(0);\n  const [min_price, setmin_price] = useState(0);\n\n  const [mypost,setmypost] = useState()\n  const [openmycard,setmycard] = useState(false)\n  const [loginpage,setloginpage] = useState(false)\n\n  const [mapview,setmap] = useState(false);\n\n  const [error, setError] = useState('');\n  const [wishlistitems,changeitemswishlist] = useState(0)\n  const [cartitems,changeitemscart] = useState(0)\n\n  const date = new Date(Date.now())\n\n    var x;\n    var y;\n    if(parseInt(date.getMonth()+1)<10)\n    {\n      x = `0${date.getMonth()+1}`;\n    }\n    if(parseInt(date.getMonth()+1)>=10)\n    {\n      x = `${date.getMonth()+1}`;\n    }\n    if(parseInt(date.getDate())<10)\n    {\n      y = `0${date.getDate()}`;\n    }\n    if(parseInt(date.getDate())>=10)\n    {\n      y = `${date.getDate()}`;\n    }\n\n    var temp4=`${date.getFullYear()}-${x}-${y}`\n    const myparam4 = urlParams.get('booking_date')\n    \n    if(myparam4)\n    {\n      temp4=myparam4\n    }\n\n  const [filters, setfilters] = useState({\n    \n    laundry:'',\n    cooler:'',\n    AC:'',\n    \n    power_backup:'',\n\n    floor_filter:'',\n    house_refridgerator:'',\n    washroom_filter:'',\n    beds_filter:'',\n    rooms_filter:'',\n    cooler_filter:'',\n    geyser_filter:'',\n    AC_filter:'',\n    TV_filter:'',\n    sofa:'',\n    apartment_type:'',\n\n    purified_water:'',\n    min_rating:'',\n    cctv_building:'',\n    bed_type:'',\n    building_guard:'',\n    balcony:'',\n    separate_washroom:'',\n    category:'',\n\n    location:'',\n    city:temp1,\n    state:temp2,\n    country:temp3,\n    landmark:'',\n    pincode:'',\n\n    wifi:'',\n    gender:'',\n    discount:'',\n    \n    TV:'',\n    geyser:'',\n    electricity:'',\n    \n    min_price:0,\n    max_price:400000,\n    BHK_filter:'',\n    trust_points_filter:'',\n    booked:'',\n    windows:'',\n    bookedtill:temp4,\n    search:'',\n    apartment_cleaning:'',\n    ordering:'-trust_points',\n   \n  });\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n      };\n      const page = currentPage\n      /* const params = new URLSearchParams([page,currentPage]) */\n      if(mapview===false){\n      try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcebvdfesl2746/apartments/`,{\n        params:{\n          apartment_cleaning:filters.apartment_cleaning,\n          page:currentPage,\n          booked:filters.booked,\n          min_price:filters.min_price,\n          max_price:filters.max_price,\n          category:filters.category,\n          \n          bookedtill_filter:filters.bookedtill,\n          min_rating:filters.min_rating,\n          BHK_filter:filters.BHK_filter,\n          trust_points_filter:filters.trust_points_filter,\n          windows_filter:filters.windows,\n          building_guard:filters.building_guard,\n          cctv_building:filters.cctv_building,\n          gender:filters.gender,\n          \n          laundry:filters.laundry,\n          cooler:filters.cooler,\n          AC:filters.AC,\n          TV:filters.TV,\n          power_backup:filters.power_backup,\n          purified_water:filters.purified_water,\n          balcony_filter:filters.balcony,\n          separate_washroom:filters.separate_washroom,\n          wifi:filters.wifi,\n          \n          geyser:filters.geyser,\n          floor_filter:filters.floor_filter,\n          search:filters.search,\n          ordering:filters.ordering,\n          discount:filters.discount,\n\n          floor_filter:filters.floor_filter,\n        house_refridgerator:filters.house_refridgerator,\n        washroom_filter:filters.washroom_filter,\n        beds_filter:filters.beds_filter,\n        rooms_filter:filters.rooms_filter,\n        cooler_filter:filters.cooler_filter,\n        geyser_filter:filters.geyser_filter,\n        AC_filter:filters.AC_filter,\n        TV_filter:filters.TV_filter,\n        sofa:filters.sofa,\n        apartment_type:filters.apartment_type,\n\n        city1:filters.city.toUpperCase(),\n          state1:filters.state.toUpperCase(),\n          country1:filters.country.toUpperCase(),\n          location1:filters.location.toUpperCase(),\n          landmark1:filters.landmark.toUpperCase(),\n          pincode1:filters.pincode,\n        },\n        config:config\n      });\n\n      const res2 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcghfhf4/minmax_apartment/1/`,{\n        config:config\n      });\n\n      \n      setmax_price(res2.data.max_price);\n      setmin_price(res2.data.min_price);\n     \n     \n      setPosts(res.data.results);\n      setLoading(false);\n      settotalPosts(res.data.count);\n      }\n      catch{\n        setLoading(false);\n      }\n    }\n    };\n   \n\n\n    fetchPosts();\n  }, [currentPage,filters]);\n\n\n  useEffect(async () => {\n    if(isAuthenticated){\n    const config = {\n      headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `JWT ${localStorage.getItem('access')}`,\n      },\n    };\n    \n      try {\n        await axios.put(`${process.env.REACT_APP_API_URL}/sourcenasdknahi29ad/wishlist/apartments/1/`,config,config)\n        .then(res1 => {\n          changeitemswishlist(res1.data);\n        })\n        .catch(err => {\n          \n        })\n        \n        }\n        catch{\n        }\n    }\n\n  },[isAuthenticated])\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if(error!=='')\n  {\n    return (\n      <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      >\n        <Grid item xs={5}><Eror eror={error}/></Grid>\n      </Grid>\n    );\n  }\n\n  if(loginpage)\n  {\n    return <Redirect to='/login' />\n  }\n\n  return (\n    <div>\n    <Bookcardmodel open={openmycard} change={setmycard} details={mypost} loginpage={loginpage} setloginpage={setloginpage}/>\n     \n      <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      >\n        <Grid item lg={12} xs={12}>\n        <ResponsiveDrawer  mypost={mypost} setmypost={setmypost} openmycard={openmycard} setmycard={setmycard} mapview={mapview} setmap={setmap} setfilters={setfilters} max_price={max_price} min_price={min_price} filters={filters} posts={posts} loading={loading} paginate={paginate} postsPerPage={postsPerPage} currentPage={currentPage} totalposts={totalposts} wishlistitems={wishlistitems} cartitems={cartitems} changeitemswishlist={changeitemswishlist} changeitemscart={changeitemscart}/>\n        \n\n        {/* <Pagination\n          postsPerPage={postsPerPage}\n          totalPosts={posts.length}\n          paginate={paginate}\n        /> */}\n      </Grid>\n      </Grid>\n\n      </div>\n  );\n};\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  access: state.authreducers.access\n});\n\nexport default connect(mapStateToProps)(App);","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/admin.js",["1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031"],"import React from 'react'\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n    // necessary for content to be below app bar\n    myclass: {\n      padding:'6%'\n     \n  },\n  \n  myclass1: {\n    padding:'30px'\n},\n    imageclass: {\n      width:'350px'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n    erorclass: {\n        width:'50%',\n        marginLeft:'25%',\n    },\n    papernewclass:{\n      padding:20,\n      [theme.breakpoints.up('sm')]: {\n        padding:30,\n      },\n     \n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n     \n    },\n  }));\n\nfunction Admin(props) {\n\n    const classes = useStyles();\n\n    const [booking1,setbooking1] = React.useState('')\n    const [booking,setbooking] = React.useState()\n    const [type,settype] = React.useState('')\n\n    const [booking2,setbooking2] = React.useState('')\n    const [booking22,setbooking22] = React.useState()\n    const [type2,settype2] = React.useState('')\n\n    const [room,setroom] = React.useState('')\n    const [email,setemail] = React.useState()\n    const [type3,settype3] = React.useState('')\n\n\n    \n    const [tempdiscount,settempdiscount] = React.useState()\n    const [type4,settype4] = React.useState('')\n\n    const [discount,setdiscount] = React.useState()\n    const [type5,settype5] = React.useState('')\n\n    const [commission,setcommission] = React.useState()\n    const [type6,settype6] = React.useState('')\n\n    const [type7,settype7] = React.useState('')\n\n    const [sellercommission,setsellercommission] = React.useState()\n    const [comm_type1,setcomm_type] = React.useState('percent')\n\n\n    const [open,setopen] = React.useState()\n\n    const handleclick1 = async (e) => {\n      e.preventDefault();\n      setopen(true);\n\n      const config = {\n        headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n        params:{\n          type:type\n        },\n      };\n     \n      \n      \n        try{\n\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcesejjnf298sh382g09181vsa91/admin_me/booking/${booking1}/`,config,config);\n        \n        setbooking(res.data)\n        var x, txt = \"\";\n\n        for (x in res.data) {\n          txt += ('<strong>' + x + '</strong>'+ \" \" + res.data[x] + \"<br />\");\n        };\n        \n        document.getElementById(\"bookingobject\").innerHTML = txt;\n        setopen(false)\n       \n        \n      \n      }\n        catch{\n         \n          setopen(false)\n        }\n\n      }\n\n      const handleclick2 = async (e) => {\n        e.preventDefault();\n\n        setopen(true)\n  \n        const config = {\n          headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `JWT ${localStorage.getItem('access')}`,\n          },\n          params:{\n            type:type\n          },\n        };\n       \n        \n        \n          try{\n  \n          const res = await axios.put(`${process.env.REACT_APP_API_URL}/sourcesejjnf298sh382g09181vsa91/admin_me/booking/${booking1}/`,config,config);\n          \n          handleclick1(e);\n          setopen(false)\n          \n         \n          \n        \n        }\n          catch{\n           \n            setopen(false)\n            setbooking('Error')\n          }\n  \n        }\n\n\n\n        const handleclick3 = async (e) => {\n          e.preventDefault();\n          setopen(true);\n    \n          const config = {\n            headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\n            },\n            params:{\n              type:type2\n            },\n          };\n         \n          \n          \n            try{\n    \n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcefej2991hw9gwggt71v1va88121/admin_me/room/${booking2}/`,config,config);\n            \n            setbooking22(res.data)\n            var x, txt = \"\";\n            res.data.map((booking) => {\n              for (x in booking) {\n                txt += ('<strong>' + x + '</strong>'+ \" \" + booking[x] + \"<br />\");\n              };\n              txt +='<br /><br /><br />'\n            })\n            \n            \n            document.getElementById(\"bookingobject22\").innerHTML = txt;\n            setopen(false)\n           \n            \n          \n          }\n            catch{\n             \n              setopen(false)\n            }\n    \n          }\n    \n          const handleclick4 = async (e) => {\n            e.preventDefault();\n    \n            setopen(true)\n      \n            const config = {\n              headers: {\n                      'Content-Type': 'application/json',\n                      'Authorization': `JWT ${localStorage.getItem('access')}`,\n              },\n              params:{\n                type:type2\n              },\n            };\n           \n            \n            \n              try{\n      \n              const res = await axios.put(`${process.env.REACT_APP_API_URL}/sourcefej2991hw9gwggt71v1va88121/admin_me/room/${booking2}/`,config,config);\n              \n              handleclick3(e);\n              setopen(false)\n              \n             \n              \n            \n            }\n              catch{\n               \n                setopen(false)\n                setbooking22('Error')\n              }\n      \n            }\n\n            const handleclick5 = async (e) => {\n              e.preventDefault();\n              setopen(true);\n        \n              const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n                params:{\n                  type:type3,\n                  email:email,\n                },\n              };\n             \n              \n              \n                try{\n        \n                const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcesfnei9uq8ahd012bwq901hababn2/admin_me/seller/1/`,config,config);\n                \n                setroom(res.data)\n                var x, txt = \"\";\n                res.data.map((booking) => {\n                  for (x in booking) {\n                    txt += ('<strong>' + x + '</strong>'+ \" \" + booking[x] + \"<br />\");\n                  };\n                  txt +='<br /><br /><br />'\n                })\n                \n                \n                document.getElementById(\"seller_room\").innerHTML = txt;\n                setopen(false)\n               \n                \n              \n              }\n                catch{\n                 \n                  setopen(false)\n                }\n        \n              }\n\n\n\n              const handleclick6 = async (e) => {\n                e.preventDefault();\n                setopen(true);\n          \n                const config = {\n                  headers: {\n                          'Content-Type': 'application/json',\n                          'Authorization': `JWT ${localStorage.getItem('access')}`,\n                  },\n                  params:{\n                    type:type4,\n                    x:tempdiscount,\n                  },\n                };\n               \n                \n                \n                  try{\n          \n                  const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcesvnei929ah92vb1bx819uad8192bzs/admin_me/temp_discount/1/`,config,config);\n                  \n                  \n                  var txt = res.data;\n                  \n                  \n                  \n                  document.getElementById(\"tempdiscountme\").innerHTML = txt;\n                  setopen(false)\n                 \n                  \n                \n                }\n                  catch{\n                   \n                    setopen(false)\n                  }\n          \n                }\n\n\n\n                const handleclick7 = async (e) => {\n                  e.preventDefault();\n                  setopen(true);\n            \n                  const config = {\n                    headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': `JWT ${localStorage.getItem('access')}`,\n                    },\n                    params:{\n                      type:type5,\n                      x:discount,\n                    },\n                  };\n                 \n                  \n                  \n                    try{\n            \n                    const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcesnwiuqiqah8qbbavcbqkq8281h911/admin_me/discount/1/`,config,config);\n                    \n                    \n                    var txt = res.data;\n                    \n                    \n                    \n                    document.getElementById(\"discountme\").innerHTML = txt;\n                    setopen(false)\n                   \n                    \n                  \n                  }\n                    catch{\n                     \n                      setopen(false)\n                    }\n            \n                  }\n\n\n                  const handleclick8 = async (e) => {\n                    e.preventDefault();\n                    setopen(true);\n              \n                    const config = {\n                      headers: {\n                              'Content-Type': 'application/json',\n                              'Authorization': `JWT ${localStorage.getItem('access')}`,\n                      },\n                      params:{\n                        type:type6,\n                        x:commission,\n                        comm_type:comm_type1,\n                      },\n                    };\n                   \n                    \n                    \n                      try{\n              \n                      const res = await axios.get(`${process.env.REACT_APP_API_URL}/soucesf3292830290sh2009223anhdhh921h/admin_me/commission/1/`,config,config);\n                      \n                      \n                      var txt = res.data;\n                      \n                      \n                      \n                      document.getElementById(\"commissionme\").innerHTML = txt;\n                      setopen(false)\n                     \n                      \n                    \n                    }\n                      catch{\n                       \n                        setopen(false)\n                      }\n              \n                    }\n\n\n\n                    const handleclick9 = async (e) => {\n                      e.preventDefault();\n                      setopen(true);\n                \n                      const config = {\n                        headers: {\n                                'Content-Type': 'application/json',\n                                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                        },\n                        params:{\n                         \n                          x:sellercommission,\n                        },\n                      };\n                     \n                      \n                      \n                        try{\n                \n                        const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcednuw889382yhhgh23gr372938980sg932/admin_me/seller/commission/1/`,config,config);\n                        \n                        \n                        var txt = res.data;\n                        \n                        \n                        \n                        document.getElementById(\"sellercommissionme\").innerHTML = txt;\n                        setopen(false)\n                       \n                        \n                      \n                      }\n                        catch{\n                         \n                          setopen(false)\n                        }\n                \n                      }\n\n\n\n\n                      const handleclick10 = async (e) => {\n                        e.preventDefault();\n                        setopen(true);\n                  \n                        const config = {\n                          headers: {\n                                  'Content-Type': 'application/json',\n                                  'Authorization': `JWT ${localStorage.getItem('access')}`,\n                          },\n                          params:{\n                           \n                            type:type7\n                          },\n                        };\n                       \n                        \n                        \n                          try{\n                  \n                          const res = await axios.put(`${process.env.REACT_APP_API_URL}/sourceahwbhduih2198yay92y91gghcxvv28192192034/admin_me/refresh/1/`,config,config);\n                          \n                          \n                          var txt = res.data;\n                          \n                          \n                          \n                          document.getElementById(\"refreshme\").innerHTML = txt;\n                          setopen(false)\n                         \n                          \n                        \n                        }\n                          catch{\n                           \n                            setopen(false)\n                          }\n                  \n                        }\n\n\n\n            \n        \n      \n     \n\n\n    if(props.profile){\n    return (\n        <div>\n\n            <br />\n\n            <Backdrop className={classes.backdrop} open={open}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n\n            \n            \n\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n           >\n             <Grid item xs={8} >\n\n{\n                props.profile.is_superuser ? <><FormControl className={classes.form}>\n                <InputLabel id=\"type\">Type</InputLabel>\n                <Select\n                  labelId=\"type\"\n                  id=\"type\"\n                  value={type}\n                  onChange={e => {settype(e.target.value)}}\n                >\n                  <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n                  \n                  <MenuItem value={'room'}>Room</MenuItem>\n                  <MenuItem value={'shop'}>Shop</MenuItem>\n                  <MenuItem value={'apartment'}>Apartment</MenuItem>\n                </Select>\n                \n              </FormControl><TextField\n                multiline\n                variant=\"outlined\"\n                margin=\"normal\"\n                \n                fullWidth\n                rows={1}\n                id=\"booking_id\"\n                name=\"booking_id\"\n                label=\"Room booking id\"\n                value={booking1}\n                onInput={(e) => {setbooking1(e.target.value)}}\n\n                \n              /><Button variant=\"contained\" onClick={e => {handleclick1(e)}}>Fetch</Button><br /><br />\n              <Button variant=\"contained\" onClick={e => {handleclick2(e)}}>Cancel</Button>  </>\n              : null\n            }\n            </Grid>\n            <Grid item xs={8} >\n            <p id=\"bookingobject\"></p>\n            </Grid>\n            <br />\n\n\n            <Grid item xs={8} >\n\n{\n                props.profile.is_superuser ? <><FormControl className={classes.form}>\n                <InputLabel id=\"type\">Type</InputLabel>\n                <Select\n                  labelId=\"type\"\n                  id=\"type\"\n                  value={type2}\n                  onChange={e => {settype2(e.target.value)}}\n                >\n                  <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n                  \n                  <MenuItem value={'room'}>Room</MenuItem>\n                  <MenuItem value={'shop'}>Shop</MenuItem>\n                  <MenuItem value={'apartment'}>Apartment</MenuItem>\n                </Select>\n                \n              </FormControl><TextField\n                multiline\n                variant=\"outlined\"\n                margin=\"normal\"\n                \n                fullWidth\n                rows={1}\n                id=\"room_id\"\n                name=\"room_id\"\n                label=\"Room id\"\n                value={booking2}\n                onInput={(e) => {setbooking2(e.target.value)}}\n\n                \n              /><Button variant=\"contained\" onClick={e => {handleclick3(e)}}>Fetch</Button><br /><br />\n              <Button variant=\"contained\" onClick={e => {handleclick4(e)}}>Refresh</Button>  </>\n              : null\n            }\n            </Grid>\n            <Grid item xs={8} >\n            <p id=\"bookingobject22\"></p>\n            </Grid>\n\n            <br />\n\n            <Grid item xs={8} >\n\n            {\n                props.profile.is_superuser ? <><FormControl className={classes.form}>\n                <InputLabel id=\"type\">Type</InputLabel>\n                <Select\n                  labelId=\"type\"\n                  id=\"type\"\n                  value={type3}\n                  onChange={e => {settype3(e.target.value)}}\n                >\n                  <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n                  \n                  <MenuItem value={'room'}>Room</MenuItem>\n                  <MenuItem value={'shop'}>Shop</MenuItem>\n                  <MenuItem value={'apartment'}>Apartment</MenuItem>\n                </Select>\n                \n              </FormControl><TextField\n                multiline\n                variant=\"outlined\"\n                margin=\"normal\"\n                \n                fullWidth\n                rows={1}\n                id=\"email\"\n                name=\"email\"\n                label=\"seller email\"\n                value={email}\n                onInput={(e) => {setemail(e.target.value)}}\n\n                \n              /><Button variant=\"contained\" onClick={e => {handleclick5(e)}}>Fetch</Button><br /><br />\n               </>\n              : null\n            }\n            </Grid>\n            \n            <Grid item xs={8} >\n            <p id=\"seller_room\"></p>\n            </Grid>\n\n            <br />\n\n            <Grid item xs={8} >\n\n            {\n                props.profile.is_superuser ? <><FormControl className={classes.form}>\n                <InputLabel id=\"type\">Type</InputLabel>\n                <Select\n                  labelId=\"type\"\n                  id=\"type\"\n                  value={type4}\n                  onChange={e => {settype4(e.target.value)}}\n                >\n                  <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n                  \n                  <MenuItem value={'room'}>Room</MenuItem>\n                  <MenuItem value={'shop'}>Shop</MenuItem>\n                  <MenuItem value={'apartment'}>Apartment</MenuItem>\n                </Select>\n                \n              </FormControl><TextField\n                multiline\n                variant=\"outlined\"\n                margin=\"normal\"\n                \n                fullWidth\n                rows={1}\n                id=\"temp_discount\"\n                name=\"temp_discount\"\n                label=\"Fake discount\"\n                value={tempdiscount}\n                onInput={(e) => {settempdiscount(e.target.value)}}\n\n                \n              /><Button variant=\"contained\" onClick={e => {handleclick6(e)}}>Apply</Button><br /><br />\n               </>\n              : null\n            }\n            </Grid>\n\n            <Grid item xs={8} >\n            <p id=\"tempdiscountme\"></p>\n            </Grid>\n            \n            <br />\n\n            <Grid item xs={8} >\n\n            {\n                props.profile.is_superuser ? <><FormControl className={classes.form}>\n                <InputLabel id=\"type\">Type</InputLabel>\n                <Select\n                  labelId=\"type\"\n                  id=\"type\"\n                  value={type5}\n                  onChange={e => {settype5(e.target.value)}}\n                >\n                  <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n                  \n                  <MenuItem value={'room'}>Room</MenuItem>\n                  <MenuItem value={'shop'}>Shop</MenuItem>\n                  <MenuItem value={'apartment'}>Apartment</MenuItem>\n                </Select>\n                \n              </FormControl><TextField\n                multiline\n                variant=\"outlined\"\n                margin=\"normal\"\n                \n                fullWidth\n                rows={1}\n                id=\"discount\"\n                name=\"discount\"\n                label=\"Company discount\"\n                value={discount}\n                onInput={(e) => {setdiscount(e.target.value)}}\n\n                \n              /><Button variant=\"contained\" onClick={e => {handleclick7(e)}}>Apply</Button><br /><br />\n               </>\n              : null\n            }\n            </Grid>\n\n            <Grid item xs={8} >\n            <p id=\"discountme\"></p>\n            </Grid>\n\n            <br />\n\n\n            <Grid item xs={8} >\n\n            {\n                props.profile.is_superuser ? <><FormControl className={classes.form}>\n                <InputLabel id=\"type\">Type</InputLabel>\n                <Select\n                  labelId=\"type\"\n                  id=\"type\"\n                  value={type6}\n                  onChange={e => {settype6(e.target.value)}}\n                >\n                  <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n                  \n                  <MenuItem value={'room'}>Room</MenuItem>\n                  <MenuItem value={'shop'}>Shop</MenuItem>\n                  <MenuItem value={'apartment'}>Apartment</MenuItem>\n                </Select>\n                \n              </FormControl>\n              \n              <FormControl className={classes.form}>\n                <InputLabel id=\"type\">Commission Type</InputLabel>\n                <Select\n                  labelId=\"type\"\n                  id=\"type\"\n                  value={comm_type1}\n                  onChange={e => {setcomm_type(e.target.value)}}\n                >\n                  \n                  <MenuItem value={'percent'}>Percent</MenuItem>\n                  <MenuItem value={'fix'}>Fix amount</MenuItem>\n                 \n                </Select>\n                \n              </FormControl>\n              \n              <TextField\n                multiline\n                variant=\"outlined\"\n                margin=\"normal\"\n                \n                fullWidth\n                rows={1}\n                id=\"discount\"\n                name=\"discount\"\n                label=\"Commission\"\n                value={commission}\n                onInput={(e) => {setcommission(e.target.value)}}\n\n                \n              /><Button variant=\"contained\" onClick={e => {handleclick8(e)}}>Apply</Button><br /><br />\n               </>\n              : null\n            }\n            </Grid>\n\n            <Grid item xs={8} >\n            <p id=\"commissionme\"></p>\n            </Grid>\n\n            <br />\n\n\n\n            <Grid item xs={8} >\n\n            {\n                props.profile.is_superuser ? <><TextField\n                multiline\n                variant=\"outlined\"\n                margin=\"normal\"\n                \n                fullWidth\n                rows={1}\n                id=\"discount\"\n                name=\"discount\"\n                label=\"Seller Commission\"\n                value={sellercommission}\n                onInput={(e) => {setsellercommission(e.target.value)}}\n\n                \n              /><Button variant=\"contained\" onClick={e => {handleclick9(e)}}>Apply</Button><br /><br />\n               </>\n              : null\n            }\n            </Grid>\n\n            <Grid item xs={8} >\n            <p id=\"sellercommissionme\"></p>\n            </Grid>\n\n            <Grid item xs={8} >\n\n            {\n                props.profile.is_superuser ? <><FormControl className={classes.form}>\n                <InputLabel id=\"type\">Type</InputLabel>\n                <Select\n                  labelId=\"type\"\n                  id=\"type\"\n                  value={type7}\n                  onChange={e => {settype7(e.target.value)}}\n                >\n                  <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n                  \n                  <MenuItem value={'room'}>Room</MenuItem>\n                  <MenuItem value={'shop'}>Shop</MenuItem>\n                  <MenuItem value={'apartment'}>Apartment</MenuItem>\n                </Select>\n                \n              </FormControl><TextField\n                multiline\n                variant=\"outlined\"\n                margin=\"normal\"\n                \n                fullWidth\n                rows={1}\n                id=\"refresh\"\n                name=\"refresh\"\n                label=\"refresh\"\n                value=\"refresh rooms\"\n               \n                \n              /><Button variant=\"contained\" onClick={e => {handleclick10(e)}}>Refresh</Button><br /><br />\n               </>\n              : null\n            }\n            </Grid>\n\n            <Grid item xs={8} >\n            <p id=\"refreshme\"></p>\n            </Grid>\n\n            <br />\n            \n\n\n\n           </Grid>\n        </div>\n    )}\n    else{\n        return (\n            <div></div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.authreducers.isAuthenticated,\n    profile : state.authreducers.user\n  });\n  \nexport default connect(mapStateToProps)(Admin);\n\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/complaintdetails.js",["1032","1033","1034","1035","1036","1037"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/complaint_form.js",["1038","1039","1040","1041","1042"],"import React,{useState,useEffect} from 'react';\n\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport Eror from '../components/eror'\nimport Paper from '@material-ui/core/Paper';\nimport '../components/css/App.css';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Add from '../addroom.png';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst validationSchema = yup.object({\n  \n\n    room_id: yup\n    .string('')\n    .required('Room selection is required'),\n\n    subject: yup\n    .string('')\n    .required('Subject is required'),\n\n    message: yup\n    .string('')\n    .required('Message is required'),\n   \n\n    \n});\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst useStyles = makeStyles(theme => ({\n  myclass: {\n    padding:'6%'\n   \n},\nbgclass: {\n  backgroundColor:`${process.env.REACT_APP_BG_COLOR}`,\n  height:'100vh'\n \n\n},\nmyclass1: {\n  padding:'30px'\n},\nimageclass: {\n  overflow: 'hidden',\n    width: '140px',\n    height: '140px',\n    position:'relative',\n  borderRadius:'30%',\n  [theme.breakpoints.up('sm')]: {\n    borderRadius:'30%',\n    overflow: 'hidden',\n    width: '170px',\n    height: '170px',\n    position:'relative',\n  },\n  [theme.breakpoints.up('md')]: {\n    borderRadius:'30%',\n    overflow: 'hidden',\n    width: '200px',\n    height: '200px',\n    position:'relative',\n  },\n  marginRight:'1%',\n  marginLeft:'1%',\n\n},\n    erorclass: {\n      width:'50%',\n      marginLeft:'25%',\n  },\n  buttonclass:{\n    padding:0,\n    borderRadius:'70%',\n    \n    },\n    papernewclass:{\n      padding:20,\n      [theme.breakpoints.up('sm')]: {\n        padding:30,\n      },\n     \n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n     \n    },\n\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n}));\n\nfunction ProfileForm (props){\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [myprofile,setprofile] = useState({\n     \n      file:Add\n    })\n\n   \n    const [redirect,setredirect] = useState(false)\n    const [error,seterror] = useState(false)\n    const hiddenFileInput1 = React.useRef(null);\n    const [open1,setopen1] = React.useState(false);\n    const [message,setmessage] = React.useState(false);\n    const [bookings,setbookings] = React.useState([]);\n\n    const [load,setload] = useState(false)\n   \n\n    useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n              if(props.isAuthenticated)\n              {\n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcehjbda983290whjba/room/book/`,config);\n              \n                setbookings(res.data);\n                \n                \n              \n              }\n                catch{\n                 \n                }\n        }\n    }\n    \n    ,[props.isAuthenticated])\n\n  \n\n  const formik = useFormik({\n    enableReinitialize:true,\n    initialValues: {\n        roomid: '',\n      subject:'',\n      message:'',\n      photo:'',\n      \n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      setload(true);\n      let form_data = new FormData();\n      form_data.append('room_id',values.room_id)\n      form_data.append('subject',values.subject)\n     \n      form_data.append('message',values.message)\n      \n      form_data.append('photo',values.photo)\n      \n      const config = {\n        headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n\n      \n   \n    \n        await axios.post(`${process.env.REACT_APP_API_URL}/sourcenjjbrtrtd7668ugf787t87t9yuigff/complaints/room/`,form_data,config)\n        .then((res) => {\n          setload(false);\n          setredirect(true)\n        })\n        .catch((err) => {\n          setload(false);\n          setmessage(`Error`)\n          setopen1(true)\n         \n        })\n              \n        \n\n              \n                \n      \n    },\n  });\n\n\n  const Filevalidation1 = (file1,name) => {\n  \n \n    // Check if any file is selected.\n    \n       \n  \n            const fsize =file1.size;\n            const file = Math.round((fsize / 1024));\n            // The size of the file.\n            if (file >= 5120) {\n                alert(\n                  \"File too Big, please select a file less than 5mb\");\n            } \n            else{\n              \n              formik.setFieldValue('photo',file1);\n              setprofile({...myprofile,file: URL.createObjectURL(file1)});\n            }\n        \n    \n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setopen1(false);\n  };\n\n  if(redirect==true)\n  {\n    return <Redirect to='/dashboard/complaints/room' />\n  }\n  if(error===true)\n  {\n    return <div className={classes.erorclass}><Eror error={'Cannot issue your complaint.'} /></div>;\n  }\n\n  return (\n    <div className=\"formbgclass1\">\n      <Backdrop className={classes.backdrop} open={load}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    <div className={classes.myclass}>\n\n    \n\n\n    <Snackbar open={open1} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          {message}\n        </Alert>\n        </Snackbar>\n        \n        <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n          <Paper elevation={5} className={classes.papernewclass}>\n      <form onSubmit={formik.handleSubmit}>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n\n      \n     \n\n      <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput1.current.click();}}>\n        <img src={myprofile.file} className={classes.imageclass}/>\n        </Button>\n\n      <input type='file'  ref={hiddenFileInput1} style={{display:'none'}}  id='photo' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation1(event.target.files[0]);}}/> \n \n    </Grid>\n\n        <br />\n          <Grid item>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"subject\"\n          name=\"subject\"\n          label=\"subject\"\n          value={formik.values.subject}\n          onChange={formik.handleChange}\n          error={formik.touched.subject && Boolean(formik.errors.subject)}\n          helperText={formik.touched.subject && formik.errors.subject}\n        />\n        </Grid>\n        <Grid item>\n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         \n         fullWidth\n          rows={1}\n          id=\"message\"\n          name=\"message\"\n          label=\"message\"\n          value={formik.values.message}\n          onChange={formik.handleChange}\n          error={formik.touched.message && Boolean(formik.errors.message)}\n          helperText={formik.touched.message && formik.errors.message}\n        />\n        </Grid>\n       \n\n\n        <FormControl variant=\"outlined\" className={classes.form} >\n        <InputLabel id=\"demo-sroom_id\">Booking ID</InputLabel>\n        <Select\n          labelId=\"demo-sroom_id\"\n          id=\"room_id\"\n          value={formik.values.room_id}\n          onChange={(e) => {e.preventDefault();formik.setFieldValue('room_id', e.target.value)}}\n          label=\"Select Booking\"\n          error={formik.touched.room_id && Boolean(formik.errors.room_id)}\n          helperText={formik.touched.room_id && formik.errors.room_id}\n        >\n         \n\n          {\n              bookings.map((booking) => (\n                <MenuItem value={booking.booking_id}>{booking.booking_id}</MenuItem>\n              ))\n          }\n          \n        </Select>\n      </FormControl>\n\n      <Grid item> <br /></Grid>\n\n       \n        \n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n      </form>\n      </Paper>\n      </Grid>\n    </div>\n    </div>\n  );\n}\n\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(ProfileForm)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/complaintdetails_shop.js",["1043","1044","1045","1046","1047","1048"],"\n\n\n\n\n\n\n\n  import React,{ useState} from 'react'\nimport {connect} from 'react-redux'\nimport Eror from '../components/eror'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport {makeStyles } from '@material-ui/core/styles';\nimport Tablecomp from '../components/complainttable';\nimport TextField from '@material-ui/core/TextField';\nimport SimpleModal from '../components/imagemodal';\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport '../components/css/App.css';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport Load1 from '../components/Spinner';\n\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n   \n    erorclass:{\n      width:'50%',\n      marginLeft:'25%',\n    },\n    textclass:{\n      border: '1px solid black',\n      padding:10,\n      borderRadius:'20%'\n    },\n    imgclass:{\n      width:'90vw',\n      maxWidth:'400px',\n     \n      \n    },\n    imgclass1:{\n      width:'35vw',\n      maxWidth:'200px',\n     \n      \n    },\n    imgclass2:{\n      width:'35vw',\n      maxWidth:'200px',\n     \n      \n    },\n    myclass:{\n      width:'80vw',\n      maxWidth:'500px',\n\n    },\n    buttonclass:{\n      padding:0,\n      width:'90vw',\n      maxWidth:'400px',\n      \n    },\n    buttonclass1:{\n      padding:0,\n      width:'35vw',\n      maxWidth:'200px',\n\n      \n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n    divclass: {\n      width:'90vw',\n      height:'50vh',\n      maxHeight:'900px',\n      maxWidth:'700px',\n      backgroundColor:'white',\n      overflowY: 'scroll',\n      border: '1px solid black',\n    },\n    message:{\n      padding:10,\n      backgroundColor:'#dbf6e9',\n     \n    \n    },\n\n    message1:{\n      padding:10,\n      backgroundColor:'#9ddfd3',\n      \n      \n    },\n\n    \n   \n  }));\n\n\n  function createData(name, calories) {\n    return { name, calories};\n  }\n  \n \n\nfunction Complaintdetails(props) {\n    const classes = useStyles();\n\n    const complaintid = props.match.params.complaint_id;\n\n    const [complaint,setcomplaint] = useState(false)\n    const [error,seterror] = useState(false)\n    const [rows,setrows] = useState(false)\n    const [reply,setreply] = useState('')\n    const [photo,setphoto] = useState('')\n    const [open,changeopen] = useState(false)\n    const [load,setload] = useState(false)\n    const [message,setmessage] = useState(false)\n    const [done,setdone] = useState(false)\n    const hiddenFileInput1 = React.useRef(null);\n\n    const [open1,changeopen1] = useState(false)\n    const [showphoto,setshowphoto] = useState('')\n\n    React.useEffect(\n        async () => {\n          const config = {\n            headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\n            },\n            params:{\n              type:'shop'\n            },\n          };\n              \n              if(props.isAuthenticated && complaintid)\n              \n              {\n               \n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcendshf93u029320hfuibh83u12edsygcyg2/complaints/shop/${complaintid}/`,config);\n                \n                setcomplaint(res.data)\n                \n               \n\n                setrows([\n                  createData('Issued by', res.data.customer_name),\n                  createData('Issued on', res.data.shop_name),\n               \n                  createData('Issued date', res.data.created_at.slice(0,10)),\n                  createData('Customer status', `${res.data.customer_fullfilled ? 'Closed' :'Open'}`),\n                  createData('Our status', `${res.data.seller_fullfilled ? 'Closed' :'Open'}`),\n                  createData('Closed', `${res.data.seller_fullfilled && res.data.customer_fullfilled ? 'Yes' :'No'}`),\n                \n                  createData('Issuer contact', res.data.customer_contact),\n                  \n                ])\n\n                \n\n\n                try{\n\n                  \n                  \n                  const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourceadhwu178y2819gysag9812yg73467vbs3y28yga/complaints/messages/${complaintid}/`,config);\n                \n                setmessage(res.data)\n               \n                setdone(true)\n               \n\n              \n\n               \n                \n              \n              }\n              catch{\n                \n              }\n                \n              \n              }\n                catch{\n                    seterror(true)\n                }\n                \n              \n        }\n    }\n\n\n   \n    \n    ,[props.isAuthenticated,complaintid])\n\n\n    const Filevalidation1 = (file1,name) => {\n  \n \n      // Check if any file is selected.\n      \n         \n    \n              const fsize =file1.size;\n              const file = Math.round((fsize / 1024));\n              // The size of the file.\n              if (file >= 5120) {\n                  alert(\n                    \"File too Big, please select a file less than 5mb\");\n              } \n              else{\n                \n              \n                setphoto(file1);\n                document.getElementById(\"attached_file\").innerHTML = file1.name;\n              }\n          \n      \n    }\n\n\n    const handleclick1 = async (e) => {\n      e.preventDefault();\n      const config = {\n        headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n\n      const body = {\n        data:reply,\n      }\n      \n      if(reply!=='' || photo!=='')\n\n      document.getElementById(\"attached_file\").innerHTML = \"\";\n     \n      \n      {\n        setload(true);\n\n        let form_data = new FormData();\n      \n        form_data.append('message',reply)\n        \n        form_data.append('photo',photo)\n       \n        try{const res = await axios.put(`${process.env.REACT_APP_API_URL}/sourcendshf93u029320hfuibh83u12edsygcyg2/complaints/shop/${complaintid}/`,form_data,config);\n        \n        setmessage(res.data)\n               \n\n                \n                \n\n                setload(false)\n                setreply('')\n                setphoto('')\n        \n      \n      }\n        catch{\n\n          setload(false)\n\n          seterror(true)\n            \n        }\n    }\n\n  }\n\n\n\n  const handleclick2 = async (e) => {\n    e.preventDefault();\n    const config = {\n      headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `JWT ${localStorage.getItem('access')}`,\n      },\n    };\n    const body = {\n      data:'',\n    }\n\n    \n    \n\n    \n    \n\n      setload(true)\n     \n      try{const res = await axios.patch(`${process.env.REACT_APP_API_URL}/sourcendshf93u029320hfuibh83u12edsygcyg2/complaints/shop/${complaintid}/`,body,config);\n      \n      setcomplaint(res.data)\n               \n\n      setrows([\n        createData('Issued by', res.data.customer_name),\n        createData('Issued on', res.data.shop_name),\n       \n        createData('Issued date', res.data.created_at.slice(0,10)),\n        createData('Customer status', `${res.data.customer_fullfilled ? 'Closed' :'Open'}`),\n        createData('Our status', `${res.data.seller_fullfilled ? 'Closed' :'Open'}`),\n        createData('Closed', `${res.data.seller_fullfilled && res.data.customer_fullfilled ? 'Yes' :'No'}`),\n      \n        createData('Issuer contact', res.data.customer_contact),\n        \n      ])\n      \n                setload(false)\n    }\n      catch{\n\n        setload(false)\n\n        seterror(true)\n         \n      }\n  \n\n}\n\n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error' /></div>\n    }\n\n\n    if(complaint && rows && props.profile && done)\n{\n    return (\n        <div>\n\n<Backdrop className={classes.backdrop} open={load}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n\n          <SimpleModal open={open} change={changeopen} photo={complaint.photo1}/>\n\n          <SimpleModal open={open1} change={changeopen1} photo={showphoto}/>\n          <br />\n          <br />\n\n\n        <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n\n          <Typography variant='h5' color=\"secondary\">\n            {complaint.subject}\n          </Typography>\n          <br />\n\n          <div className={classes.myclass}>\n          <TextField\n            id=\"message\"\n            label=\"Complaint message\"\n            multiline\n            \n            value={complaint.message}\n            variant=\"outlined\"\n            onInput={(e) => {e.preventDefault();}}\n            fullWidth\n          />  \n          </div>\n\n          <br />\n\n         \n\n          \n\n          \n        </Grid>\n            \n           \n        <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n          <Grid item className={classes.imgclass}>\n          <Button onClick={(e) => {e.preventDefault();changeopen(true)}} className={classes.buttonclass}><img src={complaint.photo1} /></Button>\n          </Grid>\n          <br />\n\n            <Grid item xs={10}>\n            <Tablecomp comp={complaint.complaint_id} rows={rows}/>\n            </Grid>\n            \n        </Grid>\n        <br />\n\n\n        \n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          \n          >\n\n            \n\n            <div className={classes.divclass}>\n            <br />\n             \n              {\n                message.map((mes) => (\n                  \n                  \n                  \n                    mes.sender_id!==props.profile.id ?  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"flex-start\"\n                  ><Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"center\"\n                ><div className=\"triangle-left\" /><div className={classes.message}><div className={classes.imgclass1}><Button onClick={(e) => {e.preventDefault();setshowphoto(mes.photo);changeopen1(true);}} className={classes.buttonclass1}><img src={mes.photo} /></Button></div>\n                    <p>{mes.message}</p></div></Grid><br /></Grid> : \n                    <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"flex-end\"\n                  ><Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-end\"\n                  alignItems=\"center\"\n                ><div className={classes.message1}><div className={classes.imgclass2}><Button onClick={(e) => {e.preventDefault();setshowphoto(mes.photo);changeopen1(true);}} className={classes.buttonclass1}><img src={mes.photo} /></Button></div>\n                    <p>{mes.message}</p></div><div className=\"triangle-right\" /></Grid><br /></Grid>\n                  \n\n                  \n                 \n                ))\n              }\n            </div>\n          </Grid>\n\n\n        <br />\n\n       \n\n\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          \n          >\n<input type='file' ref={hiddenFileInput1} style={{display:'none'}} id='photo' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          event.preventDefault();Filevalidation1(event.target.files[0]);}}/> \n\n          <br />\n             \n          \n          <Grid\n  container\n  direction=\"row\"\n  justify=\"center\"\n  alignItems=\"center\"\n>\n      <FormControl variant=\"outlined\" noValidate className={classes.myclass}>\n                            <InputLabel >Message</InputLabel>\n                            <OutlinedInput\n                                value={reply}\n                                onInput={(e) => {e.preventDefault();setreply(e.target.value)}}\n            \n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                    <IconButton onClick={(e) =>{handleclick1(e);}}>\n                                       <SendIcon />\n                                    </IconButton>\n                                </InputAdornment>\n                                }\n                                labelWidth={100}\n                                />\n                            </FormControl>\n          \n\n          \n          <IconButton onClick={(e) => {hiddenFileInput1.current.click();}}><AttachFileIcon /></IconButton>\n          <p id=\"attached_file\"></p>\n          </Grid>\n          </Grid>\n\n       \n\n\n<br />\n<br />\n<Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          \n          >\n\n{\n  (props.profile.is_superuser || props.profile.is_staff) && complaint.seller_fullfilled===false ? <Button variant=\"contained\" color=\"secondary\" onClick={(e) =>{handleclick2(e);}}>\n  Close complaint\n</Button> : null\n}\n\n{\n  props.profile.is_superuser===false && props.profile.is_staff===false && props.profile.is_seller===false && complaint.customer_fullfilled===false ? <Button variant=\"contained\" color=\"secondary\" onClick={(e) =>{handleclick2(e);}}>\n  Close complaint\n</Button> : null\n}\n    \n    \n    \n\n          </Grid>\n  <br />\n     \n\n       \n        \n        </div>\n    )}\n    else{\n        return (\n            <div>\n              <Load1 loading={true} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.authreducers.isAuthenticated,\n    profile : state.authreducers.user\n  });\n  \n  export default connect(mapStateToProps)(Complaintdetails)\n\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/complaint_form_shop.js",["1049","1050","1051","1052","1053"],"import React,{useState,useEffect} from 'react';\n\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport Eror from '../components/eror'\nimport Paper from '@material-ui/core/Paper';\nimport '../components/css/App.css';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Add from '../addroom.png';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst validationSchema = yup.object({\n  \n\n    room_id: yup\n    .string('')\n    .required('Room selection is required'),\n\n    subject: yup\n    .string('')\n    .required('Subject is required'),\n\n    message: yup\n    .string('')\n    .required('Message is required'),\n   \n\n    \n});\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst useStyles = makeStyles(theme => ({\n  myclass: {\n    padding:'6%'\n   \n},\nbgclass: {\n  backgroundColor:`${process.env.REACT_APP_BG_COLOR}`,\n  height:'100vh'\n \n\n},\nmyclass1: {\n  padding:'30px'\n},\nimageclass: {\n  overflow: 'hidden',\n    width: '140px',\n    height: '140px',\n    position:'relative',\n  borderRadius:'30%',\n  [theme.breakpoints.up('sm')]: {\n    borderRadius:'30%',\n    overflow: 'hidden',\n    width: '170px',\n    height: '170px',\n    position:'relative',\n  },\n  [theme.breakpoints.up('md')]: {\n    borderRadius:'30%',\n    overflow: 'hidden',\n    width: '200px',\n    height: '200px',\n    position:'relative',\n  },\n  marginRight:'1%',\n  marginLeft:'1%',\n\n},\n    erorclass: {\n      width:'50%',\n      marginLeft:'25%',\n  },\n  buttonclass:{\n    padding:0,\n    borderRadius:'70%',\n    \n    },\n    papernewclass:{\n      padding:20,\n      [theme.breakpoints.up('sm')]: {\n        padding:30,\n      },\n     \n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n     \n    },\n\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n}));\n\nfunction ProfileForm (props){\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [myprofile,setprofile] = useState({\n     \n      file:Add\n    })\n\n   \n    const [redirect,setredirect] = useState(false)\n    const [error,seterror] = useState(false)\n    const hiddenFileInput1 = React.useRef(null);\n    const [open1,setopen1] = React.useState(false);\n    const [message,setmessage] = React.useState(false);\n    const [bookings,setbookings] = React.useState([]);\n\n    const [load,setload] = useState(false)\n   \n\n    useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n              if(props.isAuthenticated)\n              {\n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcehdawnajk289uadhq/shop/book/`,config);\n              \n                setbookings(res.data);\n                \n                \n              \n              }\n                catch{\n                 \n                }\n        }\n    }\n    \n    ,[props.isAuthenticated])\n\n  \n\n  const formik = useFormik({\n    enableReinitialize:true,\n    initialValues: {\n        roomid: '',\n      subject:'',\n      message:'',\n      photo:'',\n      \n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      setload(true);\n      let form_data = new FormData();\n      form_data.append('room_id',values.room_id)\n      form_data.append('subject',values.subject)\n     \n      form_data.append('message',values.message)\n      \n      form_data.append('photo',values.photo)\n      \n      const config = {\n        headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n\n      \n   \n    \n        await axios.post(`${process.env.REACT_APP_API_URL}/sourcendshf93u029320hfuibh83u12edsygcyg2/complaints/shop/`,form_data,config)\n        .then((res) => {\n          setload(false);\n          setredirect(true)\n        })\n        .catch((err) => {\n          setload(false);\n          setmessage(`Error`)\n          setopen1(true)\n         \n        })\n              \n        \n\n              \n                \n      \n    },\n  });\n\n\n  const Filevalidation1 = (file1,name) => {\n  \n \n    // Check if any file is selected.\n    \n       \n  \n            const fsize =file1.size;\n            const file = Math.round((fsize / 1024));\n            // The size of the file.\n            if (file >= 5120) {\n                alert(\n                  \"File too Big, please select a file less than 5mb\");\n            } \n            else{\n              \n              formik.setFieldValue('photo',file1);\n              setprofile({...myprofile,file: URL.createObjectURL(file1)});\n            }\n        \n    \n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setopen1(false);\n  };\n\n  if(redirect==true)\n  {\n    return <Redirect to='/dashboard/complaints/shop' />\n  }\n  if(error===true)\n  {\n    return <div className={classes.erorclass}><Eror error={'Cannot issue your complaint.'} /></div>;\n  }\n\n  return (\n    <div className=\"formbgclass1\">\n      <Backdrop className={classes.backdrop} open={load}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    <div className={classes.myclass}>\n\n    \n\n\n    <Snackbar open={open1} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          {message}\n        </Alert>\n        </Snackbar>\n        \n        <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n          <Paper elevation={5} className={classes.papernewclass}>\n      <form onSubmit={formik.handleSubmit}>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n\n      \n     \n\n      <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput1.current.click();}}>\n        <img src={myprofile.file} className={classes.imageclass}/>\n        </Button>\n\n      <input type='file'  ref={hiddenFileInput1} style={{display:'none'}}  id='photo' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation1(event.target.files[0]);}}/> \n \n    </Grid>\n\n        <br />\n          <Grid item>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"subject\"\n          name=\"subject\"\n          label=\"subject\"\n          value={formik.values.subject}\n          onChange={formik.handleChange}\n          error={formik.touched.subject && Boolean(formik.errors.subject)}\n          helperText={formik.touched.subject && formik.errors.subject}\n        />\n        </Grid>\n        <Grid item>\n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         \n         fullWidth\n          rows={1}\n          id=\"message\"\n          name=\"message\"\n          label=\"message\"\n          value={formik.values.message}\n          onChange={formik.handleChange}\n          error={formik.touched.message && Boolean(formik.errors.message)}\n          helperText={formik.touched.message && formik.errors.message}\n        />\n        </Grid>\n       \n\n\n        <FormControl variant=\"outlined\" className={classes.form} >\n        <InputLabel id=\"demo-sroom_id\">Booking ID</InputLabel>\n        <Select\n          labelId=\"demo-sroom_id\"\n          id=\"room_id\"\n          value={formik.values.room_id}\n          onChange={(e) => {e.preventDefault();formik.setFieldValue('room_id', e.target.value)}}\n          label=\"Select Booking\"\n          error={formik.touched.room_id && Boolean(formik.errors.room_id)}\n          helperText={formik.touched.room_id && formik.errors.room_id}\n        >\n         \n\n          {\n              bookings.map((booking) => (\n                <MenuItem value={booking.booking_id}>{booking.booking_id}</MenuItem>\n              ))\n          }\n          \n        </Select>\n      </FormControl>\n\n      <Grid item> <br /></Grid>\n\n       \n        \n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n      </form>\n      </Paper>\n      </Grid>\n    </div>\n    </div>\n  );\n}\n\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(ProfileForm)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/complaintdetails_apartment.js",["1054","1055","1056","1057","1058","1059"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/complaint_form_apartment.js",["1060","1061","1062","1063","1064"],"import React,{useState,useEffect} from 'react';\n\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport Eror from '../components/eror'\nimport Paper from '@material-ui/core/Paper';\nimport '../components/css/App.css';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Add from '../addroom.png';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst validationSchema = yup.object({\n  \n\n    room_id: yup\n    .string('')\n    .required('Room selection is required'),\n\n    subject: yup\n    .string('')\n    .required('Subject is required'),\n\n    message: yup\n    .string('')\n    .required('Message is required'),\n   \n\n    \n});\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst useStyles = makeStyles(theme => ({\n  myclass: {\n    padding:'6%'\n   \n},\nbgclass: {\n  backgroundColor:`${process.env.REACT_APP_BG_COLOR}`,\n  height:'100vh'\n \n\n},\nmyclass1: {\n  padding:'30px'\n},\nimageclass: {\n  overflow: 'hidden',\n    width: '140px',\n    height: '140px',\n    position:'relative',\n  borderRadius:'30%',\n  [theme.breakpoints.up('sm')]: {\n    borderRadius:'30%',\n    overflow: 'hidden',\n    width: '170px',\n    height: '170px',\n    position:'relative',\n  },\n  [theme.breakpoints.up('md')]: {\n    borderRadius:'30%',\n    overflow: 'hidden',\n    width: '200px',\n    height: '200px',\n    position:'relative',\n  },\n  marginRight:'1%',\n  marginLeft:'1%',\n\n},\n    erorclass: {\n      width:'50%',\n      marginLeft:'25%',\n  },\n  buttonclass:{\n    padding:0,\n    borderRadius:'70%',\n    \n    },\n    papernewclass:{\n      padding:20,\n      [theme.breakpoints.up('sm')]: {\n        padding:30,\n      },\n     \n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n     \n    },\n\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n}));\n\nfunction ProfileForm (props){\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [myprofile,setprofile] = useState({\n     \n      file:Add\n    })\n\n   \n    const [redirect,setredirect] = useState(false)\n    const [error,seterror] = useState(false)\n    const hiddenFileInput1 = React.useRef(null);\n    const [open1,setopen1] = React.useState(false);\n    const [message,setmessage] = React.useState(false);\n    const [bookings,setbookings] = React.useState([]);\n\n    const [load,setload] = useState(false)\n   \n\n    useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n              if(props.isAuthenticated)\n              {\n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcensinejfcdajewcn29210/apartment/book/`,config);\n              \n                setbookings(res.data);\n                \n                \n              \n              }\n                catch{\n                 \n                }\n        }\n    }\n    \n    ,[props.isAuthenticated])\n\n  \n\n  const formik = useFormik({\n    enableReinitialize:true,\n    initialValues: {\n        roomid: '',\n      subject:'',\n      message:'',\n      photo:'',\n      \n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      setload(true);\n      let form_data = new FormData();\n      form_data.append('room_id',values.room_id)\n      form_data.append('subject',values.subject)\n     \n      form_data.append('message',values.message)\n      \n      form_data.append('photo',values.photo)\n      \n      const config = {\n        headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n\n      \n   \n    \n        await axios.post(`${process.env.REACT_APP_API_URL}/sourceadwh812y18hwdbzbx98121hgebayusbv9891/complaints/apartment/`,form_data,config)\n        .then((res) => {\n          setload(false);\n          setredirect(true)\n        })\n        .catch((err) => {\n          setload(false);\n          setmessage(`Error`)\n          setopen1(true)\n         \n        })\n              \n        \n\n              \n                \n      \n    },\n  });\n\n\n  const Filevalidation1 = (file1,name) => {\n  \n \n    // Check if any file is selected.\n    \n       \n  \n            const fsize =file1.size;\n            const file = Math.round((fsize / 1024));\n            // The size of the file.\n            if (file >= 5120) {\n                alert(\n                  \"File too Big, please select a file less than 5mb\");\n            } \n            else{\n              \n              formik.setFieldValue('photo',file1);\n              setprofile({...myprofile,file: URL.createObjectURL(file1)});\n            }\n        \n    \n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setopen1(false);\n  };\n\n  if(redirect==true)\n  {\n    return <Redirect to='/dashboard/complaints/housing' />\n  }\n  if(error===true)\n  {\n    return <div className={classes.erorclass}><Eror error={'Cannot issue your complaint.'} /></div>;\n  }\n\n  return (\n    <div className=\"formbgclass1\">\n      <Backdrop className={classes.backdrop} open={load}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    <div className={classes.myclass}>\n\n    \n\n\n    <Snackbar open={open1} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          {message}\n        </Alert>\n        </Snackbar>\n        \n        <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n          <Paper elevation={5} className={classes.papernewclass}>\n      <form onSubmit={formik.handleSubmit}>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n\n      \n     \n\n      <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput1.current.click();}}>\n        <img src={myprofile.file} className={classes.imageclass}/>\n        </Button>\n\n      <input type='file'  ref={hiddenFileInput1} style={{display:'none'}}  id='photo' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation1(event.target.files[0]);}}/> \n \n    </Grid>\n\n        <br />\n          <Grid item>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"subject\"\n          name=\"subject\"\n          label=\"subject\"\n          value={formik.values.subject}\n          onChange={formik.handleChange}\n          error={formik.touched.subject && Boolean(formik.errors.subject)}\n          helperText={formik.touched.subject && formik.errors.subject}\n        />\n        </Grid>\n        <Grid item>\n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         \n         fullWidth\n          rows={1}\n          id=\"message\"\n          name=\"message\"\n          label=\"message\"\n          value={formik.values.message}\n          onChange={formik.handleChange}\n          error={formik.touched.message && Boolean(formik.errors.message)}\n          helperText={formik.touched.message && formik.errors.message}\n        />\n        </Grid>\n       \n\n\n        <FormControl variant=\"outlined\" className={classes.form} >\n        <InputLabel id=\"demo-sroom_id\">Booking ID</InputLabel>\n        <Select\n          labelId=\"demo-sroom_id\"\n          id=\"room_id\"\n          value={formik.values.room_id}\n          onChange={(e) => {e.preventDefault();formik.setFieldValue('room_id', e.target.value)}}\n          label=\"Select Booking\"\n          error={formik.touched.room_id && Boolean(formik.errors.room_id)}\n          helperText={formik.touched.room_id && formik.errors.room_id}\n        >\n         \n\n          {\n              bookings.map((booking) => (\n                <MenuItem value={booking.booking_id}>{booking.booking_id}</MenuItem>\n              ))\n          }\n          \n        </Select>\n      </FormControl>\n\n      <Grid item> <br /></Grid>\n\n       \n        \n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n      </form>\n      </Paper>\n      </Grid>\n    </div>\n    </div>\n  );\n}\n\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(ProfileForm)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/terms.js",["1065","1066","1067","1068"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Sellerpolicies from './sellerpolicies';\nimport Customer from './customerpolicies';\nimport { connect } from 'react-redux'\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n   \n    paperclass:{\n        width:'90vw',\n        maxWidth:1300,\n        padding:20,\n\n    }\n    }));\n\nfunction Terms({profile,isAuthenticated}) {\nconst classes=useStyles();\n\n    if(profile){\n    return (\n        <div>\n        <br/>\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n        <Paper elevation={5} className={classes.paperclass}>\n            <br />\n        {\n          !profile.is_seller ? <Customer /> : <Sellerpolicies />\n        }\n         <br />\n        </Paper>\n       </Grid>\n            \n        </div>\n    )}\n    else{\n        return (\n            <div>\n        <br/>\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n        <Paper elevation={5} className={classes.paperclass}>\n            <br />\n            <Customer /> \n         <br />\n        </Paper>\n       </Grid>\n            \n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.authreducers.isAuthenticated,\n    profile : state.authreducers.user\n  });\n  \n  export default connect(mapStateToProps)(Terms);\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Aboutus.js",["1069","1070","1071"],"import React from 'react'\nimport '../components/css/App.css'\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { bounceInLeft } from 'react-animations';\nimport Radium, {StyleRoot} from 'radium';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Logo from '../logo.png';\nimport add1 from '../112.jpg';\nimport add2 from '../114.jpg';\nimport add3 from '../115.jpg';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n   myclass:{\n    backgroundImage: `url(${add1})`,\n    height:'1000px',\n    \n    backgroundSize:'cover',\n    transition: 'width 5s',\n    \n   },\n   myclass1:{\n    backgroundImage:`url(${add2})`,\n    height:'1000px',\n    \n    backgroundSize:'cover'\n   },\n   myclass2:{\n    backgroundImage:`url(${add3})`,\n    height:'1000px',\n    \n    backgroundSize:'cover'\n   },\n   imgclass:{\n    width:'30vw',\n    maxWidth:3000,\n    marginLeft:'20vw',\n   },\n   textclass:{\n    fontFamily:\"'Tangerine', serif\",\n       fontSize:'30px',\n       marginLeft:'30px',\n       color:'#42413e'\n   },\n   textclass1:{\n    fontFamily:\"'Farro', serif\",\n    fontSize:'30px',\n    \n    color:'#42413e',\n    marginRight:'10px',\n   \n},\nheadclass1:{\n    fontFamily:\"'Farro', serif\",\n    fontSize:'100px',\n    fontWeight:'bold',\n    \n    color:'#42413e',\n    marginRight:'40px',\n    marginTop:'100px',\n},\nheadclass2:{\n    fontFamily:\"'Farro', serif\",\n    fontSize:'100px',\n    fontWeight:'bold',\n    \n    color:'#42413e',\n    marginRight:'250px',\n    marginTop:'30px',\n},\nheadclass3:{\n    fontFamily:\"'Farro', serif\",\n    fontSize:'100px',\n    fontWeight:'bold',\n    \n    color:'#42413e',\n    marginRight:'40px',\n    \n},\ngridclass:{\n   \n},\n  }));\n\n\n  const styles1 = {\n    bounce: {\n      animation: 'x 3s',\n      animationName: Radium.keyframes(bounceInLeft, 'bounceInLeft')\n    }\n  }\n   \n\n  \n\nfunction Aboutus() {\n    const loadScript = () => {\n        const script = document.createElement(\"script\");\n        script.src = \"https://fonts.googleapis.com/css?family=Farro\";\n        document.body.appendChild(script);\n      };\n\n      const loadScript1 = () => {\n        const script = document.createElement(\"script\");\n        script.src = \"https://fonts.googleapis.com/css?family=Tangerine\";\n        document.body.appendChild(script);\n      };\n    const classes= useStyles();\n    loadScript();loadScript1();\n    return (\n        <div>\n            <div className={`${classes.myclass}`} style={styles1.bounce}><br/><br/><br/><br/><br/><img src={Logo} className={classes.imgclass}/>\n            <br />\n            <Typography className={classes.textclass} >\n\n            hello world\n            </Typography>\n            \n            </div>\n            <div className={`${classes.myclass1}`} style={styles1.bounce}>\n\n            <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n            <Grid item className={classes.gridclass1} >\n            <Typography className={classes.headclass1} >\n\nHow Rentene helps <br />property owners?\n<br />\n</Typography>\n\n</Grid></Grid>\n\n<Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n            <Grid item className={classes.gridclass1} >\n           \n<Typography className={classes.textclass1} >\n\nHow Rentene helps property owners?\n<br />\n</Typography>\n</Grid></Grid>\n            </div>\n            \n\n\n            <div className={`${classes.myclass2}`}>\n\n            <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"flex-end\"\n>\n            <Grid item className={classes.gridclass1} >\n            <Typography className={classes.headclass2} >\n\nRentene for \n</Typography>\n</Grid></Grid>\n\n<Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n            <Grid item className={classes.gridclass1} >\n            <Typography className={classes.headclass3} >\n\nStudents and Achievers\n<br /></Typography>\n</Grid></Grid>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Aboutus\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/hocs/Layout.js",["1072"],"import React, { useEffect } from 'react';\nimport NavBar from '../components/Navbar.js'\nimport { connect } from 'react-redux';\nimport { checkAuthenticated, load_user } from '../redux/auth/actions/auth_actions';\n\nconst Layout = (props) => {\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                await props.checkAuthenticated();\n                await props.load_user();\n            } catch (err) {\n\n            }\n        }\n\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <NavBar />\n            {props.children}\n        </div>\n    );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Profile.js",["1073"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookform.js",["1074","1075","1076"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './customerdetails';\nimport Review from './booksummary';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport Eror from './eror';\nimport {Redirect } from 'react-router-dom'\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Rentene\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginTop:'100px',\n\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop:'100px',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    \n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nconst steps = ['Customer details','Review your booking'];\n\n\nfunction getStepContent(step,bookdetails,setbookdetails,setpayment,profile) {\n  switch (step) {\n    case 0:\n      return <AddressForm bookdetails={bookdetails} profile={profile} setbookdetails={setbookdetails} setpayment={setpayment}/>;\n    case 1:\n      return <Review bookdetails={bookdetails} setbookdetails={setbookdetails}/>;\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nfunction Checkout(props) {\n  const [open,setopen] = React.useState(false)\n\n  const [validationerror,setvalidationerror] = React.useState(false)\n\n    const [bookdetails,setbookdetails] = React.useState({\n        price:'',\n        date:'',\n        month:'',\n        year:'',\n        duration:1,\n\n        wifi:'',\n        house_TV:'',\n        room_TV:'',\n        house_refridgerator:'',\n        room_refridgerator:'',\n        purified_water:'',\n        geyser:'',\n        AC:'',\n        cooler:'',\n        breakfast:'',\n        lunch:'',\n        dinner:'',\n        \n        coupon:'',\n        discount:'',\n        month_price:'',\n        savings:'',\n        monthsavings:'',\n        roomid:'',\n        title:'',\n        address:'',\n        currency:'',\n\n        firstname:'',\n        lastname:'',\n        mobile:'',\n        country_code:'',\n        alternate_mobile:null,\n      \n        paylater:false,\n\n        capacity:'',\n    })\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [myprofile,setmyprofile] = React.useState()\n\n \n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const value = props.location.state.property_id;\n\n  const loadScript = () => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n    document.body.appendChild(script);\n  };\n\n  const [payment,setpayment] = React.useState('Pay now');\n\n  React.useEffect(\n      async () => {\n\n        const config = {\n            headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\n            },\n          };\n          if(props.profile)\n          {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcezxradakgdlh/profile/${props.profile.id}/`,config);\n           setmyprofile(res.data)\n            var temp = value.coupon\n            if(value.coupon==='')\n            {\n              temp = 'none';     \n            }\n            var t=value.price;\n            var t1=((t*3.0)/100.0);\n            t1=Math.round(t1);\n            \n            t=t+t1;\n\n            setbookdetails(\n                {\n                  ...bookdetails,\n                    price:t,\n                    date:value.date,\n                    month:value.month,\n                    year:value.year,\n                    duration:value.duration,\n                    wifi:value.wifi,\n                    house_TV:value.house_TV,\n                    room_TV:value.room_TV,\n                    house_refridgerator:value.house_refridgerator,\n                    room_refridgerator:value.room_refridgerator,\n                    purified_water:value.purified_water,\n                    geyser:value.geyser,\n                    AC:value.AC,\n                    cooler:value.cooler,\n                    breakfast:value.breakfast,\n                    lunch:value.lunch,\n                    dinner:value.dinner,\n                    coupon:temp,\n                    discount:value.discount,\n                    month_price:value.month_price,\n                    savings:value.savings,\n                    monthsavings:value.monthsavings,\n                    currency:value.currency,\n\n                    roomid:value.roomid,\n                    title:value.title,\n                    address:value.address,\n\n                    firstname:props.profile.first_name,\n                    lastname:props.profile.last_name,\n                    mobile:res.data.mobile,\n                    country_code:res.data.country_code,\n                    alternate_mobile:res.data.alternate_mobile,\n\n                    capacity:value.capacity,\n\n                    \n                }\n            )\n        \n          }\n          \n      }\n      \n  ,[props.location.state.property_id,props.profile])\n\n\n  const handlePaymentSuccess = async (response) => {\n    try {\n    \n      let bodyData = new FormData();\n\n      // we will send the response we've got from razorpay to the backend to validate the payment\n      bodyData.append(\"response\", JSON.stringify(response));\n\n      await axios({\n        url: `${process.env.REACT_APP_API_URL}/sourcehdnaj2iu0qejwba9022qjadnba/room/book/payment/1/`,\n        method: \"PUT\",\n        data: bodyData,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      })\n        .then((res) => {\n          setopen(false)\n            setActiveStep(activeStep + 1);\n            setvalidationerror(false);\n          \n        })\n        .catch((err) => {\n          setopen(true)\n        \n        });\n    } catch (error) {\n    \n    }\n  };\n\n\n  const handleNext = async () => {\n    if(bookdetails.firstname==='' || bookdetails.lastname==='' || bookdetails.mobile.length <10 || bookdetails.country_code==='')\n    {\n     \n       setvalidationerror(true);\n    }\n    else{\n\n      if(activeStep===steps.length-1)\n      {\n        const res = await loadScript();\n       \n\n        var data = '';\n\n\n        const bookfunc = async () => {\n\n          const config = {\n              headers: {\n                      'Content-Type': 'application/json',\n                      'Authorization': `JWT ${localStorage.getItem('access')}`,\n              },\n            };\n          const body = {\n            data:bookdetails,\n          }\n          setopen(true);\n          try{const res = await axios.post(`${process.env.REACT_APP_API_URL}/sourcehjbda983290whjba/room/book/`,body,config);\n          \n          data = res;\n          \n          \n          \n          \n\n          var options = {\n            key_id: process.env.REACT_APP_RAZORPAY_API_KEY, // in react your environment variable must start with REACT_APP_\n            key_secret: process.env.REACT_APP_RAZORPAY_KEY_SECRET,\n            amount: data.data.price_to_be_paid,\n            currency: bookdetails.currency.slice(2,),\n            name: \"Rentene\",\n            description: \"Booking payment\",\n            image: \"/logo.png\", // add image url\n            order_id: data.data.payment_id,\n            handler: function (response) {\n              // we will handle success by calling handlePaymentSuccess method and\n              // will pass the response that we've got from razorpay\n              handlePaymentSuccess(response);\n            },\n            prefill: {\n              name: props.profile.first_name + \" \" + props.profile.last_name,\n              email:props.profile.email ,\n              contact: myprofile.mobile,\n            },\n            notes: {\n              address: \"Razorpay Corporate Office\",\n            },\n            theme: {\n              color: \"#528FF0\",\n            },\n          };\n         \n      \n          var rzp1 = new window.Razorpay(options);\n          rzp1.open();\n\n          }\n          catch{\n            setopen(false)\n            setActiveStep(5);\n            \n          }\n          \n          }\n\n          bookfunc();\n      }\n      else{\n      \n        setActiveStep(activeStep + 1);\n        setvalidationerror(false);\n      }\n      \n    }\n    \n  };\n\n\n\n  if(activeStep===5)\n  {\n    return (<div>\n    <CssBaseline /><main className={classes.layout}>\n<Eror error={\"Couldn't place your booking.\"}/></main></div>);\n  }\n\n  if(props.isAuthenticated===false)\n  {\n    return <Redirect to='/login'/>;\n  }\n  if(props.profile)\n  {\n    if(props.profile.is_seller===true)\n    {\n      return <Redirect to={{\n        pathname: '/',\n        state: { property_id: true }\n      }}/>;\n    }\n    if(props.profile.profile_completed===false)\n    {\n      return <Redirect to={{\n        pathname: '/dashboard/profile',\n        state: { property_id: true }\n      }}/>;\n    }\n\n  }\n\n\n  if(props.profile){\n  return (\n    <React.Fragment>\n      <CssBaseline />\n\n      <main className={classes.layout}>\n\n\n        {\n          validationerror ? <Alert severity=\"error\">All required fields need to be filled!</Alert> : null\n        }\n\n      <Backdrop className={classes.backdrop} open={open}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n        <Paper className={classes.paper} elevation={5}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Booking Form\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your booking.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your booking has been successfully placed. We have emailed your booking confirmation.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep,bookdetails,setbookdetails,setpayment,props.profile)}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? `${payment}` : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    profile: state.authreducers.user,\n    isAuthenticated: state.authreducers.isAuthenticated,\n  });\n\nexport default connect(mapStateToProps)(Checkout);","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookform_shop.js",["1077","1078","1079","1080"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './customerdetails';\nimport Review from './booksummary_shop';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport Eror from './eror';\nimport {Redirect } from 'react-router-dom'\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Rentene\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginTop:'100px',\n\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop:'100px',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    \n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nconst steps = ['Customer details','Review your booking'];\n\n\nfunction getStepContent(step,bookdetails,setbookdetails,setpayment,profile) {\n  switch (step) {\n    case 0:\n      return <AddressForm bookdetails={bookdetails} setbookdetails={setbookdetails} setpayment={setpayment} profile={profile}/>;\n    case 1:\n      return <Review bookdetails={bookdetails} setbookdetails={setbookdetails}/>;\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nfunction Checkout(props) {\n  const [open,setopen] = React.useState(false)\n\n  const [validationerror,setvalidationerror] = React.useState(false)\n\n    const [bookdetails,setbookdetails] = React.useState({\n        price:'',\n        date:'',\n        month:'',\n        year:'',\n        duration:1,\n\n        wifi:'',\n        TV:'',\n     \n        purified_water:'',\n      \n        AC:'',\n        cooler:'',\n     \n        \n        coupon:'',\n        discount:'',\n        month_price:'',\n        savings:'',\n        monthsavings:'',\n        shopid:'',\n        title:'',\n        address:'',\n        currency:'',\n\n        firstname:'',\n        lastname:'',\n        mobile:'',\n        country_code:'',\n        alternate_mobile:'',\n      \n        paylater:false,\n\n    })\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [myprofile,setmyprofile] = React.useState()\n\n \n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const value = props.location.state.property_id;\n\n  const [payment,setpayment] = React.useState('Pay now');\n\n  React.useEffect(\n      async () => {\n\n        const config = {\n            headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\n            },\n          };\n          if(props.profile)\n          {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcezxradakgdlh/profile/${props.profile.id}/`,config);\n            setmyprofile(res.data)\n            var temp = value.coupon\n            if(value.coupon==='')\n            {\n              temp = 'none';     \n            }\n\n            var t=value.price;\n            var t1=((t*3)/100);\n            var t1=((t*3.0)/100.0);\n           \n            t1=Math.round(t1);\n           \n            t=t+t1;\n            setbookdetails(\n                {\n                  ...bookdetails,\n                    price:t,\n                    date:value.date,\n                    month:value.month,\n                    year:value.year,\n                    duration:value.duration,\n                    wifi:value.wifi,\n                    TV:value.TV,\n                   \n                    purified_water:value.purified_water,\n                   \n                    AC:value.AC,\n                    cooler:value.cooler,\n                  \n                    coupon:temp,\n                    discount:value.discount,\n                    month_price:value.month_price,\n                    savings:value.savings,\n                    monthsavings:value.monthsavings,\n                    currency:value.currency,\n\n                    shopid:value.shopid,\n                    title:value.title,\n                    address:value.address,\n\n                    firstname:props.profile.first_name,\n                    lastname:props.profile.last_name,\n                    mobile:res.data.mobile,\n                    country_code:res.data.country_code,\n                    alternate_mobile:res.data.alternate_mobile,\n\n                 \n\n                    \n                }\n            )\n        \n          }\n          \n      }\n      \n  ,[props.location.state.property_id,props.profile])\n\n\n  const loadScript = () => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n    document.body.appendChild(script);\n  };\n\n  const handlePaymentSuccess = async (response) => {\n    try {\n     \n      let bodyData = new FormData();\n\n      // we will send the response we've got from razorpay to the backend to validate the payment\n      bodyData.append(\"response\", JSON.stringify(response));\n\n      await axios({\n        url: `${process.env.REACT_APP_API_URL}/sourcwjndqndoni3290902uruwhi2/shop/book/payment/1/`,\n        method: \"PUT\",\n        data: bodyData,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      })\n        .then((res) => {\n          setopen(false)\n            setActiveStep(activeStep + 1);\n            setvalidationerror(false);\n          \n        })\n        .catch((err) => {\n          setopen(true)\n        \n        });\n    } catch (error) {\n    \n    }\n  };\n\n  const handleNext = async () => {\n    if(bookdetails.firstname==='' || bookdetails.lastname==='' || bookdetails.mobile.length <10 || bookdetails.country_code==='')\n    {\n     \n       setvalidationerror(true);\n    }\n    else{\n\n      if(activeStep===steps.length-1)\n      {\n      \n\n        const res = await loadScript();\n\n        var data = '';\n\n\n        const bookfunc = async () => {\n\n          const config = {\n              headers: {\n                      'Content-Type': 'application/json',\n                      'Authorization': `JWT ${localStorage.getItem('access')}`,\n              },\n            };\n          const body = {\n            data:bookdetails,\n          }\n          setopen(true);\n          try{const res = await axios.post(`${process.env.REACT_APP_API_URL}/sourcehdawnajk289uadhq/shop/book/`,body,config);\n          data = res;\n\n\n          var options = {\n            key_id: process.env.REACT_APP_RAZORPAY_API_KEY, // in react your environment variable must start with REACT_APP_\n            key_secret: process.env.REACT_APP_RAZORPAY_KEY_SECRET,\n            amount: data.data.price_to_be_paid,\n            currency: bookdetails.currency.slice(2,),\n            name: \"Rentene\",\n            description: \"Booking payment\",\n            image: \"/logo.png\", // add image url\n            order_id: data.data.payment_id,\n            handler: function (response) {\n              // we will handle success by calling handlePaymentSuccess method and\n              // will pass the response that we've got from razorpay\n              handlePaymentSuccess(response);\n            },\n            prefill: {\n              name: props.profile.first_name + \" \" + props.profile.last_name,\n              email:props.profile.email ,\n              contact: myprofile.mobile,\n            },\n            notes: {\n              address: \"Razorpay Corporate Office\",\n            },\n            theme: {\n              color: \"#528FF0\",\n            },\n          };\n         \n      \n          var rzp1 = new window.Razorpay(options);\n          rzp1.open();\n         \n        }\n          catch{\n            setopen(false)\n            setActiveStep(5);\n          }\n          \n          }\n\n          bookfunc();\n      }\n      else{\n       \n        setActiveStep(activeStep + 1);\n        setvalidationerror(false);\n      }\n      \n    }\n    \n  };\n\n\n\n  if(activeStep===5)\n  {\n    return (<div>\n    <CssBaseline /><main className={classes.layout}>\n<Eror error={\"Couldn't place your booking.\"}/></main></div>);\n  }\n\n  if(props.isAuthenticated===false)\n  {\n    return <Redirect to='/login'/>;\n  }\n  if(props.profile)\n  {\n    if(props.profile.is_seller===true)\n    {\n      return <Redirect to={{\n        pathname: '/',\n        state: { property_id: true }\n      }}/>;\n    }\n    if(props.profile.profile_completed===false)\n    {\n      return <Redirect to={{\n        pathname: '/dashboard/profile',\n        state: { property_id: true }\n      }}/>;\n    }\n\n  }\n\n\n  if(props.profile){\n  return (\n    <React.Fragment>\n      <CssBaseline />\n\n      <main className={classes.layout}>\n\n\n        {\n          validationerror ? <Alert severity=\"error\">All required fields need to be filled!</Alert> : null\n        }\n\n      <Backdrop className={classes.backdrop} open={open}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n        <Paper className={classes.paper} elevation={5}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Booking Form\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your booking.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your booking has been successfully placed. We have emailed your booking confirmation.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep,bookdetails,setbookdetails,setpayment,props.profile)}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? `${payment}` : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    profile: state.authreducers.user,\n    isAuthenticated: state.authreducers.isAuthenticated,\n  });\n\nexport default connect(mapStateToProps)(Checkout);","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookform_apartment.js",["1081","1082","1083","1084"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './customerdetails';\nimport Review from './booksummary_apartment';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport Eror from './eror';\nimport {Redirect } from 'react-router-dom'\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Rentene\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginTop:'100px',\n\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop:'100px',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    \n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nconst steps = ['Customer details','Review your booking'];\n\n\nfunction getStepContent(step,bookdetails,setbookdetails,setpayment,profile) {\n  switch (step) {\n    case 0:\n      return <AddressForm bookdetails={bookdetails} setbookdetails={setbookdetails} setpayment={setpayment} profile={profile}/>;\n    case 1:\n      return <Review bookdetails={bookdetails} setbookdetails={setbookdetails}/>;\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nfunction Checkout(props) {\n  const [open,setopen] = React.useState(false)\n\n  const [validationerror,setvalidationerror] = React.useState(false)\n\n    const [bookdetails,setbookdetails] = React.useState({\n        price:'',\n        date:'',\n        month:'',\n        year:'',\n        duration:1,\n        wifi:'',\n        TV:'',\n       \n        house_refridgerator:'',\n        \n        purified_water:'',\n        geyser:'',\n        AC:'',\n        cooler:'',\n       \n        coupon:'',\n        discount:'',\n        month_price:'',\n        savings:'',\n        monthsavings:'',\n        apartmentid:'',\n        title:'',\n        address:'',\n        currency:'',\n    \n        laundry:'',\n\n        firstname:'',\n        lastname:'',\n        mobile:'',\n        country_code:'',\n        alternate_mobile:'',\n      \n        paylater:false,\n\n    })\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [myprofile,setmyprofile] = React.useState()\n\n \n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const value = props.location.state.property_id;\n\n  const [payment,setpayment] = React.useState('Pay now');\n\n  React.useEffect(\n      async () => {\n\n        const config = {\n            headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\n            },\n          };\n          if(props.profile)\n          {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcezxradakgdlh/profile/${props.profile.id}/`,config);\n           setmyprofile(res.data)\n            var temp = value.coupon\n            if(value.coupon==='')\n            {\n              temp = 'none';     \n            }\n            var t=value.price;\n            var t1=((t*3)/100);\n            var t1=((t*3.0)/100.0);\n            t1=Math.round(t1);\n           \n            t=t+t1;\n\n            setbookdetails(\n                {\n                  ...bookdetails,\n                    price:t,\n                    date:value.date,\n                    month:value.month,\n                    year:value.year,\n                    duration:value.duration,\n                    wifi:value.wifi,\n                    TV:value.TV,\n                    house_refridgerator:value.house_refridgerator,\n                    laundry:value.laundry,\n                    geyser:value.geyser,\n                   \n                    purified_water:value.purified_water,\n                   \n                    AC:value.AC,\n                    cooler:value.cooler,\n                  \n                    coupon:temp,\n                    discount:value.discount,\n                    month_price:value.month_price,\n                    savings:value.savings,\n                    monthsavings:value.monthsavings,\n                    currency:value.currency,\n\n                    apartmentid:value.apartmentid,\n                    title:value.title,\n                    address:value.address,\n\n                    firstname:props.profile.first_name,\n                    lastname:props.profile.last_name,\n                    mobile:res.data.mobile,\n                    country_code:res.data.country_code,\n                    alternate_mobile:res.data.alternate_mobile,\n\n                 \n\n                    \n                }\n            )\n        \n          }\n          \n      }\n      \n  ,[props.location.state.property_id,props.profile])\n\n  const loadScript = () => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n    document.body.appendChild(script);\n  };\n\n  const handlePaymentSuccess = async (response) => {\n    try {\n     \n      let bodyData = new FormData();\n\n      // we will send the response we've got from razorpay to the backend to validate the payment\n      bodyData.append(\"response\", JSON.stringify(response));\n\n      await axios({\n        url: `${process.env.REACT_APP_API_URL}/sourcefueiu320has82bzadh12naaaa2/apartment/book/payment/1/`,\n        method: \"PUT\",\n        data: bodyData,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      })\n        .then((res) => {\n          setopen(false)\n            setActiveStep(activeStep + 1);\n            setvalidationerror(false);\n          \n        })\n        .catch((err) => {\n          setopen(true)\n         \n        });\n    } catch (error) {\n     \n    }\n  };\n\n\n  const handleNext = async () => {\n    if(bookdetails.firstname==='' || bookdetails.lastname==='' || bookdetails.mobile.length <10 || bookdetails.country_code==='')\n    {\n     \n       setvalidationerror(true);\n    }\n    else{\n\n      if(activeStep===steps.length-1)\n      {\n       \n\n        const res = await loadScript();\n\n        var data = '';\n\n\n        const bookfunc = async () => {\n\n          const config = {\n              headers: {\n                      'Content-Type': 'application/json',\n                      'Authorization': `JWT ${localStorage.getItem('access')}`,\n              },\n            };\n          const body = {\n            data:bookdetails,\n          }\n          setopen(true);\n          try{const res = await axios.post(`${process.env.REACT_APP_API_URL}/sourcensinejfcdajewcn29210/apartment/book/`,body,config);\n        \n          data = res;\n\n\n          var options = {\n            key_id: process.env.REACT_APP_RAZORPAY_API_KEY, // in react your environment variable must start with REACT_APP_\n            key_secret: process.env.REACT_APP_RAZORPAY_KEY_SECRET,\n            amount: data.data.price_to_be_paid,\n            currency: bookdetails.currency.slice(2,),\n            name: \"Rentene\",\n            description: \"Booking payment\",\n            image: \"/logo.png\", // add image url\n            order_id: data.data.payment_id,\n            handler: function (response) {\n              // we will handle success by calling handlePaymentSuccess method and\n              // will pass the response that we've got from razorpay\n              handlePaymentSuccess(response);\n            },\n            prefill: {\n              name: props.profile.first_name + \" \" + props.profile.last_name,\n              email:props.profile.email ,\n              contact: myprofile.mobile,\n            },\n            notes: {\n              address: \"Razorpay Corporate Office\",\n            },\n            theme: {\n              color: \"#528FF0\",\n            },\n          };\n         \n      \n          var rzp1 = new window.Razorpay(options);\n          rzp1.open();\n        \n        }\n          catch{\n            setopen(false)\n            setActiveStep(5);\n          }\n          \n          }\n\n          bookfunc();\n      }\n      else{\n      \n        setActiveStep(activeStep + 1);\n        setvalidationerror(false);\n      }\n      \n    }\n    \n  };\n\n\n\n  if(activeStep===5)\n  {\n    return (<div>\n    <CssBaseline /><main className={classes.layout}>\n<Eror error={\"Couldn't place your booking.\"}/></main></div>);\n  }\n\n  if(props.isAuthenticated===false)\n  {\n    return <Redirect to='/login'/>;\n  }\n  if(props.profile)\n  {\n    if(props.profile.is_seller===true)\n    {\n      return <Redirect to={{\n        pathname: '/',\n        state: { property_id: true }\n      }}/>;\n    }\n    if(props.profile.profile_completed===false)\n    {\n      return <Redirect to={{\n        pathname: '/dashboard/profile',\n        state: { property_id: true }\n      }}/>;\n    }\n\n  }\n\n\nif(props.profile){\n  return (\n    <React.Fragment>\n      <CssBaseline />\n\n      <main className={classes.layout}>\n\n\n        {\n          validationerror ? <Alert severity=\"error\">All required fields need to be filled!</Alert> : null\n        }\n\n      <Backdrop className={classes.backdrop} open={open}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n        <Paper className={classes.paper} elevation={5}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Booking Form\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your booking.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your booking has been successfully placed. We have emailed your booking confirmation.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep,bookdetails,setbookdetails,setpayment,props.profile)}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? `${payment}` : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    profile: state.authreducers.user,\n    isAuthenticated: state.authreducers.isAuthenticated,\n  });\n\nexport default connect(mapStateToProps)(Checkout);","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Checkout.js",["1085","1086","1087"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport SellerDetails from './SellerDetails';\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst steps = ['Seller Details', 'Payment Details', 'Address Details'];\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <SellerDetails />;\n    case 1:\n      return <PaymentForm />;\n    case 2:\n      return <AddressForm />;\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Checkout() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n        {/* <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Company name\n          </Typography>\n        </Toolbar> */}\n      </AppBar>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Checkout\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n            <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your Details.\n                </Typography>\n                \n              </React.Fragment>\n            ) : (\n               <React.Fragment>\n                {getStepContent(activeStep)}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                    type=\"submit\"\n                  >\n                    {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n        {/* <Copyright /> */}\n      </main>\n    </React.Fragment>\n  );\n}","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/dashboard.js",["1088"],"import React from 'react'\nimport Dashboarddrawer from '../hocs/layout2'\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n}));\n\n\n\n\nfunction Dashboard() {\n\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div>\n        <Dashboarddrawer/>\n\n        <main className={classes.content}>\n        <div className={classes.toolbar} />\n\n        <h3>Analytics</h3>\n\n        \n\n        </main>\n\n            \n        </div>\n    )\n}\n\nexport default Dashboard\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/cancellation.js",["1089","1090","1091","1092","1093"],"import React,{ useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dashboarddrawer from '../hocs/layout2'\nimport axios from 'axios'\nimport Eror from '../components/eror'\nimport Grid from '@material-ui/core/Grid';\n\n\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  textclass:{\n    float: 'left',\n  },\n  table: {\n    width:'30%'\n  },\n  head: {\n    fontSize:'20px'\n  },\n  row: {\n    fontSize:'20px'\n  },\n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    \n  },\n}));\n  \n\nfunction Bookingcancel(props) {\n    const bookingid = props.match.params.bookingid;\n    const [error,seterror] = useState(false);\n    const [redirect,setredirect] = useState(false);\n\n    const [mybooking,setmybooking]= useState()\n    const [cancelled,setcancelled]= useState(false)\n\n    const [canceldetails,setdetails] = useState({\n        reason:'No use to me',\n        feedback:'',\n        account_no:'',\n        IFSC_code:'',\n        bank_name:'',\n        bank_address:'',\n        account_type:'Savings',\n    })\n\n    React.useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcehjbda983290whjba/room/book/${bookingid}/`,config);\n            \n             setmybooking(res.data)\n              \n              }\n                catch{\n                  seterror(true);\n                }\n        }\n    \n    ,[])\n\n\n    const classes = useStyles();\n\n    const handleclick1 = async (e) => {\n      e.preventDefault();\n\n      const config = {\n        headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n      const body = {\n        data:canceldetails,\n      }\n      setcancelled(true);\n      \n        try{const res = await axios.delete(`${process.env.REACT_APP_API_URL}/sourcehjbda983290whjba/room/book/${bookingid}/`,config);\n        \n\n        try{const res = await axios.patch(`${process.env.REACT_APP_API_URL}/sourcehjbda983290whjba/room/book/${bookingid}/`,body,config);\n\n        setcancelled(false);\n        setredirect(true)\n      \n      }\n        catch{\n          setcancelled(false);\n          setredirect(true)\n        }\n\n        setcancelled(false);\n      \n      }\n        catch{\n          setcancelled(false);\n          seterror(true);\n        }\n        \n\n    }\n    const handleChange = (event) => {\n        setdetails({...canceldetails,reason:event.target.value});\n      };\n\n      const handleChange1 = (event) => {\n        setdetails({...canceldetails,account_type:event.target.value});\n      };\n\n      const handleme = e => {\n        setdetails({ ...canceldetails, [e.target.name]: e.target.value });\n      }\n\n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error' /></div>\n    }\n    if(redirect===true)\n    {\n        return <Redirect to='/dashboard/recentbookings'/>;\n    }\n\n    if(mybooking && props.profile){\n    \n    \n    return (\n        <div>\n          {\n            cancelled ? <Backdrop className={classes.backdrop} open={cancelled}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop> : null\n          }\n            <Dashboarddrawer/>\n            <main className={classes.content}>\n            <div className={classes.toolbar} />\n\n            <div>\n\n            <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n           >\n\n\n            \n              <h3>Do you want to cancel booking no .</h3>\n            \n            \n              <h4>{mybooking.booking_id}?</h4>\n            \n\n            \n\n            \n            \n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"cancellation-reason\">Cancellation reason</InputLabel>\n                <Select\n                labelId=\"cancellation-reason\"\n                id=\"cancellation-reason-select\"\n                value={canceldetails.reason}\n                onChange={handleChange}\n                >\n                <MenuItem value={'No use to me'}>No use to me</MenuItem>\n                <MenuItem value={'Booked somewhere else'}>Booked somewhere else</MenuItem>\n                </Select>\n                <FormHelperText>Select your cancellation reason</FormHelperText>\n            </FormControl>\n           \n            <br />\n            \n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"account_type\">Account type</InputLabel>\n                <Select\n                labelId=\"account_type\"\n                id=\"account_type\"\n                value={canceldetails.account_type}\n                onChange={handleChange1}\n                >\n                <MenuItem value={'Savings'}>Savings</MenuItem>\n                <MenuItem value={'Current'}>Current</MenuItem>\n                </Select>\n                <FormHelperText>Select your cancellation reason</FormHelperText>\n            </FormControl>\n            \n            <br />\n            \n            <TextField\n            id=\"account_no\"\n            label=\"account_no\"\n            name=\"account_no\"\n            multiline\n            rows={1}\n            value = {canceldetails.account_no}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n        <br />\n        <TextField\n            id=\"IFSC_code\"\n            label=\"IFSC_code\"\n            name=\"IFSC_code\"\n            multiline\n            rows={1}\n            value = {canceldetails.IFSC_code}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n        <br />\n        <TextField\n            id=\"bank_name\"\n            label=\"bank_name\"\n            name=\"bank_name\"\n            multiline\n            rows={1}\n            value = {canceldetails.bank_name}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n        <br />\n        <TextField\n            id=\"bank_address\"\n            label=\"bank_address\"\n            name=\"bank_address\"\n            multiline\n            rows={3}\n            value = {canceldetails.bank_address}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n        <br />\n            <TextField\n            id=\"feedback\"\n            label=\"Feedback\"\n            name=\"feedback\"\n            multiline\n            rows={4}\n            value = {canceldetails.feedback}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n\n           \n            <br />\n\n\n\n            {\n                mybooking.ended || mybooking.extended || props.profile.is_seller===true || mybooking.cancelled ? null : <Button variant=\"contained\" color=\"secondary\" onClick={(e) => {handleclick1(e);}}>\n                Cancel booking\n              </Button>\n            }\n\n            \n\n            \n\n              \n\n\n            </Grid>\n            </div>\n            </main>\n        </div>\n    )\n    }\n    else{\n      return <></>;\n    }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(Bookingcancel);\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/recentbookings.js",["1094","1095"],"import React,{useState} from 'react'\nimport Dashboarddrawer from '../hocs/layout2'\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport CustomizedTables from './RecentBookingTable'\nimport CustomizedTables1 from './RecentBookingsTable_shop'\nimport CustomizedTables2 from './RecentBookingsTable_apartment'\nimport {connect} from 'react-redux'\nimport axios from 'axios'\nimport {Redirect} from 'react-router-dom';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n}));\n\n\n\n\n\n\n\nfunction RecentBooking1(props) {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [bookings,setbookings]  = useState([])\n    const [shopbookings,setshopbookings] = useState([])\n    const [apartmentbookings,setapartmentbookings] = useState([])\n\n    React.useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n\n              \n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcehjbda983290whjba/room/book/`,config,config);\n          \n             setbookings(res.data)\n              \n              }\n                catch{\n      \n                }\n\n                try{const res1 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcehdawnajk289uadhq/shop/book/`,config,config);\n              \n                setshopbookings(res1.data)\n                 \n                 }\n                   catch{\n         \n                   }\n\n                   try{const res2 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcensinejfcdajewcn29210/apartment/book/`,config,config);\n                 \n                   setapartmentbookings(res2.data)\n                    \n                    }\n                      catch{\n            \n                      }\n        }\n    \n    ,[])\n\n    if(props.isAuthenticated===false)\n    {\n      return <Redirect to=\"/login\" />;\n    }\n\n    return (\n        <div>\n        <Dashboarddrawer/>\n\n        <main className={classes.content}>\n        <div className={classes.toolbar} />\n\n        <Typography variant='h5'>Recent bookings</Typography>\n        <br />\n        <CustomizedTables bookings={bookings} title={'Rooms'} setbookings={setbookings}/>\n\n        <br />\n\n        <CustomizedTables1 bookings={shopbookings} title={'Shops'} setbookings={setshopbookings}/>\n\n        <br />\n\n        <CustomizedTables2 bookings={apartmentbookings} title={'Apartments'} setbookings={setapartmentbookings}/>\n\n        \n\n        </main>\n\n            \n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.authreducers.isAuthenticated,\n    profile : state.authreducers.user\n  });\n  \nexport default connect(mapStateToProps)(RecentBooking1);\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/cancelbooking_shop.js",["1096","1097","1098","1099","1100"],"import React,{ useState} from 'react'\nimport {  makeStyles } from '@material-ui/core/styles';\nimport Dashboarddrawer from '../hocs/layout2'\nimport axios from 'axios'\nimport Eror from '../components/eror'\nimport Grid from '@material-ui/core/Grid';\n\n\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  textclass:{\n    float: 'left',\n  },\n  table: {\n    width:'30%'\n  },\n  head: {\n    fontSize:'20px'\n  },\n  row: {\n    fontSize:'20px'\n  },\n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    \n  },\n}));\n  \n\nfunction Bookingcancel(props) {\n    const bookingid = props.match.params.bookingid;\n    const [error,seterror] = useState(false);\n    const [redirect,setredirect] = useState(false);\n\n    const [mybooking,setmybooking]= useState()\n    const [cancelled,setcancelled]= useState(false)\n\n    const [canceldetails,setdetails] = useState({\n        reason:'No use to me',\n        feedback:'',\n        account_no:'',\n        IFSC_code:'',\n        bank_name:'',\n        bank_address:'',\n        account_type:'Savings',\n    })\n\n    React.useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcehdawnajk289uadhq/shop/book/${bookingid}/`,config);\n            \n             setmybooking(res.data)\n              \n              }\n                catch{\n                  seterror(true);\n                }\n        }\n    \n    ,[])\n\n\n    const classes = useStyles();\n\n    const handleclick1 = async (e) => {\n      e.preventDefault();\n\n      const config = {\n        headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n      const body = {\n        data:canceldetails,\n      }\n      setcancelled(true);\n      \n        try{const res = await axios.delete(`${process.env.REACT_APP_API_URL}/sourcehdawnajk289uadhq/shop/book/${bookingid}/`,config);\n        \n\n        try{const res = await axios.patch(`${process.env.REACT_APP_API_URL}/sourcehdawnajk289uadhq/shop/book/${bookingid}/`,body,config);\n\n        setcancelled(false);\n        setredirect(true)\n      \n      }\n        catch{\n          setcancelled(false);\n          setredirect(true)\n        }\n\n        setcancelled(false);\n      \n      }\n        catch{\n          setcancelled(false);\n          seterror(true);\n        }\n        \n\n    }\n    const handleChange = (event) => {\n        setdetails({...canceldetails,reason:event.target.value});\n      };\n\n      const handleme = e => {\n        setdetails({ ...canceldetails, [e.target.name]: e.target.value });\n      }\n      \n      const handleChange1 = (event) => {\n        setdetails({...canceldetails,account_type:event.target.value});\n      };\n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error' /></div>\n    }\n    if(redirect===true)\n    {\n        return <Redirect to='/dashboard/recentbookings'/>;\n    }\n\n    if(mybooking && props.profile){\n    \n    \n    return (\n        <div>\n          {\n            cancelled ? <Backdrop className={classes.backdrop} open={cancelled}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop> : null\n          }\n            <Dashboarddrawer/>\n            <main className={classes.content}>\n            <div className={classes.toolbar} />\n\n            <div>\n\n            <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n           >\n\n\n            \n              <h3>Do you want to cancel booking no .</h3>\n            \n              <h4>{mybooking.booking_id}?</h4>\n           \n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"cancellation-reason\">Cancellation reason</InputLabel>\n                <Select\n                labelId=\"cancellation-reason\"\n                id=\"cancellation-reason-select\"\n                value={canceldetails.reason}\n                onChange={handleChange}\n                >\n                <MenuItem value={'No use to me'}>No use to me</MenuItem>\n                <MenuItem value={'Booked somewhere else'}>Booked somewhere else</MenuItem>\n                </Select>\n                <FormHelperText>Select your cancellation reason</FormHelperText>\n            </FormControl>\n            \n            <br />\n           \n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"account_type\">Account type</InputLabel>\n                <Select\n                labelId=\"account_type\"\n                id=\"account_type\"\n                value={canceldetails.account_type}\n                onChange={handleChange1}\n                >\n                <MenuItem value={'Savings'}>Savings</MenuItem>\n                <MenuItem value={'Current'}>Current</MenuItem>\n                </Select>\n                <FormHelperText>Select your cancellation reason</FormHelperText>\n            </FormControl>\n          \n            <br />\n           \n            <TextField\n            id=\"account_no\"\n            label=\"account_no\"\n            name=\"account_no\"\n            multiline\n            rows={1}\n            value = {canceldetails.account_no}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n        <br />\n        <TextField\n            id=\"IFSC_code\"\n            label=\"IFSC_code\"\n            name=\"IFSC_code\"\n            multiline\n            rows={1}\n            value = {canceldetails.IFSC_code}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n        <br />\n        <TextField\n            id=\"bank_name\"\n            label=\"bank_name\"\n            name=\"bank_name\"\n            multiline\n            rows={1}\n            value = {canceldetails.bank_name}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n        <br />\n        <TextField\n            id=\"bank_address\"\n            label=\"bank_address\"\n            name=\"bank_address\"\n            multiline\n            rows={3}\n            value = {canceldetails.bank_address}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n        <br />\n            <TextField\n            id=\"feedback\"\n            label=\"Feedback\"\n            name=\"feedback\"\n            multiline\n            rows={4}\n            value = {canceldetails.feedback}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n           \n            <br />\n\n\n\n            {\n                mybooking.ended || mybooking.extended || props.profile.is_seller===true || mybooking.cancelled ? null : <Button variant=\"contained\" color=\"secondary\" onClick={(e) => {handleclick1(e);}}>\n                Cancel booking\n              </Button>\n            }\n\n            \n\n            \n\n              \n\n\n            </Grid>\n            </div>\n            </main>\n        </div>\n    )\n    }\n    else{\n      return <></>;\n    }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(Bookingcancel);\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/cancelbooking_apartment.js",["1101","1102","1103","1104","1105"],"import React,{ useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dashboarddrawer from '../hocs/layout2'\nimport axios from 'axios'\nimport Eror from '../components/eror'\nimport Grid from '@material-ui/core/Grid';\n\n\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  textclass:{\n    float: 'left',\n  },\n  table: {\n    width:'30%'\n  },\n  head: {\n    fontSize:'20px'\n  },\n  row: {\n    fontSize:'20px'\n  },\n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    \n  },\n}));\n  \n\nfunction Bookingcancel(props) {\n    const bookingid = props.match.params.bookingid;\n    const [error,seterror] = useState(false);\n    const [redirect,setredirect] = useState(false);\n\n    const [mybooking,setmybooking]= useState()\n    const [cancelled,setcancelled]= useState(false)\n\n    const [canceldetails,setdetails] = useState({\n        reason:'No use to me',\n        feedback:'',\n        account_no:'',\n        IFSC_code:'',\n        bank_name:'',\n        bank_address:'',\n        account_type:'Savings',\n    })\n\n    React.useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcensinejfcdajewcn29210/apartment/book/${bookingid}/`,config);\n           \n             setmybooking(res.data)\n              \n              }\n                catch{\n                  seterror(true);\n                }\n        }\n    \n    ,[])\n\n\n    const classes = useStyles();\n\n    const handleclick1 = async (e) => {\n      e.preventDefault();\n\n      const config = {\n        headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n      const body = {\n        data:canceldetails,\n      }\n      setcancelled(true);\n      \n        try{const res = await axios.delete(`${process.env.REACT_APP_API_URL}/sourcensinejfcdajewcn29210/apartment/book/${bookingid}/`,config);\n        \n\n        try{const res = await axios.patch(`${process.env.REACT_APP_API_URL}/sourcensinejfcdajewcn29210/apartment/book/${bookingid}/`,body,config);\n\n        setcancelled(false);\n        setredirect(true)\n      \n      }\n        catch{\n          setcancelled(false);\n          setredirect(true)\n        }\n\n        setcancelled(false);\n      \n      }\n        catch{\n          setcancelled(false);\n          seterror(true);\n        }\n        \n\n    }\n    const handleChange = (event) => {\n        setdetails({...canceldetails,reason:event.target.value});\n      };\n      const handleChange1 = (event) => {\n        setdetails({...canceldetails,account_type:event.target.value});\n      };\n\n      const handleme = e => {\n        setdetails({ ...canceldetails, [e.target.name]: e.target.value });\n      }\n\n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error' /></div>\n    }\n    if(redirect===true)\n    {\n        return <Redirect to='/dashboard/recentbookings'/>;\n    }\n\n    if(mybooking && props.profile){\n    \n    \n    return (\n        <div>\n          {\n            cancelled ? <Backdrop className={classes.backdrop} open={cancelled}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop> : null\n          }\n            <Dashboarddrawer/>\n            <main className={classes.content}>\n            <div className={classes.toolbar} />\n\n            <div>\n\n            <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n           >\n\n\n          \n              <h3>Do you want to cancel booking no .</h3>\n         \n              <h4>{mybooking.booking_id}?</h4>\n            \n\n            \n\n           \n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"cancellation-reason\">Cancellation reason</InputLabel>\n                <Select\n                labelId=\"cancellation-reason\"\n                id=\"cancellation-reason-select\"\n                value={canceldetails.reason}\n                onChange={handleChange}\n                >\n                <MenuItem value={'No use to me'}>No use to me</MenuItem>\n                <MenuItem value={'Booked somewhere else'}>Booked somewhere else</MenuItem>\n                </Select>\n                <FormHelperText>Select your cancellation reason</FormHelperText>\n            </FormControl>\n            \n            <br />\n            \n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"account_type\">Account type</InputLabel>\n                <Select\n                labelId=\"account_type\"\n                id=\"account_type\"\n                value={canceldetails.account_type}\n                onChange={handleChange1}\n                >\n                <MenuItem value={'Savings'}>Savings</MenuItem>\n                <MenuItem value={'Current'}>Current</MenuItem>\n                </Select>\n                <FormHelperText>Select your cancellation reason</FormHelperText>\n            </FormControl>\n           \n            <br />\n            \n\n            <TextField\n            id=\"account_no\"\n            label=\"account_no\"\n            name=\"account_no\"\n            multiline\n            rows={1}\n            value = {canceldetails.account_no}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n         <br />\n        <TextField\n            id=\"IFSC_code\"\n            label=\"IFSC_code\"\n            name=\"IFSC_code\"\n            multiline\n            rows={1}\n            value = {canceldetails.IFSC_code}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n         <br />\n        <TextField\n            id=\"bank_name\"\n            label=\"bank_name\"\n            name=\"bank_name\"\n            multiline\n            rows={1}\n            value = {canceldetails.bank_name}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n         <br />\n        <TextField\n            id=\"bank_address\"\n            label=\"bank_address\"\n            name=\"bank_address\"\n            multiline\n            rows={3}\n            value = {canceldetails.bank_address}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n         <br />\n            <TextField\n            id=\"feedback\"\n            label=\"Feedback\"\n            name=\"feedback\"\n            multiline\n            rows={4}\n            value = {canceldetails.feedback}\n            onInput={(e) =>{handleme(e);}}\n            variant=\"outlined\"\n        />\n            \n            <br />\n\n\n\n            {\n                mybooking.ended || mybooking.extended || props.profile.is_seller===true || mybooking.cancelled ? null : <Button variant=\"contained\" color=\"secondary\" onClick={(e) => {handleclick1(e);}}>\n                Cancel booking\n              </Button>\n            }\n\n            \n\n            \n\n              \n\n\n            </Grid>\n            </div>\n            </main>\n        </div>\n    )\n    }\n    else{\n      return <></>;\n    }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(Bookingcancel);\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/extendbooking.js",["1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141"],"import React,{ useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dashboarddrawer from '../hocs/layout2'\nimport axios from 'axios'\nimport Eror from '../components/eror'\nimport Grid from '@material-ui/core/Grid';\n\n\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport FacilityIcon from './FacilityIconProvider'\nimport Typography from '@material-ui/core/Typography';\nimport SuccessSnackbars from './success_snackbar'\nimport ErrorSnackbars from './error_snackbar'\nimport Box from '@material-ui/core/Box';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  textclass:{\n    float: 'left',\n  },\n  table: {\n    width:'30%'\n  },\n  head: {\n    fontSize:'20px'\n  },\n  row: {\n    fontSize:'20px'\n  },\n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    \n  },\n}));\n  \n\nfunction Bookingextend(props) {\n    const bookingid = props.match.params.bookingid;\n    const [error,seterror] = useState(false);\n    const [redirect,setredirect] = useState(false);\n    \n    const [myroom,setroom] = useState();\n    const [mycoupon,setcoupon] = useState('')\n    const [no,setno] = React.useState(0)\n  const [openme,setopenme] = React.useState(false)\n  const [openme1,setopenme1] = React.useState(false)\n\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n  \n  const [capacity,setcapacity] = React.useState();\n  const [booked,setbooked] = React.useState(true);\n  const [date,setdate] = React.useState()\n\n    const [mybooking,setmybooking]= useState()\n    \n    const [cancelled,setcancelled]= useState(false)\n\n    const [bookdetails,setbookdetails] = React.useState({\n        price:'',\n        date:'',\n        month:'',\n        year:'',\n        duration:1,\n\n        wifi:'',\n        house_TV:'',\n        room_TV:'',\n        house_refridgerator:'',\n        room_refridgerator:'',\n        purified_water:'',\n        geyser:'',\n        AC:'',\n        cooler:'',\n        breakfast:'',\n        lunch:'',\n        dinner:'',\n        \n        coupon:'',\n        discount:0,\n        month_price:'',\n        savings:0,\n        monthsavings:0,\n        roomid:'',\n        title:'',\n        currency:'',\n\n        firstname:'',\n        lastname:'',\n        mobile:'',\n        country_code:'',\n        alternate_mobile:'',\n      \n        paylater:false,\n\n        capacity:'',\n    })\n\n    React.useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              var x = 0;\n              var y = '';\n              var room = ''\n              \n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcehjbda983290whjba/room/book/${bookingid}/`,config);\n             \n             setmybooking(res.data)\n\n             try{const res1 = await axios.get(`${process.env.REACT_APP_API_URL}/sourceaxcnfrudadv34/rooms/${res.data.room_id}/`,config);\n             \n              setroom(res1.data)\n              x = res1.data.cost_electricity +res1.data.cost_water + res1.data.final_price + res1.data.cost_wifi + res1.data.cost_TV + res1.data.cost_roomTV + res1.data.cost_refridgerator + res1.data.cost_roomrefridgerator + res1.data.cost_purified_water + res1.data.cost_geyser + res1.data.cost_AC + res1.data.cost_cooler + res1.data.cost_breakfast + res1.data.cost_lunch + res1.data.cost_dinner\n              y = res1.data.currency\n              room = res1.data\n\n            var mydate = new Date();\n            mydate.setYear(parseInt(res.data.booked_till.slice(0,4)))\n            mydate.setMonth(parseInt(res.data.booked_till.slice(5,7))-1)\n            mydate.setDate(parseInt(res.data.booked_till.slice(8,))+1)\n            setSelectedDate(mydate)\n\n             setdate(res1.data.bookedtill)\n              \n              }\n                catch{\n                  seterror(true);\n                }\n             const value = res.data\n             \n\n             setbookdetails(\n                {\n                  ...bookdetails,\n                    currency:y,\n                    price:parseInt(x),\n                    month_price:parseInt(x),\n                    monthsavings:0,\n                    date:value.booked_till.slice(8,10),\n                    month:value.booked_till.slice(5,7),\n                    year:value.booked_till.slice(0,4),\n                    \n                    wifi:room.wifi,\n                    house_TV:room.house_TV,\n                    room_TV:room.room_TV,\n                    house_refridgerator:room.house_refridgerator,\n                    room_refridgerator:room.room_refridgerator,\n                    purified_water:room.purified_water,\n                    geyser:room.geyser,\n                    AC:room.AC,\n                    cooler:room.cooler,\n                    breakfast:room.breakfast,\n                    lunch:room.lunch,\n                    dinner:room.dinner,\n                    coupon:'none',\n                    discount:value.discount,\n                    \n                    \n                    \n\n                    roomid:value.room_id,\n                    title:value.room_name,\n                    firstname:value.first_name,\n                    lastname:value.last_name,\n                    mobile:value.mobile,\n                    country_code:value.country_code,\n                    alternate_mobile:value.alternate_mobile,\n\n                    capacity:value.capacity,\n\n                    \n                })\n              \n              }\n                catch{\n                  seterror(true);\n                  \n                  \n                }\n\n                \n          \n        }\n    \n    ,[])\n\n    React.useEffect(() => {\n\n      if(date != undefined){\n        if( ( (parseInt(date.slice(8,)) < selectedDate.getDate()) && (parseInt(date.slice(5,7))==selectedDate.getMonth()+1) && (parseInt(date.slice(0,4))==selectedDate.getFullYear()) ) || \n        ( (parseInt(date.slice(5,7))<selectedDate.getMonth()+1) && (parseInt(date.slice(0,4))==selectedDate.getFullYear()) ) ||  (parseInt(date.slice(0,4))<selectedDate.getFullYear()) )\n    {\n        setbooked(false);\n    }\n    else{\n        setbooked(true);\n    }\n\n\nvar x = myroom.capacity-myroom.booked_by\nif(x<0){x=0;}\n\nif(myroom.book1!=null || myroom.book1!=undefined)\n{\n\n    if(  (parseInt(myroom.book1.slice(0,4))<selectedDate.getFullYear()) || ( parseInt(myroom.book1.slice(0,4))===selectedDate.getFullYear() && parseInt(myroom.book1.slice(5,7))<selectedDate.getMonth()+1 ) ||  \n    ( parseInt(myroom.book1.slice(0,4))===selectedDate.getFullYear() && parseInt(myroom.book1.slice(5,7))===selectedDate.getMonth()+1 && parseInt(myroom.book1.slice(8,))<selectedDate.getDate() )  ) \n    {\n        x=x+1;\n    }\n}\n\nif(myroom.book2!=null || myroom.book2!=undefined)\n{\n    if(  (parseInt(myroom.book2.slice(0,4))<selectedDate.getFullYear()) || ( parseInt(myroom.book2.slice(0,4))==selectedDate.getFullYear() && parseInt(myroom.book2.slice(5,7))<selectedDate.getMonth()+1 ) ||  \n    ( parseInt(myroom.book2.slice(0,4))===selectedDate.getFullYear() && parseInt(myroom.book2.slice(5,7))===selectedDate.getMonth()+1 && parseInt(myroom.book2.slice(8,))<selectedDate.getDate())  ) \n    {\n        x=x+1;\n    }\n}\n\nif(myroom.book3!=null || myroom.book3!=undefined)\n{\n    if(  (parseInt(myroom.book3.slice(0,4))<selectedDate.getFullYear()) || ( parseInt(myroom.book3.slice(0,4))==selectedDate.getFullYear() && parseInt(myroom.book3.slice(5,7))<selectedDate.getMonth()+1 ) ||  \n    ( parseInt(myroom.book3.slice(0,4))===selectedDate.getFullYear() && parseInt(myroom.book3.slice(5,7))===selectedDate.getMonth()+1 && parseInt(myroom.book3.slice(8,))<selectedDate.getDate())  ) \n    {\n        x=x+1;\n    }\n}\n\nif(myroom.book4!=null || myroom.book4!=undefined)\n{\n    if(  (parseInt(myroom.book4.slice(0,4))<selectedDate.getFullYear()) || ( parseInt(myroom.book4.slice(0,4))==selectedDate.getFullYear() && parseInt(myroom.book4.slice(5,7))<selectedDate.getMonth()+1 ) ||  \n    ( parseInt(myroom.book4.slice(0,4))===selectedDate.getFullYear() && parseInt(myroom.book4.slice(5,7))===selectedDate.getMonth()+1 && parseInt(myroom.book4.slice(8,))<selectedDate.getDate() )  ) \n    {\n        x=x+1;\n    }\n}\n\nif(myroom.book5!=null || myroom.book5!=undefined)\n{\n    if(  (parseInt(myroom.book5.slice(0,4))<selectedDate.getFullYear()) || ( parseInt(myroom.book5.slice(0,4))==selectedDate.getFullYear() && parseInt(myroom.book5.slice(5,7))<selectedDate.getMonth()+1 ) ||  \n    ( parseInt(myroom.book5.slice(0,4))===selectedDate.getFullYear() && parseInt(myroom.book5.slice(5,7))===selectedDate.getMonth()+1 && parseInt(myroom.book5.slice(8,))<selectedDate.getDate())  ) \n    {\n        x=x+1;\n    }\n}\n\nif(myroom.book6!=null || myroom.book6!=undefined)\n{\n    if(  (parseInt(myroom.book6.slice(0,4))<selectedDate.getFullYear()) || ( parseInt(myroom.book6.slice(0,4))==selectedDate.getFullYear() && parseInt(myroom.book6.slice(5,7))<selectedDate.getMonth()+1 ) ||  \n    ( parseInt(myroom.book6.slice(0,4))===selectedDate.getFullYear() && parseInt(myroom.book6.slice(5,7))===selectedDate.getMonth()+1 && parseInt(myroom.book6.slice(8,))<selectedDate.getDate())  ) \n    {\n        x=x+1;\n    }\n}\n\nif(myroom.book7!=null || myroom.book7!=undefined)\n{\n    if(  (parseInt(myroom.book7.slice(0,4))<selectedDate.getFullYear()) || ( parseInt(myroom.book7.slice(0,4))==selectedDate.getFullYear() && parseInt(myroom.book7.slice(5,7))<selectedDate.getMonth()+1 ) ||  \n    ( parseInt(myroom.book7.slice(0,4))===selectedDate.getFullYear() && parseInt(myroom.book7.slice(5,7))===selectedDate.getMonth()+1 && parseInt(myroom.book7.slice(8,))<selectedDate.getDate())  ) \n    {\n        x=x+1;\n    }\n}\n\nif(myroom.book8!=null || myroom.book8!=undefined)\n{\n    if(  (parseInt(myroom.book8.slice(0,4))<selectedDate.getFullYear()) || ( parseInt(myroom.book8.slice(0,4))==selectedDate.getFullYear() && parseInt(myroom.book8.slice(5,7))<selectedDate.getMonth()+1 ) ||  \n    ( parseInt(myroom.book8.slice(0,4))===selectedDate.getFullYear() && parseInt(myroom.book8.slice(5,7))===selectedDate.getMonth()+1 && parseInt(myroom.book8.slice(8,))<selectedDate.getDate())  ) \n    {\n        x=x+1;\n    }\n}\n\nif(myroom.book9!=null || myroom.book9!=undefined)\n{\n    if(  (parseInt(myroom.book9.slice(0,4))<selectedDate.getFullYear()) || ( parseInt(myroom.book9.slice(0,4))==selectedDate.getFullYear() && parseInt(myroom.book9.slice(5,7))<selectedDate.getMonth()+1 ) ||  \n    ( parseInt(myroom.book9.slice(0,4))===selectedDate.getFullYear() && parseInt(myroom.book9.slice(5,7))===selectedDate.getMonth()+1 && parseInt(myroom.book9.slice(8,))<selectedDate.getDate())  ) \n    {\n        x=x+1;\n    }\n}\n\nif(myroom.book10!=null || myroom.book10!=undefined)\n{\n    if(  (parseInt(myroom.book10.slice(0,4))<selectedDate.getFullYear()) || ( parseInt(myroom.book10.slice(0,4))==selectedDate.getFullYear() && parseInt(myroom.book10.slice(5,7))<selectedDate.getMonth()+1 ) ||  \n    ( parseInt(myroom.book10.slice(0,4))===selectedDate.getFullYear() && parseInt(myroom.book10.slice(5,7))===selectedDate.getMonth()+1 && parseInt(myroom.book10.slice(8,))<selectedDate.getDate())  ) \n    {\n        x=x+1;\n    }\n}\n\n\n\n\nsetcapacity(x);\nif(x<bookdetails.capacity)\n{\n  setbooked(true)\n}\n\n    \n    }\n\n    },[date,myroom,bookdetails.capacity,selectedDate])\n\n    React.useEffect(() => {\n      if(bookdetails.coupon=='' || mycoupon=='')\n      {\n        setbookdetails({...bookdetails,coupon:'none'})\n      }\n      if(mycoupon!='')\n      {\n        setbookdetails({...bookdetails,coupon:mycoupon})\n      }\n     \n\n    },[mycoupon])\n    \n\n    const loadScript = () => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n      document.body.appendChild(script);\n    };\n\n    const handlePaymentSuccess = async (response) => {\n      try {\n     \n        let bodyData = new FormData();\n  \n        // we will send the response we've got from razorpay to the backend to validate the payment\n        bodyData.append(\"response\", JSON.stringify(response));\n  \n        await axios({\n          url: `${process.env.REACT_APP_API_URL}/sourcehdnaj2iu0qejwba9022qjadnba/room/book/payment/1/`,\n          method: \"PUT\",\n          data: bodyData,\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\n          },\n        })\n          .then((res) => {\n            setcancelled(false);\n            setredirect(true)\n            \n          })\n          .catch((err) => {\n            setcancelled(false);\n            seterror(true);\n            setredirect(true)\n          });\n      } catch (error) {\n        seterror(true);\n      }\n    };\n  \n\n\n    const classes = useStyles();\n\n    const handleclick1 = async (e) => {\n\n\n      e.preventDefault();\n\n      const res = await loadScript();\n      var data = '';\n      if(bookdetails.coupon=='')\n      {\n        setbookdetails({...bookdetails,coupon:'none'})\n      }\n      \n\n     \n\n      const config = {\n        headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n      const body = {\n        data:bookdetails,\n      }\n      setcancelled(true);\n      \n      \n        try{const res = await axios.put(`${process.env.REACT_APP_API_URL}/sourcehjbda983290whjba/room/book/${bookingid}/`,body,config);\n        \n        data = res;\n        \n        var options = {\n          key_id: process.env.REACT_APP_RAZORPAY_API_KEY, // in react your environment variable must start with REACT_APP_\n          key_secret: process.env.REACT_APP_RAZORPAY_KEY_SECRET,\n          amount: data.data.price_to_be_paid,\n          currency: bookdetails.currency.slice(2,),\n          name: \"Org. Name\",\n          description: \"Test teansaction\",\n          image: \"\", // add image url\n          order_id: data.data.payment_id,\n          handler: function (response) {\n            // we will handle success by calling handlePaymentSuccess method and\n            // will pass the response that we've got from razorpay\n            handlePaymentSuccess(response);\n          },\n          prefill: {\n            name: bookdetails.firstname + \" \" + bookdetails.lastname,\n            email:props.profile.email ,\n            contact: bookdetails.mobile,\n          },\n          notes: {\n            address: \"Razorpay Corporate Office\",\n          },\n          theme: {\n            color: \"#528FF0\",\n          },\n        };\n        \n    \n        var rzp1 = new window.Razorpay(options);\n        rzp1.open();\n      \n      }\n        catch{\n          setcancelled(false);\n          seterror(true);\n        }\n        \n\n    }\n    const handleChange = (event) => {\n      \n        setbookdetails({...bookdetails,duration:event.target.value,price:bookdetails.month_price*event.target.value});\n      };\n      const handleme = e => {\n        setcoupon(e.target.value);\n      }\n\n\n\n      const handlecoupon = async (e) => {\n        e.preventDefault();\n        if(bookdetails.coupon!='none' && no==0)\n        {\n          try{\n              const config = {\n                  headers: {\n                          'Content-Type': 'application/json',\n                          'Authorization': `JWT ${localStorage.getItem('access')}`,\n                  },\n                  params:{\n                      price:bookdetails.price,\n                      discount:bookdetails.discount,\n                      savings:bookdetails.savings,\n                      roomid:bookdetails.roomid\n                     },\n                };\n      \n             \n              \n              const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcesawdajwnr32w2/coupon/room/apply/${bookdetails.coupon}/`,config,config);\n      \n          \n            setbookdetails({...bookdetails,price:res.data[1],discount:res.data[3],savings:res.data[2]})\n            setno(1);\n            setopenme(true)\n      \n            \n      \n            \n            }\n            catch{\n              setopenme1(true)\n            }\n        }\n      }\n\n\n      const oncouponChange = e => {\n        setcoupon(e.target.value)\n        \n    }\n  \n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error' /></div>\n    }\n    if(redirect===true)\n    {\n        return <Redirect to='/dashboard/recentbookings'/>;\n    }\n\n    if(mybooking && props.profile && myroom){\n    \n    \n    return (\n        <div>\n\n<SuccessSnackbars openme={openme} setopenme={setopenme} message={'Coupon applied successfully!'}/>\n      <ErrorSnackbars openme={openme1} setopenme={setopenme1} message={'Coupon not applicable!'}/>\n          {\n            cancelled ? <Backdrop className={classes.backdrop} open={cancelled}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop> : null\n          }\n            <Dashboarddrawer/>\n            <main className={classes.content}>\n            <div className={classes.toolbar} />\n\n            <div>\n\n            <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n           >\n\n\n            <Grid item >\n              <h3>Do you want to extend booking no .</h3>\n            </Grid>\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n            \n            \n            <Grid item >\n              <h4>{mybooking.booking_id}?</h4>\n            </Grid>\n\n            \n\n            </Grid>\n            <Grid item>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"months\">Months</InputLabel>\n                <Select\n                labelId=\"months\"\n                id=\"months-select\"\n                value={bookdetails.duration}\n                onChange={handleChange}\n                >\n                <MenuItem value={1}>1 Months</MenuItem>\n                <MenuItem value={2}>2 Months</MenuItem>\n                <MenuItem value={3}>3 Months</MenuItem>\n                <MenuItem value={4}>4 Months</MenuItem>\n                <MenuItem value={5}>5 Months</MenuItem>\n                <MenuItem value={6}>6 Months</MenuItem>\n                <MenuItem value={7}>7 Months</MenuItem>\n                <MenuItem value={8}>8 Months</MenuItem>\n                <MenuItem value={9}>9 Months</MenuItem>\n                <MenuItem value={10}>10 Months</MenuItem>\n                <MenuItem value={11}>11 Months</MenuItem>\n                <MenuItem value={12}>12 Months</MenuItem>\n                <MenuItem value={13}>13 Months</MenuItem>\n                <MenuItem value={14}>14 Months</MenuItem>\n                <MenuItem value={15}>15 Months</MenuItem>\n                <MenuItem value={16}>16 Months</MenuItem>\n                <MenuItem value={17}>17 Months</MenuItem>\n                <MenuItem value={18}>18 Months</MenuItem>\n                <MenuItem value={19}>19 Months</MenuItem>\n                <MenuItem value={20}>20 Months</MenuItem>\n                <MenuItem value={21}>21 Months</MenuItem>\n                <MenuItem value={22}>22 Months</MenuItem>\n                <MenuItem value={23}>23 Months</MenuItem>\n                <MenuItem value={24}>24 Months</MenuItem>\n                </Select>\n                <FormHelperText>Select no. of months</FormHelperText>\n            </FormControl>\n            </Grid>\n            <br />\n            <Grid item lg={6} md={7}>\n            <FacilityIcon post={myroom} bookvalues={bookdetails} setbookvalues={setbookdetails}/>\n            </Grid>\n            <br />\n           \n\n\n\n       \n        \n           \n\n            <Box mt={1} mb={2}>\n    <Grid container alignItems='center'>\n        <Grid item xs={4}>\n            <Typography variant='subtitle1'>\n                Apply Coupon\n            </Typography>\n            <Typography variant='body2' gutterBottom>\n                (Must be applied after you select all the details)\n            </Typography>\n        </Grid>\n                    <Grid item xs={7}>\n                            <FormControl variant=\"outlined\" noValidate>\n                            <InputLabel >Coupon Code</InputLabel>\n                            <OutlinedInput\n                                value={mycoupon}\n                                onInput={ e => oncouponChange(e)}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                    <Button onClick={e => {handlecoupon(e);}}>\n                                        Check\n                                    </Button>\n                                </InputAdornment>\n                                }\n                                labelWidth={100}\n                                />\n                            </FormControl>\n                    </Grid>\n            </Grid>\n\n\n\n\n\n\n        </Box>\n        <br />\n            <Typography variant=\"body1\">Price : {bookdetails.currency} {bookdetails.price}</Typography>\n            <br />\n\n            {\n                booked || mybooking.ended || mybooking.extended || props.profile.is_seller===true || mybooking.cancelled ? null : <Button variant=\"contained\" color=\"secondary\" onClick={(e) => {handleclick1(e);}}>\n                Extend Booking\n              </Button>\n            }\n          \n\n          <br />\n          <Typography>\n            Please note that the price will be increased due to transaction charges of payment gateway and taxes\n            </Typography>\n\n            \n\n              \n\n\n            </Grid>\n            </div>\n            </main>\n        </div>\n    )\n    }\n    else{\n      return <></>;\n    }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(Bookingextend);\n\n\n\n\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/extendbooking_shop.js",["1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156"],"\n\n\n\n\n\n\n\n\n\nimport React,{ useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dashboarddrawer from '../hocs/layout2'\nimport axios from 'axios'\nimport Eror from '../components/eror'\nimport Grid from '@material-ui/core/Grid';\n\n\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport FacilityIcon from './FacilityIconProvider_shop'\nimport Typography from '@material-ui/core/Typography';\nimport SuccessSnackbars from './success_snackbar'\nimport ErrorSnackbars from './error_snackbar'\nimport Box from '@material-ui/core/Box';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  textclass:{\n    float: 'left',\n  },\n  table: {\n    width:'30%'\n  },\n  head: {\n    fontSize:'20px'\n  },\n  row: {\n    fontSize:'20px'\n  },\n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    \n  },\n}));\n  \n\nfunction Bookingextend(props) {\n    const bookingid = props.match.params.bookingid;\n    const [error,seterror] = useState(false);\n    const [redirect,setredirect] = useState(false);\n    \n    const [myroom,setroom] = useState();\n    const [mycoupon,setcoupon] = useState('')\n    const [no,setno] = React.useState(0)\n  const [openme,setopenme] = React.useState(false)\n  const [openme1,setopenme1] = React.useState(false)\n\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n  \n  const [booked,setbooked] = React.useState(true);\n  const [date,setdate] = React.useState()\n\n    const [mybooking,setmybooking]= useState()\n    \n    const [cancelled,setcancelled]= useState(false)\n\n    const [bookdetails,setbookdetails] = React.useState({\n        price:'',\n        date:'',\n        month:'',\n        year:'',\n        duration:1,\n\n        wifi:'',\n        TV:'',\n        \n        purified_water:'',\n        \n        AC:'',\n        cooler:'',\n        \n       \n        \n        coupon:'',\n        discount:0,\n        month_price:'',\n        savings:0,\n        monthsavings:0,\n        shopid:'',\n        title:'',\n        currency:'',\n\n        firstname:'',\n        lastname:'',\n        mobile:'',\n        country_code:'',\n        alternate_mobile:'',\n      \n        paylater:false,\n\n       \n    })\n\n    React.useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              var x = 0;\n              var y = '';\n              var shop = '';\n              \n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcehdawnajk289uadhq/shop/book/${bookingid}/`,config);\n             \n             setmybooking(res.data)\n\n             try{const res1 = await axios.get(`${process.env.REACT_APP_API_URL}/sourceadadk2647kfs/shops/${res.data.shop_id}/`,config);\n             \n              setroom(res1.data)\n              x = x = res1.data.cost_electricity +res1.data.cost_water + res1.data.final_price + res1.data.cost_wifi + res1.data.cost_TV + res1.data.cost_purified_water +  res1.data.cost_AC + res1.data.cost_cooler\n              y = res1.data.currency\n             setdate(res1.data.bookedtill)\n             shop = res1.data\n\n             var mydate = new Date();\n            mydate.setYear(parseInt(res.data.booked_till.slice(0,4)))\n            mydate.setMonth(parseInt(res.data.booked_till.slice(5,7))-1)\n            mydate.setDate(parseInt(res.data.booked_till.slice(8,))+1)\n            setSelectedDate(mydate)\n              \n              }\n                catch{\n                  seterror(true);\n                }\n             const value = res.data\n             \n\n             setbookdetails(\n                {\n                  ...bookdetails,\n                    currency:y,\n                    price:parseInt(x),\n                    month_price:parseInt(x),\n                    monthsavings:0,\n                    date:value.booked_till.slice(8,10),\n                    month:value.booked_till.slice(5,7),\n                    year:value.booked_till.slice(0,4),\n                    \n                    wifi:shop.wifi,\n                    TV:shop.TV,\n                   \n                    purified_water:shop.purified_water,\n                   \n                    AC:shop.AC,\n                    cooler:shop.cooler,\n                   \n                    coupon:'none',\n                    discount:value.discount,\n                    \n                    \n                    \n\n                    shopid:value.shop_id,\n                    title:value.shop_name,\n                    firstname:value.first_name,\n                    lastname:value.last_name,\n                    mobile:value.mobile,\n                    country_code:value.country_code,\n                    alternate_mobile:value.alternate_mobile,\n\n                    \n                    \n                })\n              \n              }\n                catch{\n                  seterror(true);\n                  \n                  \n                }\n\n                \n          \n        }\n    \n    ,[])\n\n    React.useEffect(() => {\n\n      if(date != undefined){\n        if( ( (parseInt(date.slice(8,)) < selectedDate.getDate()) && (parseInt(date.slice(5,7))==selectedDate.getMonth()+1) && (parseInt(date.slice(0,4))==selectedDate.getFullYear()) ) || \n        ( (parseInt(date.slice(5,7))<selectedDate.getMonth()+1) && (parseInt(date.slice(0,4))==selectedDate.getFullYear()) ) ||  (parseInt(date.slice(0,4))<selectedDate.getFullYear()) )\n    {\n        setbooked(false);\n    }\n    else{\n        setbooked(true);\n    }\n\n\n    \n    }\n\n    },[date,myroom,bookdetails.capacity,selectedDate])\n\n    React.useEffect(() => {\n      if(bookdetails.coupon=='' || mycoupon=='')\n      {\n        setbookdetails({...bookdetails,coupon:'none'})\n      }\n      if(mycoupon!='')\n      {\n        setbookdetails({...bookdetails,coupon:mycoupon})\n      }\n     \n\n    },[mycoupon])\n\n\n    const classes = useStyles();\n\n\n    const loadScript = () => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n      document.body.appendChild(script);\n    };\n  \n    const handlePaymentSuccess = async (response) => {\n      try {\n     \n        let bodyData = new FormData();\n  \n        // we will send the response we've got from razorpay to the backend to validate the payment\n        bodyData.append(\"response\", JSON.stringify(response));\n  \n        await axios({\n          url: `${process.env.REACT_APP_API_URL}/sourcwjndqndoni3290902uruwhi2/shop/book/payment/1/`,\n          method: \"PUT\",\n          data: bodyData,\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\n          },\n        })\n          .then((res) => {\n            setcancelled(false);\n            setredirect(true)\n            \n          })\n          .catch((err) => {\n            setcancelled(false);\n            seterror(true);\n            setredirect(true)\n          });\n      } catch (error) {\n        seterror(true);\n      }\n           \n      \n    };\n\n\n\n    const handleclick1 = async (e) => {\n      e.preventDefault();\n\n      const res = await loadScript();\n      var data = '';\n\n      if(bookdetails.coupon=='')\n      {\n        setbookdetails({...bookdetails,coupon:'none'})\n      }\n      \n\n     \n\n      const config = {\n        headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n      const body = {\n        data:bookdetails,\n      }\n      setcancelled(true);\n     \n      \n        try{const res = await axios.put(`${process.env.REACT_APP_API_URL}/sourcehdawnajk289uadhq/shop/book/${bookingid}/`,body,config);\n        \n\n        data = res;\n        \n        var options = {\n          key_id: process.env.REACT_APP_RAZORPAY_API_KEY, // in react your environment variable must start with REACT_APP_\n          key_secret: process.env.REACT_APP_RAZORPAY_KEY_SECRET,\n          amount: data.data.price_to_be_paid,\n          currency: bookdetails.currency.slice(2,),\n          name: \"Org. Name\",\n          description: \"Test teansaction\",\n          image: \"\", // add image url\n          order_id: data.data.payment_id,\n          handler: function (response) {\n            // we will handle success by calling handlePaymentSuccess method and\n            // will pass the response that we've got from razorpay\n            handlePaymentSuccess(response);\n          },\n          prefill: {\n            name: bookdetails.firstname + \" \" + bookdetails.lastname,\n            email:props.profile.email ,\n            contact: bookdetails.mobile,\n          },\n          notes: {\n            address: \"Razorpay Corporate Office\",\n          },\n          theme: {\n            color: \"#528FF0\",\n          },\n        };\n        \n    \n        var rzp1 = new window.Razorpay(options);\n        rzp1.open();\n      \n      }\n        catch{\n          setcancelled(false);\n          seterror(true);\n        }\n        \n\n    }\n    const handleChange = (event) => {\n      \n        setbookdetails({...bookdetails,duration:event.target.value,price:bookdetails.month_price*event.target.value});\n      };\n     \n\n\n\n      const handlecoupon = async (e) => {\n        e.preventDefault();\n        if(bookdetails.coupon!='none' && no==0)\n        {\n          try{\n              const config = {\n                  headers: {\n                          'Content-Type': 'application/json',\n                          'Authorization': `JWT ${localStorage.getItem('access')}`,\n                  },\n                  params:{\n                      price:bookdetails.price,\n                      discount:bookdetails.discount,\n                      savings:bookdetails.savings,\n                      shopid:bookdetails.shopid\n                     },\n                };\n      \n             \n              \n              const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcefsejfnsjcn9302/coupon/shop/apply/${bookdetails.coupon}/`,config,config);\n      \n         \n            setbookdetails({...bookdetails,price:res.data[1],discount:res.data[3],savings:res.data[2]})\n            setno(1);\n            setopenme(true)\n      \n            \n      \n            \n            }\n            catch{\n              setopenme1(true)\n            }\n        }\n      }\n\n\n      const oncouponChange = e => {\n        setcoupon(e.target.value)\n        \n    }\n  \n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error' /></div>\n    }\n    if(redirect===true)\n    {\n        return <Redirect to='/dashboard/recentbookings'/>;\n    }\n\n    if(mybooking && props.profile && myroom){\n    \n    \n    return (\n        <div>\n\n<SuccessSnackbars openme={openme} setopenme={setopenme} message={'Coupon applied successfully!'}/>\n      <ErrorSnackbars openme={openme1} setopenme={setopenme1} message={'Coupon not applicable!'}/>\n          {\n            cancelled ? <Backdrop className={classes.backdrop} open={cancelled}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop> : null\n          }\n            <Dashboarddrawer/>\n            <main className={classes.content}>\n            <div className={classes.toolbar} />\n\n            <div>\n\n            <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n           >\n\n\n            <Grid item >\n              <h3>Do you want to extend booking no .</h3>\n            </Grid>\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n            \n            \n            <Grid item >\n              <h4>{mybooking.booking_id}?</h4>\n            </Grid>\n\n            \n\n            </Grid>\n            <Grid item>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"months\">Months</InputLabel>\n                <Select\n                labelId=\"months\"\n                id=\"months-select\"\n                value={bookdetails.duration}\n                onChange={handleChange}\n                >\n                <MenuItem value={1}>1 Months</MenuItem>\n                <MenuItem value={2}>2 Months</MenuItem>\n                <MenuItem value={3}>3 Months</MenuItem>\n                <MenuItem value={4}>4 Months</MenuItem>\n                <MenuItem value={5}>5 Months</MenuItem>\n                <MenuItem value={6}>6 Months</MenuItem>\n                <MenuItem value={7}>7 Months</MenuItem>\n                <MenuItem value={8}>8 Months</MenuItem>\n                <MenuItem value={9}>9 Months</MenuItem>\n                <MenuItem value={10}>10 Months</MenuItem>\n                <MenuItem value={11}>11 Months</MenuItem>\n                <MenuItem value={12}>12 Months</MenuItem>\n                <MenuItem value={13}>13 Months</MenuItem>\n                <MenuItem value={14}>14 Months</MenuItem>\n                <MenuItem value={15}>15 Months</MenuItem>\n                <MenuItem value={16}>16 Months</MenuItem>\n                <MenuItem value={17}>17 Months</MenuItem>\n                <MenuItem value={18}>18 Months</MenuItem>\n                <MenuItem value={19}>19 Months</MenuItem>\n                <MenuItem value={20}>20 Months</MenuItem>\n                <MenuItem value={21}>21 Months</MenuItem>\n                <MenuItem value={22}>22 Months</MenuItem>\n                <MenuItem value={23}>23 Months</MenuItem>\n                <MenuItem value={24}>24 Months</MenuItem>\n                </Select>\n                <FormHelperText>Select no. of months</FormHelperText>\n            </FormControl>\n            </Grid>\n            <br />\n            <Grid item lg={6} md={7}>\n            <FacilityIcon post={myroom} bookvalues={bookdetails} setbookvalues={setbookdetails}/>\n            </Grid>\n            <br />\n           \n\n\n\n       \n        \n           \n\n            <Box mt={1} mb={2}>\n    <Grid container alignItems='center'>\n        <Grid item xs={4}>\n            <Typography variant='subtitle1'>\n                Apply Coupon\n            </Typography>\n            <Typography variant='body2' gutterBottom>\n                (Must be applied after you select all the details)\n            </Typography>\n        </Grid>\n                    <Grid item xs={7}>\n                            <FormControl variant=\"outlined\" noValidate>\n                            <InputLabel >Coupon Code</InputLabel>\n                            <OutlinedInput\n                                value={mycoupon}\n                                onInput={ e => oncouponChange(e)}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                    <Button onClick={e => {handlecoupon(e);}}>\n                                        Check\n                                    </Button>\n                                </InputAdornment>\n                                }\n                                labelWidth={100}\n                                />\n                            </FormControl>\n                    </Grid>\n            </Grid>\n\n\n\n\n\n\n        </Box>\n        <br />\n            <Typography variant=\"body1\">Price : {bookdetails.currency} {bookdetails.price}</Typography>\n            <br />\n\n            {\n                booked || mybooking.ended || mybooking.extended || props.profile.is_seller===true || mybooking.cancelled ? null : <Button variant=\"contained\" color=\"secondary\" onClick={(e) => {handleclick1(e);}}>\n                Extend Booking\n              </Button>\n            }\n          \n            <br />\n          <Typography>\n            Please note that the price will be increased due to transaction charges of payment gateway and taxes\n            </Typography>\n\n\n            \n\n            \n\n              \n\n\n            </Grid>\n            </div>\n            </main>\n        </div>\n    )\n    }\n    else{\n      return <></>;\n    }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(Bookingextend);\n\n\n\n\n\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/extendbooking_apartment.js",["1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171"],"\n\n\n\n\n\n\n\n\n\n\n\nimport React,{ useState} from 'react'\nimport {  makeStyles } from '@material-ui/core/styles';\nimport Dashboarddrawer from '../hocs/layout2'\nimport axios from 'axios'\nimport Eror from '../components/eror'\nimport Grid from '@material-ui/core/Grid';\n\n\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport FacilityIcon from './FacilityIconProvider_shop'\nimport Typography from '@material-ui/core/Typography';\nimport SuccessSnackbars from './success_snackbar'\nimport ErrorSnackbars from './error_snackbar'\nimport Box from '@material-ui/core/Box';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  textclass:{\n    float: 'left',\n  },\n  table: {\n    width:'30%'\n  },\n  head: {\n    fontSize:'20px'\n  },\n  row: {\n    fontSize:'20px'\n  },\n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    \n  },\n}));\n  \n\nfunction Bookingextend(props) {\n    const bookingid = props.match.params.bookingid;\n    const [error,seterror] = useState(false);\n    const [redirect,setredirect] = useState(false);\n    \n    const [myroom,setroom] = useState();\n    const [mycoupon,setcoupon] = useState('')\n    const [no,setno] = React.useState(0)\n  const [openme,setopenme] = React.useState(false)\n  const [openme1,setopenme1] = React.useState(false)\n\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n  \n  const [booked,setbooked] = React.useState(true);\n  const [date,setdate] = React.useState()\n\n    const [mybooking,setmybooking]= useState()\n    \n    const [cancelled,setcancelled]= useState(false)\n\n    const [bookdetails,setbookdetails] = React.useState({\n        price:'',\n        date:'',\n        month:'',\n        year:'',\n        duration:1,\n\n        wifi:'',\n        TV:'',\n      \n        house_refridgerator:'',\n        \n        purified_water:'',\n        geyser:'',\n        AC:'',\n        cooler:'',\n        laundry:'',\n        \n       \n        \n        coupon:'',\n        discount:0,\n        month_price:'',\n        savings:0,\n        monthsavings:0,\n        apartmentid:'',\n        title:'',\n        currency:'',\n\n        firstname:'',\n        lastname:'',\n        mobile:'',\n        country_code:'',\n        alternate_mobile:'',\n      \n        paylater:false,\n\n       \n    })\n\n    React.useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              var x = 0;\n              var y = '';\n              var apartment = ''\n              \n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcensinejfcdajewcn29210/apartment/book/${bookingid}/`,config);\n             \n             setmybooking(res.data)\n\n             try{const res1 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcebvdfesl2746/apartments/${res.data.apartment_id}/`,config);\n             \n              setroom(res1.data)\n              x = res1.data.cost_electricity +res1.data.cost_water+res1.data.cost_laundry + res1.data.final_price + res1.data.cost_wifi + res1.data.cost_TV  + res1.data.cost_refridgerator + res1.data.cost_purified_water + res1.data.cost_geyser + res1.data.cost_AC + res1.data.cost_cooler\n              y = res1.data.currency\n             setdate(res1.data.bookedtill)\n             apartment = res1.data\n\n             var mydate = new Date();\n            mydate.setYear(parseInt(res.data.booked_till.slice(0,4)))\n            mydate.setMonth(parseInt(res.data.booked_till.slice(5,7))-1)\n            mydate.setDate(parseInt(res.data.booked_till.slice(8,))+1)\n            setSelectedDate(mydate)\n              \n              }\n                catch{\n                  seterror(true);\n                }\n             const value = res.data\n             \n\n             setbookdetails(\n                {\n                  ...bookdetails,\n                    currency:y,\n                    price:parseInt(x),\n                    month_price:parseInt(x),\n                    monthsavings:0,\n                    date:value.booked_till.slice(8,10),\n                    month:value.booked_till.slice(5,7),\n                    year:value.booked_till.slice(0,4),\n                    \n                    wifi:apartment.wifi,\n                    TV:apartment.TV,\n                  \n                    house_refridgerator:apartment.house_refridgerator,\n\n                    laundry:apartment.laundry,\n                    \n                    purified_water:apartment.purified_water,\n                    geyser:apartment.geyser,\n                    AC:apartment.AC,\n                    cooler:apartment.cooler,\n                   \n                    coupon:'none',\n                    discount:value.discount,\n                    \n                    \n                    \n\n                    apartmentid:value.apartment_id,\n                    title:value.apartment_name,\n                    firstname:value.first_name,\n                    lastname:value.last_name,\n                    mobile:value.mobile,\n                    country_code:value.country_code,\n                    alternate_mobile:value.alternate_mobile,\n\n                    \n                    \n                })\n              \n              }\n                catch{\n                  seterror(true);\n                  \n                  \n                }\n\n                \n          \n        }\n    \n    ,[])\n\n    React.useEffect(() => {\n\n      if(date != undefined){\n        if( ( (parseInt(date.slice(8,)) < selectedDate.getDate()) && (parseInt(date.slice(5,7))==selectedDate.getMonth()+1) && (parseInt(date.slice(0,4))==selectedDate.getFullYear()) ) || \n        ( (parseInt(date.slice(5,7))<selectedDate.getMonth()+1) && (parseInt(date.slice(0,4))==selectedDate.getFullYear()) ) ||  (parseInt(date.slice(0,4))<selectedDate.getFullYear()) )\n    {\n        setbooked(false);\n    }\n    else{\n        setbooked(true);\n    }\n\n\n    \n    }\n\n    },[date,myroom,bookdetails.capacity,selectedDate])\n\n    React.useEffect(() => {\n      if(bookdetails.coupon=='' || mycoupon=='')\n      {\n        setbookdetails({...bookdetails,coupon:'none'})\n      }\n      if(mycoupon!='')\n      {\n        setbookdetails({...bookdetails,coupon:mycoupon})\n      }\n   \n\n    },[mycoupon])\n\n\n    const classes = useStyles();\n\n    const loadScript = () => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n      document.body.appendChild(script);\n    };\n  \n    const handlePaymentSuccess = async (response) => {\n      try {\n      \n        let bodyData = new FormData();\n  \n        // we will send the response we've got from razorpay to the backend to validate the payment\n        bodyData.append(\"response\", JSON.stringify(response));\n  \n        await axios({\n          url: `${process.env.REACT_APP_API_URL}/sourcefueiu320has82bzadh12naaaa2/apartment/book/payment/1/`,\n          method: \"PUT\",\n          data: bodyData,\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\n          },\n        })\n          .then((res) => {\n            setcancelled(false);\n            setredirect(true)\n            \n          })\n          .catch((err) => {\n            setcancelled(false);\n            seterror(true);\n            setredirect(true)\n          });\n      } catch (error) {\n        seterror(true);\n      }\n           \n      \n    };\n\n    const handleclick1 = async (e) => {\n      e.preventDefault();\n\n      const res = await loadScript();\n      var data = '';\n\n      if(bookdetails.coupon=='')\n      {\n        setbookdetails({...bookdetails,coupon:'none'})\n      }\n      \n\n     \n\n      const config = {\n        headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n      const body = {\n        data:bookdetails,\n      }\n      setcancelled(true);\n      \n      \n        try{const res = await axios.put(`${process.env.REACT_APP_API_URL}/sourcensinejfcdajewcn29210/apartment/book/${bookingid}/`,body,config);\n        \n\n         data = res;\n        \n        var options = {\n          key_id: process.env.REACT_APP_RAZORPAY_API_KEY, // in react your environment variable must start with REACT_APP_\n          key_secret: process.env.REACT_APP_RAZORPAY_KEY_SECRET,\n          amount: data.data.price_to_be_paid,\n          currency: bookdetails.currency.slice(2,),\n          name: \"Org. Name\",\n          description: \"Test teansaction\",\n          image: \"\", // add image url\n          order_id: data.data.payment_id,\n          handler: function (response) {\n            // we will handle success by calling handlePaymentSuccess method and\n            // will pass the response that we've got from razorpay\n            handlePaymentSuccess(response);\n          },\n          prefill: {\n            name: bookdetails.firstname + \" \" + bookdetails.lastname,\n            email:props.profile.email ,\n            contact: bookdetails.mobile,\n          },\n          notes: {\n            address: \"Razorpay Corporate Office\",\n          },\n          theme: {\n            color: \"#528FF0\",\n          },\n        };\n        \n    \n        var rzp1 = new window.Razorpay(options);\n        rzp1.open();\n      \n      }\n        catch{\n          setcancelled(false);\n          \n        }\n        \n\n    }\n    const handleChange = (event) => {\n      \n        setbookdetails({...bookdetails,duration:event.target.value,price:bookdetails.month_price*event.target.value});\n      };\n     \n\n\n\n      const handlecoupon = async (e) => {\n        e.preventDefault();\n        if(bookdetails.coupon!='none' && no==0)\n        {\n          try{\n              const config = {\n                  headers: {\n                          'Content-Type': 'application/json',\n                          'Authorization': `JWT ${localStorage.getItem('access')}`,\n                  },\n                  params:{\n                      price:bookdetails.price,\n                      discount:bookdetails.discount,\n                      savings:bookdetails.savings,\n                      apartmentid:bookdetails.apartmentid\n                     },\n                };\n      \n             \n              \n              const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourceasindwanuia29910/coupon/apartment/apply/${bookdetails.coupon}/`,config,config);\n      \n            \n            setbookdetails({...bookdetails,price:res.data[1],discount:res.data[3],savings:res.data[2]})\n            setno(1);\n            setopenme(true)\n      \n            \n      \n            \n            }\n            catch{\n              setopenme1(true)\n            }\n        }\n      }\n\n\n      const oncouponChange = e => {\n        setcoupon(e.target.value)\n        \n    }\n  \n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error' /></div>\n    }\n    if(redirect===true)\n    {\n        return <Redirect to='/dashboard/recentbookings'/>;\n    }\n\n    if(mybooking && props.profile && myroom){\n    \n    \n    return (\n        <div>\n\n<SuccessSnackbars openme={openme} setopenme={setopenme} message={'Coupon applied successfully!'}/>\n      <ErrorSnackbars openme={openme1} setopenme={setopenme1} message={'Coupon not applicable!'}/>\n          {\n            cancelled ? <Backdrop className={classes.backdrop} open={cancelled}>\n            <CircularProgress color=\"inherit\" />\n          </Backdrop> : null\n          }\n            <Dashboarddrawer/>\n            <main className={classes.content}>\n            <div className={classes.toolbar} />\n\n            <div>\n\n            <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n           >\n\n\n            <Grid item >\n              <h3>Do you want to extend booking no .</h3>\n            </Grid>\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n            \n            \n            <Grid item >\n              <h4>{mybooking.booking_id}?</h4>\n            </Grid>\n\n            \n\n            </Grid>\n            <Grid item>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"months\">Months</InputLabel>\n                <Select\n                labelId=\"months\"\n                id=\"months-select\"\n                value={bookdetails.duration}\n                onChange={handleChange}\n                >\n                <MenuItem value={1}>1 Months</MenuItem>\n                <MenuItem value={2}>2 Months</MenuItem>\n                <MenuItem value={3}>3 Months</MenuItem>\n                <MenuItem value={4}>4 Months</MenuItem>\n                <MenuItem value={5}>5 Months</MenuItem>\n                <MenuItem value={6}>6 Months</MenuItem>\n                <MenuItem value={7}>7 Months</MenuItem>\n                <MenuItem value={8}>8 Months</MenuItem>\n                <MenuItem value={9}>9 Months</MenuItem>\n                <MenuItem value={10}>10 Months</MenuItem>\n                <MenuItem value={11}>11 Months</MenuItem>\n                <MenuItem value={12}>12 Months</MenuItem>\n                <MenuItem value={13}>13 Months</MenuItem>\n                <MenuItem value={14}>14 Months</MenuItem>\n                <MenuItem value={15}>15 Months</MenuItem>\n                <MenuItem value={16}>16 Months</MenuItem>\n                <MenuItem value={17}>17 Months</MenuItem>\n                <MenuItem value={18}>18 Months</MenuItem>\n                <MenuItem value={19}>19 Months</MenuItem>\n                <MenuItem value={20}>20 Months</MenuItem>\n                <MenuItem value={21}>21 Months</MenuItem>\n                <MenuItem value={22}>22 Months</MenuItem>\n                <MenuItem value={23}>23 Months</MenuItem>\n                <MenuItem value={24}>24 Months</MenuItem>\n                </Select>\n                <FormHelperText>Select no. of months</FormHelperText>\n            </FormControl>\n            </Grid>\n            <br />\n            <Grid item lg={6} md={7}>\n            <FacilityIcon post={myroom} bookvalues={bookdetails} setbookvalues={setbookdetails}/>\n            </Grid>\n            <br />\n           \n\n\n\n       \n        \n           \n\n            <Box mt={1} mb={2}>\n    <Grid container alignItems='center'>\n        <Grid item xs={4}>\n            <Typography variant='subtitle1'>\n                Apply Coupon\n            </Typography>\n            <Typography variant='body2' gutterBottom>\n                (Must be applied after you select all the details)\n            </Typography>\n        </Grid>\n                    <Grid item xs={7}>\n                            <FormControl variant=\"outlined\" noValidate>\n                            <InputLabel >Coupon Code</InputLabel>\n                            <OutlinedInput\n                                value={mycoupon}\n                                onInput={ e => oncouponChange(e)}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                    <Button onClick={e => {handlecoupon(e);}}>\n                                        Check\n                                    </Button>\n                                </InputAdornment>\n                                }\n                                labelWidth={100}\n                                />\n                            </FormControl>\n                    </Grid>\n            </Grid>\n\n\n\n\n\n\n        </Box>\n        <br />\n            <Typography variant=\"body1\">Price : {bookdetails.currency} {bookdetails.price}</Typography>\n            <br />\n\n            {\n                booked || mybooking.ended || mybooking.extended || props.profile.is_seller===true || mybooking.cancelled ? null : <Button variant=\"contained\" color=\"secondary\" onClick={(e) => {handleclick1(e);}}>\n                Extend Booking\n              </Button>\n            }\n          \n\n          <br />\n          <Typography>\n            Please note that the price will be increased due to transaction charges of payment gateway and taxes\n            </Typography>\n\n            \n\n              \n\n\n            </Grid>\n            </div>\n            </main>\n        </div>\n    )\n    }\n    else{\n      return <></>;\n    }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(Bookingextend);\n\n\n\n\n\n\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/profile_form.js",["1172","1173","1174","1175","1176","1177"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/myprofile.js",["1178","1179","1180","1181","1182"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/address_profile.js",["1183","1184","1185","1186"],"import React,{useState,useEffect} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\n\nimport Eror from './eror'\nimport Paper from '@material-ui/core/Paper';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst validationSchema = yup.object({\n  \n\n    address: yup\n    .string('Enter your Address')\n    .required('Address is required'),\n\n    city: yup\n    .string('Enter your City')\n    .required('City is required'),\n\n    state: yup\n    .string('Enter your State')\n    .required('State is required'),\n\n    country: yup\n    .string('Enter your Country')\n    .required('Country is required'),\n\n    pincode: yup\n    .string('Enter your Pincode')\n    .required('Pincode is required'),\n\n    landmark:yup\n    .string('Enter your Landmark')\n    .required('Landmark is required'),\n\n    \n});\n\n\n  const useStyles = makeStyles((theme) => ({\n    \n  \n \n    // necessary for content to be below app bar\n    myclass: {\n        padding:'5%',\n        overflowX:'hidden'\n       \n    },\n    bgclass: {\n      backgroundColor:`${process.env.REACT_APP_BG_COLOR}`,\n      height:'100vh',\n      \n   \n      overflowX:'hidden'\n    },\n    myclass1: {\n      padding:'30px',\n      overflowX:'hidden',\n  },\n    imageclass: {\n      width:'350px'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n    erorclass: {\n        width:'50%',\n        marginLeft:'25%',\n    },\n    gridclass: {\n      overflowX:'hidden'\n    },\n    papernewclass:{\n      padding:20,\n      [theme.breakpoints.up('sm')]: {\n        padding:30,\n      },\n     \n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n     \n    },\n  }));\n\nfunction AddressForm (props){\n    const classes = useStyles();\n\n    const [myaddress,setaddress] = useState({\n      address:'',\n      city:'',\n      state:'',\n      country:'',\n      landmark:'',\n      pincode:'',\n    })\n\n    const [edit,setedit] = useState(false)\n    const [redirect,setredirect] = useState(false)\n    const [error,seterror] = useState(false)\n   \n\n    useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n              if(props.profile)\n              {\n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcejkzff8wqhdq92/my_address/${props.profile.id}/`,config);\n              \n                setaddress({\n                  address:res.data.address,\n                  city:res.data.city,\n                  state:res.data.state,\n                  country:res.data.country,\n                  landmark:res.data.landmark,\n                  pincode:res.data.pincode,\n                })\n                setedit(true);\n                \n              \n              }\n                catch{\n      \n                }\n        }\n    }\n    \n    ,[props.profile])\n\n  \n\n  const formik = useFormik({\n    enableReinitialize:true,\n    initialValues: {\n      address:myaddress.address,\n      city:myaddress.city,\n      state:myaddress.state,\n      country:myaddress.country,\n      landmark:myaddress.landmark,\n      pincode:myaddress.pincode,\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      \n      \n      const config = {\n        headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n\n      const body = {\n          data:values\n      }\n\n      \n      if(edit===true)\n      {\n        try{const res = await axios.put(`${process.env.REACT_APP_API_URL}/sourcejkzff8wqhdq92/my_address/${props.profile.id}/`,body,config);\n              \n          setredirect(true)\n              \n              }\n                catch{\n               \n                  seterror(true)\n                }\n      }\n      else{\n        try{const res = await axios.post(`${process.env.REACT_APP_API_URL}/sourcejkzff8wqhdq92/my_address/`,body,config);\n              \n        setredirect(true)\n        \n              }\n                catch{\n               \n                  seterror(true)\n                }\n      }\n    },\n  });\n\n  if(redirect==true)\n  {\n    return <Redirect to='/dashboard/profile' />\n  }\n  if(error===true)\n  {\n\n      return <div className={classes.erorclass}><Eror error={'Cannot update address details'}/></div>\n  }\n\n  return (\n    <div className=\"formbgclass1\">\n    <div className={classes.myclass}>\n      \n        \n        <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.gridclass}\n        >\n\n<Paper elevation={5} className={classes.papernewclass}>\n      <form onSubmit={formik.handleSubmit}>\n\n      \n        \n       \n        <br />\n        <Grid item>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"address\"\n          name=\"address\"\n          label=\"Address\"\n          value={formik.values.address}\n          onChange={formik.handleChange}\n          error={formik.touched.address && Boolean(formik.errors.address)}\n          helperText={formik.touched.address && formik.errors.address}\n        />\n        </Grid>\n\n        <br />\n        <Grid item>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"city\"\n          name=\"city\"\n          label=\"City\"\n          value={formik.values.city}\n          onChange={formik.handleChange}\n          error={formik.touched.city && Boolean(formik.errors.city)}\n          helperText={formik.touched.city && formik.errors.city}\n        />\n        </Grid>\n\n        <br />\n        <Grid item>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"state\"\n          name=\"state\"\n          label=\"State\"\n          value={formik.values.state}\n          onChange={formik.handleChange}\n          error={formik.touched.state && Boolean(formik.errors.state)}\n          helperText={formik.touched.state && formik.errors.state}\n        />\n        </Grid>\n\n        <br />\n        <Grid item>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"landmark\"\n          name=\"landmark\"\n          label=\"Landmark\"\n          value={formik.values.landmark}\n          onChange={formik.handleChange}\n          error={formik.touched.landmark && Boolean(formik.errors.landmark)}\n          helperText={formik.touched.landmark && formik.errors.landmark}\n        />\n        </Grid>\n\n        <br />\n\n        <Grid item>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"country\"\n          name=\"country\"\n          label=\"country\"\n          value={formik.values.country}\n          onChange={formik.handleChange}\n          error={formik.touched.country && Boolean(formik.errors.country)}\n          helperText={formik.touched.country && formik.errors.country}\n        />\n        </Grid>\n\n        <br />\n        <Grid item>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"pincode\"\n          name=\"pincode\"\n          label=\"Pincode\"\n          value={formik.values.pincode}\n          onChange={formik.handleChange}\n          error={formik.touched.pincode && Boolean(formik.errors.pincode)}\n          helperText={formik.touched.pincode && formik.errors.pincode}\n        />\n        </Grid>\n \n\n        \n \n        <br />\n        \n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n        \n      </form>\n      </Paper>\n      </Grid>\n\n      \n    </div>\n    </div>\n  );\n}\n\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(AddressForm)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/myrooms.js",["1187","1188","1189","1190","1191"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bank_form.js",["1192","1193","1194","1195"],"import React,{useState,useEffect} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Eror from './eror'\nimport Paper from '@material-ui/core/Paper';\nimport './css/App.css';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst validationSchema = yup.object({\n  \n\n    account_no: yup\n    .string('Enter your Account no.')\n    .required('Account no. is required'),\n\n    bank_name: yup\n    .string('Enter your Bank name')\n    .required('Bank name is required'),\n\n    bank_address: yup\n    .string('Enter your Bank address')\n    .required('Bank address is required'),\n\n    IFSC_code: yup\n    .string('Enter your IFSC code')\n    .required('IFSC code is required'),\n\n    currency: yup\n    .string('Enter your currency')\n    .required('Currency is required'),\n\n    account_type:yup\n    .string('Enter your Account type:')\n    .required('Account type: is required'),\n\n    \n});\n\n\n  const useStyles = makeStyles((theme) => ({\n    \n  \n \n    // necessary for content to be below app bar\n    myclass: {\n      padding:'6%'\n     \n  },\n  \n  myclass1: {\n    padding:'30px'\n},\n    imageclass: {\n      width:'350px'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n    erorclass: {\n        width:'50%',\n        marginLeft:'25%',\n    },\n    papernewclass:{\n      padding:20,\n      [theme.breakpoints.up('sm')]: {\n        padding:30,\n      },\n     \n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n     \n    },\n  }));\n\nfunction BankForm (props){\n    const classes = useStyles();\n\n    const [mybank,setbank] = useState({\n      bank_name:'',\n      bank_address:'',\n      IFSC_code:'',\n      account_type:'',\n      currency:'',\n      account_no:'',\n    })\n\n    const [edit,setedit] = useState(false)\n    const [redirect,setredirect] = useState(false)\n    const [error,seterror] = useState(false)\n   \n\n    useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n              if(props.profile)\n              {\n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourceadbahdvjs218/my_bank_details/${props.profile.id}/`,config);\n              \n                setbank({\n                    bank_name:res.data.bank_name,\n                    bank_address:res.data.bank_address,\n                    IFSC_code:res.data.IFSC_code,\n                    account_type:res.data.account_type,\n                    currency:res.data.currency,\n                    account_no:res.data.account_no,\n                })\n                setedit(true);\n                \n              \n              }\n                catch{\n      \n                }\n        }\n    }\n    \n    ,[props.profile])\n\n  \n\n  const formik = useFormik({\n    enableReinitialize:true,\n    initialValues: {\n      bank_name:mybank.bank_name,\n      bank_address:mybank.bank_address,\n      IFSC_code:mybank.IFSC_code,\n      account_type:mybank.account_type,\n      currency:mybank.currency,\n      account_no:mybank.account_no,\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      \n      const config = {\n        headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n\n      const body = {\n          data:values\n      }\n\n      \n      if(edit===true)\n      {\n        try{const res = await axios.put(`${process.env.REACT_APP_API_URL}/sourceadbahdvjs218/my_bank_details/${props.profile.id}/`,body,config);\n              \n          setredirect(true)\n              \n              }\n                catch{\n               \n                  seterror(true)\n                }\n      }\n      else{\n        try{const res = await axios.post(`${process.env.REACT_APP_API_URL}/sourceadbahdvjs218/my_bank_details/`,body,config);\n              \n        setredirect(true)\n        \n              }\n                catch{\n                 \n                  seterror(true)\n                }\n      }\n    },\n  });\n\n  if(redirect==true)\n  {\n    return <Redirect to='/dashboard/profile' />\n  }\n  if(error===true)\n  {\n\n      return <div className={classes.erorclass}><Eror error={'Cannot update bank details'}/></div>\n  }\n\n  return (\n    <div className=\"formbgclass1\">\n    <div className={classes.myclass}>\n        \n        <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n\n<Paper elevation={5} className={classes.papernewclass}>\n      <form onSubmit={formik.handleSubmit}>\n        \n       \n        <br />\n        <Grid item>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"account_no\"\n          name=\"account_no\"\n          label=\"Account no.\"\n          value={formik.values.account_no}\n          onChange={formik.handleChange}\n          error={formik.touched.account_no && Boolean(formik.errors.account_no)}\n          helperText={formik.touched.account_no && formik.errors.account_no}\n        />\n        </Grid>\n\n        \n        <Grid item>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"bank_name\"\n          name=\"bank_name\"\n          label=\"Bank name\"\n          value={formik.values.bank_name}\n          onChange={formik.handleChange}\n          error={formik.touched.bank_name && Boolean(formik.errors.bank_name)}\n          helperText={formik.touched.bank_name && formik.errors.bank_name}\n        />\n        </Grid>\n\n        <Grid item>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"bank_address\"\n          name=\"bank_address\"\n          label=\"Bank address\"\n          value={formik.values.bank_address}\n          onChange={formik.handleChange}\n          error={formik.touched.bank_address && Boolean(formik.errors.bank_address)}\n          helperText={formik.touched.bank_address && formik.errors.bank_address}\n        />\n        </Grid>\n\n       \n        <Grid item>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"IFSC_code\"\n          name=\"IFSC_code\"\n          label=\"IFSC code\"\n          value={formik.values.IFSC_code}\n          onChange={formik.handleChange}\n          error={formik.touched.IFSC_code && Boolean(formik.errors.IFSC_code)}\n          helperText={formik.touched.IFSC_code && formik.errors.IFSC_code}\n        />\n        </Grid>\n\n      \n\n        <Grid item>\n            <FormControl className={classes.form}>\n                <InputLabel id=\"account_type\">Account type</InputLabel>\n                <Select\n                labelId=\"account_type\"\n                id=\"account_type\"\n                value={formik.values.account_type}\n                onChange={(e) => formik.setFieldValue('account_type',e.target.value)}\n                error={formik.touched.account_type && Boolean(formik.errors.account_type)}\n                helperText={formik.touched.account_type && formik.errors.account_type}\n                >\n                <MenuItem value={'current'}>current</MenuItem>\n                <MenuItem value={'savings'}>savings</MenuItem>\n                </Select>\n            </FormControl>\n        </Grid>\n \n\n        <Grid item>\n            <FormControl className={classes.form}>\n                <InputLabel id=\"currency\">Currency</InputLabel>\n                <Select\n                labelId=\"currency\"\n                id=\"currency\"\n                value={formik.values.currency}\n                onChange={(e) => formik.setFieldValue('currency',e.target.value)}\n                error={formik.touched.currency && Boolean(formik.errors.currency)}\n                helperText={formik.touched.currency && formik.errors.currency}\n                >\n                <MenuItem value={'₹ INR'}>₹ (Indian rupees)</MenuItem>\n                </Select>\n            </FormControl>\n        </Grid>\n \n        <br />\n        <br />\n        \n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n      </form>\n      </Paper>\n      </Grid>\n    </div>\n    </div>\n  );\n}\n\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(BankForm)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/myshops.js",["1196","1197","1198","1199","1200"],"import React,{ useState} from 'react'\nimport {withStyles,makeStyles } from '@material-ui/core/styles';\nimport Dashboarddrawer from '../hocs/layout2'\nimport axios from 'axios'\nimport Eror from '../components/eror'\nimport Grid from '@material-ui/core/Grid';\n\n\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\n\nimport ShopCard from './shop_card'\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\n\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\nimport Load1 from './Spinner';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\n\n\nconst drawerWidth = 240;\n\nconst StyledFabField = withStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    color:`${process.env.REACT_APP_COLOR}`,\n    \n    '& .MuiFab-primary':{\n      backgroundColor:`${process.env.REACT_APP_COLOR}`,\n    },\n    '& .MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n      color:`${process.env.REACT_APP_COLOR}`,\n    },\n    '& .MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\n      top: theme.spacing(2),\n      left: theme.spacing(2),\n      color:`${process.env.REACT_APP_COLOR}`,\n    },\n  }\n}))(SpeedDial);\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  textclass:{\n    float: 'left',\n  },\n  table: {\n    width:'30%'\n  },\n  head: {\n    fontSize:'20px'\n  },\n  row: {\n    fontSize:'20px'\n  },\n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    \n  },\n  myclass: {\n \n\n  },\n  speedDial: {\n    position: 'absolute',\n    '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n    '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\n      top: theme.spacing(2),\n      left: theme.spacing(2),\n    },\n  },\n  exampleWrapper: {\n    position: 'relative',\n    marginTop: theme.spacing(3),\n    height: 100,\n  },\n}));\n  \n\nfunction Myshops(props) {\n\n    const [error,seterror] = useState(false)\n    const [myshops,setshops] = useState()\n\n    const [hidden, setHidden] = React.useState(false);\n    const [open, setOpen] = React.useState(false);\n    const [direction, setDirection] = React.useState('up');\n    const [redirect, setRedirect] = React.useState(false)\n\n    const actions = [\n   \n      { icon: <CreateOutlinedIcon />, name: 'Add a room' },\n    ];\n  \n   \n\n    React.useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n              if(props.isAuthenticated)\n              {\n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcekfhkt274fs/my_shops/`,config);\n              \n                setshops(res.data)\n               \n              \n              }\n                catch{\n      \n                }\n                \n              \n        }\n    }\n    \n    ,[props.isAuthenticated])\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n  \n    const handleOpen = () => {\n      setOpen(true);\n    };\n    const handleredirect = () => {\n      setRedirect(true);\n    };\n\n\n\n    const classes = useStyles();\n\n    if(props.isAuthenticated===false)\n    {\n      return <Redirect to=\"/login\" />;\n    }\n\n    \n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error' /></div>\n    }\n\n    if(redirect)\n    {\n      return <Redirect  to={{\n        pathname: `/dashboard/my_shops/edit`,\n        state: { property_id: null }\n      }} style={{textDecoration:'none'}} />\n    }\n\n    if(props.isAuthenticated && myshops){\n    \n    \n    return (\n        <div>\n             <Dashboarddrawer/>\n            <main className={classes.content}>\n            <div className={classes.toolbar} />\n\n          \n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.myclass}\n            spacing={3}\n            >\n\n            {\n                myshops.map(shop =>\n                    {\n                        return <Grid item><ShopCard myshop={shop} /></Grid>;\n                    })\n            }\n           \n            </Grid>\n\n            <div className={classes.exampleWrapper}>\n        <StyledFabField\n          ariaLabel=\"SpeedDial example\"\n          className={classes.speedDial}\n          hidden={hidden}\n          icon={<SpeedDialIcon />}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          open={open}\n          direction={direction}\n        >\n          {actions.map((action) => (\n            <SpeedDialAction\n              key={action.name}\n              icon={action.icon}\n              tooltipTitle={action.name}\n              onClick={handleredirect}\n            />\n          ))}\n        </StyledFabField>\n      </div>\n            \n            \n\n            \n            </main>\n        </div>\n    )\n}\nelse{\n  return <div><Load1 loading={true} /></div>\n}\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(Myshops)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/confirmdelete.js",["1201","1202"],"import React,{ useState} from 'react'\nimport {makeStyles } from '@material-ui/core/styles';\nimport Dashboarddrawer from '../hocs/layout2'\nimport axios from 'axios'\nimport Eror from '../components/eror'\n\n\n\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {Redirect,Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport Typography from '@material-ui/core/Typography';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  textclass:{\n    float: 'left',\n  },\n  table: {\n    width:'30%'\n  },\n  head: {\n    fontSize:'20px'\n  },\n  row: {\n    fontSize:'20px'\n  },\n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    \n  },\n}));\n  \n\nfunction ConfirmDelete(props) {\n\n    const [error,seterror] = useState(false)\n    const [loading,setloading] = useState(false)\n    const [redirect,setredirect] = useState(false)\n\n    const roomid = props.location.state.property_id;\n    const url = props.location.state.url;\n    const url1 = props.location.state.url1;\n   \n\n   \n\n\n    const classes = useStyles();\n\n    const handledelete = async (e) => {\n        e.preventDefault();\n        setloading(true)\n\n        const config = {\n            headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\n            },\n          };\n          \n          if(props.isAuthenticated)\n          {\n            try{const res = await axios.delete(`${process.env.REACT_APP_API_URL}/${url}/${roomid}/`,config);\n            setloading(false)\n            setredirect(true)\n            \n            \n          \n          }\n            catch{\n                setloading(false)\n                seterror(true)\n  \n            }\n\n    }\n}\n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error while deleting!' /></div>\n    }\n    if(redirect===true)\n    {\n        return <Redirect to={`/dashboard/${url1}`} />;\n    }\n\n    if(props.profile){\n    \n    \n    return (\n        <div>\n             <Dashboarddrawer/>\n             <Backdrop className={classes.backdrop} open={loading}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n            <main className={classes.content}>\n            <div className={classes.toolbar} />\n\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Confirm delete ?\n          </Typography>\n\n          <Button color=\"error\" onClick={e => {handledelete(e)}}>\n              Delete\n          </Button>\n          <Link to={`/dashboard/${url1}`} >\n              <Button>\n                  Cancel\n              </Button>\n          </Link>\n            \n            \n\n            \n            </main>\n        </div>\n    )\n}\nelse{\n  return <div></div>\n}\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(ConfirmDelete)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/pausebooking.js",["1203","1204"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/myapartments.js",["1205","1206","1207","1208","1209"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/givereviews.js",["1210","1211","1212","1213","1214","1215","1216","1217"],"import React,{useState} from 'react';\n\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport Rating from '@material-ui/lab/Rating';\nimport Eror from './eror'\nimport Typography from '@material-ui/core/Typography';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Add from '../addroom.png';\nimport './css/App.css';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst FILE_SIZE = 1600 * 1024;\nconst SUPPORTED_FORMATS = [\n  \"image/jpg\",\n  \"image/jpeg\",\n  \"image/png\"\n];\n\nconst validationSchema = yup.object({\n  review: yup\n  .string('Enter your Room name')\n  .required('Room name is required'),\n\n  rating: yup\n  .number().required(''),\n\n \n\n\n\n    \n\n    \n});\n\nconst useStyles = makeStyles(theme => ({\n    myclass: {\n        paddingTop:'10%'\n    },\n    imageclass: {\n      overflow: 'hidden',\n        width: '85px',\n        height: '85px',\n        position:'relative',\n      borderRadius:'50%',\n      [theme.breakpoints.up('sm')]: {\n        borderRadius:'50%',\n        overflow: 'hidden',\n        width: '100px',\n        height: '100px',\n        position:'relative',\n      },\n      [theme.breakpoints.up('md')]: {\n        borderRadius:'50%',\n        overflow: 'hidden',\n        width: '200px',\n        height: '200px',\n        position:'relative',\n      },\n      marginRight:'1%',\n      marginLeft:'1%',\n   \n    },\n    erorclass: {\n      width:'50%',\n      marginLeft:'25%',\n  },\n  papernewclass:{\n    padding:20,\n    [theme.breakpoints.up('sm')]: {\n      padding:30,\n    },\n   \n  },\n  buttonclass:{\n    padding:0,\n    borderRadius:'70%',\n    \n    },\n}));\n\nfunction ReviewForm (props){\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [myreview,setreview] = useState({\n      rating:0,\n      review:'',\n      seller_rating:0,\n      seller_review:'',\n      photo1:'',\n      file1:Add,\n      photo2:'',\n      file2:Add,\n      photo3:'',\n      file3:Add,\n    })\n\n    \n    const [redirect,setredirect] = useState(false)\n    const [error,seterror] = useState(false)\n    const hiddenFileInput1 = React.useRef(null);\n    const hiddenFileInput2 = React.useRef(null);\n    const hiddenFileInput3 = React.useRef(null);\n\n   \n\n    const [loading,setloading] = React.useState(false);\n\n    const type = props.location.state.property_id;\n    const bookingid = props.match.params.bookingid;\n\n    \n\n  \n\n  const formik = useFormik({\n    enableReinitialize:true,\n    initialValues: {\n      input1:false,\n      input2:false,\n      input3:false,\n        rating:myreview.rating,\n        review:myreview.review,\n        seller_rating:myreview.seller_rating,\n        seller_review:myreview.seller_review,\n        photo1:myreview.photo1,\n        photo2:myreview.photo2,\n        photo3:myreview.photo3,\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      setloading(true);\n      let form_data = new FormData();\n      form_data.append('rating',values.rating)\n      form_data.append('review',values.review)\n      form_data.append('seller_rating',values.seller_rating)\n      form_data.append('seller_review',values.seller_review)\n      form_data.append('photo1',values.photo1)\n      form_data.append('photo2',values.photo2)\n      form_data.append('photo3',values.photo3)\n      form_data.append('bookingid',bookingid)\n      form_data.append('type',type)\n     \n      const config = {\n        headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n\n      \n      \n      \n        try{const res = await axios.post(`${process.env.REACT_APP_API_URL}/sourcebahsda292bidua92/reviews/`,form_data,config);\n            setloading(false)  \n        setredirect(true)\n\n              }\n                catch{\n                  setloading(false)\n              \n                  seterror(true)\n                }\n      }\n    \n  });\n\n\n\nconst Filevalidation3 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 3072) {\n              alert(\n                \"File too Big, please select a file less than 5mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo3',file1);\n            setreview({...myreview,file3: URL.createObjectURL(file1),photo3:file1});\n          }\n      \n  \n}\n\nconst Filevalidation2 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 3072) {\n              alert(\n                \"File too Big, please select a file less than 5mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo2',file1);\n            setreview({...myreview,file2: URL.createObjectURL(file1),photo2:file1});\n          }\n      \n  \n}\n\nconst Filevalidation1 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 3072) {\n              alert(\n                \"File too Big, please select a file less than 5mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo1',file1);\n            setreview({...myreview,file1: URL.createObjectURL(file1),photo1:file1});\n          }\n      \n  \n}\n\n\n  \n\n  if(redirect==true)\n  {\n    return <Redirect to='/dashboard/recentbookings' />\n  }\n  if(error===true)\n  {\n    return <div className={classes.erorclass}><Eror error={'Unable to give feedback!'} /></div>;\n  }\n\n  return (\n    <div className=\"formbgclass\">\n    <div className={classes.myclass}>\n            <Backdrop className={classes.backdrop} open={loading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n        \n\n       \n        <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n           <Paper elevation={5} className={classes.papernewclass}>\n      <form onSubmit={formik.handleSubmit}>\n        \n        <br />\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n\n      <Grid item className={classes.imageclass}>\n\n        <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput1.current.click();}}>\n          <img src={myreview.file1} className={classes.imageclass}/>\n          </Button>\n        \n          <input type='file'  ref={hiddenFileInput1} style={{display:'none'}}  id='photo1' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation1(event.target.files[0]);}} />\n        </Grid>\n\n        <Grid item className={classes.imageclass}>\n\n        <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput2.current.click();}}>\n          <img src={myreview.file2} className={classes.imageclass}/>\n          </Button>\n        \n          <input type='file'  ref={hiddenFileInput2} style={{display:'none'}}  id='photo2' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n  Filevalidation2(event.target.files[0]);}}/> \n        </Grid>\n\n        <Grid item className={classes.imageclass}>\n\n        <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput3.current.click();}}>\n          <img src={myreview.file3} className={classes.imageclass}/>\n          </Button>\n        \n          <input type='file'  ref={hiddenFileInput3} style={{display:'none'}}  id='photo3' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n  Filevalidation3(event.target.files[0]);}}/> \n        </Grid>\n\n        </Grid>\n        <br />\n\n        <Grid item>\n        <Rating\n          name=\"rating\"\n          value={formik.values.rating}\n          onChange={(event, newValue) => {\n            formik.setFieldValue('rating',newValue);\n          }}\n        />\n        </Grid>\n\n\n        <br />\n          <Grid item>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={3}\n          id=\"review\"\n          name=\"review\"\n          label=\"Write Review\"\n          value={formik.values.review}\n          onChange={formik.handleChange}\n          error={formik.touched.review && Boolean(formik.errors.review)}\n          helperText={formik.touched.review && formik.errors.review}\n        />\n        </Grid>\n        <br />\n\n        <Grid item>\n          <Typography variant=\"h5\" component=\"h3\" className={classes.newclass}>\n            Seller Feedback (optional)\n          </Typography>\n        </Grid>\n        <br />\n\n        <Grid item>\n        <Rating\n          name=\"seller_rating\"\n          value={formik.values.seller_rating}\n          onChange={(event, newValue1) => {\n            formik.setFieldValue('seller_rating',newValue1);\n          }}\n        />\n        </Grid>\n\n\n        <br />\n\n        <Grid item>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={3}\n          id=\"seller_review\"\n          name=\"seller_review\"\n          label=\"Seller Review\"\n          value={formik.values.seller_review}\n          onChange={formik.handleChange}\n          error={formik.touched.seller_review && Boolean(formik.errors.seller_review)}\n          helperText={formik.touched.seller_review && formik.errors.seller_review}\n        />\n        </Grid>\n       \n        <br />\n        \n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n      </form>\n      </Paper>\n      </Grid>\n      </div> \n    </div>\n  );\n}\n\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(ReviewForm)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/analytics.js",["1218","1219","1220","1221","1222","1223","1224"],"import React,{ useState, useEffect} from 'react'\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Dashboarddrawer from '../hocs/layout2'\nimport axios from 'axios'\nimport Eror from '../components/eror'\nimport Grid from '@material-ui/core/Grid';\n\nimport {Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\n\n\nimport SellerAnalytics from './selleranalytics'\n\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  textclass:{\n    float: 'left',\n  },\n  table: {\n    width:'30%'\n  },\n  head: {\n    fontSize:'20px'\n  },\n  row: {\n    fontSize:'20px'\n  },\n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    \n  },\n  myclass: {\n      \n      width:'60vw'\n  },\n}));\n  \n\nfunction Analytics(props) {\n\n    const [error,seterror] = useState(false)\n    const [bookings,setbookings]  = useState([])\n    const [shopbookings,setshopbookings] = useState([])\n    const [apartmentbookings,setapartmentbookings] = useState([])\n    const [bank,setbank] = useState()\n    const [newredirect,setnewredirect] = useState(false);\n\n    React.useEffect(() => {\n      if(props.profile)\n      {\n        if(!props.profile.profile_completed || !props.profile.bank_completed || !props.profile.address_completed)\n        {\n          setnewredirect(true);\n        }\n        else{\n          setnewredirect(false);\n        }\n      }\n      else{\n        setnewredirect(false);\n      }\n    },[props.profile])\n\n    \n\n\n   \n\n    React.useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n\n              \n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcehjbda983290whjba/room/book/`,config,config);\n            \n             setbookings(res.data)\n              \n              }\n                catch{\n      \n                }\n\n                try{const res1 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcehdawnajk289uadhq/shop/book/`,config,config);\n               \n                setshopbookings(res1.data)\n                 \n                 }\n                   catch{\n         \n                   }\n\n                   try{const res2 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcensinejfcdajewcn29210/apartment/book/`,config,config);\n                  \n                   setapartmentbookings(res2.data)\n                    \n                    }\n                      catch{\n            \n                      }\n                \n        }\n    \n    ,[])\n\n    React.useEffect(async () => {\n\n        const config = {\n            headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\n            },\n          };\n          if(props.profile){\n        if(props.profile.is_seller===true){\n            try{const res1 = await axios.get(`${process.env.REACT_APP_API_URL}/sourceadbahdvjs218/my_bank_details/${props.profile.id}/`,config);\n          \n            setbank(res1.data)\n          \n          \n          }\n            catch{\n  \n            }\n           \n          }}\n    },[props.profile])\n\n\n    \n\n\n    const classes = useStyles();\n\n    \n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error' /></div>\n    }\n    if(newredirect==true)\n    {\n      return <Redirect to={{\n        pathname: '/dashboard/profile',\n        state: { property_id: true }\n      }}/> ;\n    }\n\n    if(props.isAuthenticated===false)\n    {\n      return <Redirect to=\"/login\" />;\n    }\n\n    if(props.profile && bookings && shopbookings && apartmentbookings){\n    \n    \n    return (\n        <div>\n             <Dashboarddrawer/>\n            <main className={classes.content}>\n            <div className={classes.toolbar} />\n\n            \n            <Grid\n  container\n  direction=\"column\"\n  justify=\"center\"\n  alignItems=\"center\"\n>\n\n            {\n                props.profile.is_seller ? <Grid item><SellerAnalytics roombookings={bookings} bank={bank} shopbookings={shopbookings} apartmentbookings={apartmentbookings} /></Grid> \n                : null\n            }\n            </Grid>\n\n            \n            </main>\n        </div>\n    )\n}\nelse{\n  return <div></div>\n}\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(Analytics)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/seller_reviews.js",["1225","1226","1227"],"import React,{ useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dashboarddrawer from '../hocs/layout2'\nimport axios from 'axios'\nimport Eror from '../components/eror'\nimport Grid from '@material-ui/core/Grid';\n\n\nimport {connect} from 'react-redux'\n\n\n\nimport SellerReviews from './seller_rating_and_reviews'\nimport Load1 from './Spinner';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n      padding: theme.spacing(3),\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  textclass:{\n    float: 'left',\n  },\n  table: {\n    width:'30%'\n  },\n  head: {\n    fontSize:'20px'\n  },\n  row: {\n    fontSize:'20px'\n  },\n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    \n  },\n  myclass: {\n      \n      width:'90vw',\n      [theme.breakpoints.up('sm')]: {\n        width:'60vw',\n      },\n  },\n}));\n  \n\nfunction MyReviews(props) {\n\n    const [error,seterror] = useState(false)\n    const [myreviews,setreviews] = useState()\n\n    const [params1,setparams] = useState({\n        page:1,\n        ordering:'-rating'\n      })\n    \n   \n\n    React.useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n              if(props.isAuthenticated && props.profile)\n              \n              {\n               \n                try{\n                    const res1 = await axios.get(`${process.env.REACT_APP_API_URL}/sourceuserjcnssjwhd9329hdw/seller/reviews/`,{\n                      params:{\n                        seller_id:props.profile.id,\n                        page:params1.page,\n                        ordering:params1.ordering,\n                      },\n                      config:config\n                    });\n                    \n                   \n                      \n                        setreviews(res1.data.results);\n                        \n                        \n                    }  catch (err) {\n                      // Handle Error Here\n                      console.error(err);\n                  }\n                \n              \n        }\n    }\n    \n    ,[props.isAuthenticated,props.profile,params1])\n\n\n    const classes = useStyles();\n\n    \n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error' /></div>\n    }\n\n    if(props.isAuthenticated && myreviews){\n    \n    \n    return (\n        <div>\n             <Dashboarddrawer/>\n            <main className={classes.content}>\n            <div className={classes.toolbar} />\n\n            <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n            <Grid item>\n            <div className={classes.myclass}>\n            <SellerReviews reviews={myreviews} params={params1} setparams={setparams}/>\n            </div>\n            </Grid>\n\n            </Grid>\n\n            \n            </main>\n        </div>\n    )\n}\nelse{\n  return <div><Load1 loading={true} /></div>\n}\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(MyReviews)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mycomplaints.js",["1228","1229","1230","1231","1232","1233"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mycomplaints_shop.js",["1234","1235","1236","1237","1238","1239","1240"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mycomplaints_apartment.js",["1241","1242","1243","1244","1245","1246","1247"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mycoupons.js",["1248","1249","1250","1251","1252"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Signup.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/RoomDetails.js",["1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/redux/auth/store.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/room_form.js",["1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321","1322","1323"],"import React,{useState,useEffect} from 'react';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport Eror from './eror'\nimport MapForm from './map_form'\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\n\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport './css/App.css';\nimport Add from '../addroom.png';\nimport Rules from './roomrules';\n\nconst FILE_SIZE = 1600 * 1024;\nconst SUPPORTED_FORMATS = [\n  \"image/jpg\",\n  \"image/jpeg\",\n  \"image/png\"\n];\n\n\nconst SUPPORTED_FORMATS1 = [\n  \"application/pdf\"\n];\n\nconst validationSchema = yup.object({\n\n\n  \n  title: yup\n  .string('Enter your Room name')\n  .required('Room name is required'),\n  \n  wifi: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_wifi: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_wifi: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  house_TV: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_TV: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_house_TV: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  room_TV: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_roomTV: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_room_TV: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  house_refridgerator: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  room_refridgerator: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_roomrefridgerator: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_room_refridgerator: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  purified_water: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_purified_water: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_purified_water: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  AC: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_AC: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_AC: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  geyser: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_geyser: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_geyser: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cooler: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_cooler: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_cooler: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  breakfast: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_breakfast: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_breakfast: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  lunch: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_lunch: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_lunch: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  dinner: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_dinner: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_dinner: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  laundry: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_laundry: yup\n  .number().integer('please enter integer'),\n  \n  \n  iron: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_iron: yup\n  .number().integer('please enter integer'),\n  \n  \n  room_cleaning: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_cleaning: yup\n  .number().integer('please enter integer'),\n  \n  \n  capacity: yup\n  .number().integer('please enter integer'),\n  \n  windows: yup\n  .number().integer('please enter integer'),\n  \n  floor_no: yup\n  .number().integer('please enter integer'),\n  \n  cost_electricity: yup\n  .number().integer('please enter integer'),\n  \n  \n  cost_water: yup\n  .number().integer('please enter integer'),\n  \n  \n  category: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  city: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  state: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  country: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  separate_washroom: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  location: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  landmark: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  pincode: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n\n  gender: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  length: yup\n  .number().integer('please enter integer'),\n  \n  \n  breadth: yup\n  .number().integer('please enter integer'),\n  \n  \n  \n  height: yup\n  .number().integer('please enter integer'),\n  \n  \n  fans: yup\n  .number().integer('please enter integer'),\n  \n  bed_type: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  description: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  furniture: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  building_guard: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cctv_building: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  power_backup: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  veg_food: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  nonveg_food: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  seller_price: yup\n  .number().integer('please enter integer'),\n  \n  \n  owner_discount: yup\n  .number().integer('please enter integer'),\n  \n  guest_allowed: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  longitude: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  latitude: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  balcony: yup\n  .number().integer('please enter integer'),\n  \n  distance1: yup\n  .number().required('please enter this'),\n  \n  distance2: yup\n  .number().required('please enter this'),\n  \n  nearby_station1: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  nearby_station2: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n \n\n    \n});\n\nconst useStyles = makeStyles(theme => ({\n  \n    myclass: {\n       \n        [theme.breakpoints.up('md')]: {\n          paddingTop:'10%',\n        },\n    },\n    imageclass: {\n      overflow: 'hidden',\n        width: '85px',\n        height: '85px',\n        position:'relative',\n      borderRadius:'50%',\n      [theme.breakpoints.up('sm')]: {\n        borderRadius:'50%',\n        overflow: 'hidden',\n        width: '100px',\n        height: '100px',\n        position:'relative',\n      },\n      [theme.breakpoints.up('md')]: {\n        borderRadius:'50%',\n        overflow: 'hidden',\n        width: '200px',\n        height: '200px',\n        position:'relative',\n      },\n      marginRight:'1%',\n      marginLeft:'1%',\n   \n    },\n    erorclass: {\n      width:'50%',\n      marginLeft:'25%',\n  },\n  buttonclass:{\n    padding:0,\n    borderRadius:'70%',\n    \n    },\n    \n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n     \n    },\n    papernewclass:{\n      padding:25,\n      [theme.breakpoints.up('sm')]: {\n        padding:30,\n      },\n     \n    },\n    nowclass1:{\n      width: 'inherit'\n    }\n  }));\n\nfunction RoomForm (props){\n  const theme = useTheme();\n    const classes = useStyles();\n    const hiddenFileInput1 = React.useRef(null);\n    const hiddenFileInput2 = React.useRef(null);\n    const hiddenFileInput3 = React.useRef(null);\n    const hiddenFileInput4 = React.useRef(null);\n    const hiddenFileInput5 = React.useRef(null);\n\n    const [openmodal, setopenmodal] = React.useState(true);\n\n      const handleOpenmodal = () => {\n        setopenmodal(true);\n      };\n\n      const closemodal = () => {\n        setopenmodal(false);\n      };\n    \n\n   \n    const [newredirect,setnewredirect] = React.useState(false);\n    const [myroom,setroom] = useState({\n      wifi:'',\n      cost_wifi:'',\n      removable_wifi:false,\n\n      house_TV:'',\n      cost_TV:'',\n      removable_house_TV:false,\n\n      room_TV:'',\n      cost_roomTV:'',\n      removable_room_TV:false,\n\n      house_refridgerator:'',\n      cost_refridgerator:'',\n      removable_house_refridgerator:false,\n\n      room_refridgerator:'',\n      cost_roomrefridgerator:'',\n      removable_room_refridgerator:false,\n\n      purified_water:'',\n      cost_purified_water:'',\n      removable_purified_water:false,\n\n      AC:'',\n      cost_AC:'',\n      removable_AC:'',\n\n      iron:'',\n      cost_iron:0,\n\n      laundry:'',\n      cost_laundry:0,\n\n      gender:'Any',\n\n      geyser:'',\n      cost_geyser:'',\n      removable_geyser:false,\n\n      cooler:'',\n      cost_cooler:'',\n      removable_cooler:false,\n\n      breakfast:'',\n      cost_breakfast:'',\n      removable_breakfast:false,\n\n      lunch:'',\n      cost_lunch:'',\n      removable_lunch:false,\n\n      dinner:'',\n      cost_dinner:'',\n      removable_dinner:false,\n\n      cost_electricity:'',\n      cost_water:'',\n\n      room_cleaning:'',\n      cost_cleaning:'',\n\n      capacity:'',\n      balcony:0,\n      separate_washroom:'',\n      title:'',\n      seller_price:'',\n      owner_discount:0,\n      bed_type:'',\n      length:'',\n      breadth:'',\n      height:'',\n      building_guard:'',\n      category:'',\n      cctv_building:'',\n      windows:0,\n      power_backup:'',\n      furniture:'',\n      facility:'',\n      description:'',\n      fans:1,\n      floor_no:0,\n\n\n      veg_food:'',\n      nonveg_food:'',\n      food_policy:'',\n\n      city:'',\n      state:'',\n      country:'',\n      landmark:'',\n      longitude:'',\n      latitude:'',\n      location:'',\n      pincode:'',\n\n      nearby_station1:'',\n      nearby_station2:'',\n      distance1:0,\n      distance2:0,\n\n      guest_allowed:'',\n      guest_policy:'',\n\n      room_policy:'',\n\n      address_proof:'',\n\n      photo1:'',\n      photo2:'',\n      photo3:'',\n      photo4:'',\n      photo5:'',\n      file1:Add,\n      file2:Add,\n      file3:Add,\n      file4:Add,\n      file5:Add,\n    })\n\n    const [edit,setedit] = useState(false)\n    const [redirect,setredirect] = useState(false)\n    const [error,seterror] = useState(false)\n    const roomid = props.location.state.property_id;\n    const [load,setload] = useState(false)\n   \n\n    useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n              if(props.profile && roomid)\n              {\n                if(props.profile.is_seller && props.profile.profile_completed && props.profile.bank_completed && props.profile.address_completed){\n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcewdsfdaegds/my_rooms/${roomid}/`,config);\n               \n                setroom({\n                  wifi:res.data.wifi,\n                  cost_wifi:res.data.cost_wifi,\n                  removable_wifi:res.data.removable_wifi,\n\n                  house_TV:res.data.house_TV,\n                  cost_TV:res.data.cost_TV,\n                  removable_house_TV:res.data.removable_house_TV,\n\n                  room_TV:res.data.room_TV,\n                  cost_roomTV:res.data.cost_roomTV,\n                  removable_room_TV:res.data.removable_room_TV,\n\n                  house_refridgerator:res.data.house_refridgerator,\n                  cost_refridgerator:res.data.cost_refridgerator,\n                  removable_house_refridgerator:res.data.removable_house_refridgerator,\n\n                  room_refridgerator:res.data.room_refridgerator,\n                  cost_roomrefridgerator:res.data.cost_roomrefridgerator,\n                  removable_room_refridgerator:res.data.removable_room_refridgerator,\n\n                  purified_water:res.data.purified_water,\n                  cost_purified_water:res.data.cost_purified_water,\n                  removable_purified_water:res.data.removable_purified_water,\n\n                  AC:res.data.AC,\n                  cost_AC:res.data.cost_AC,\n                  removable_AC:res.data.removable_AC,\n\n                  gender:res.data.gender,\n\n                  iron:res.data.iron,\n                  cost_iron:res.data.cost_iron,\n\n                  laundry:res.data.laundry,\n                  cost_laundry:res.data.cost_laundry,\n\n                  geyser:res.data.geyser,\n                  cost_geyser:res.data.cost_geyser,\n                  removable_geyser:res.data.removable_geyser,\n\n                  cooler:res.data.cooler,\n                  cost_cooler:res.data.cost_cooler,\n                  removable_cooler:res.data.removable_cooler,\n\n                  breakfast:res.data.breakfast,\n                  cost_breakfast:res.data.cost_breakfast,\n                  removable_breakfast:res.data.removable_breakfast,\n\n                  lunch:res.data.lunch,\n                  cost_lunch:res.data.cost_lunch,\n                  removable_lunch:res.data.removable_lunch,\n\n                  dinner:res.data.dinner,\n                  cost_dinner:res.data.cost_dinner,\n                  removable_dinner:res.data.removable_dinner,\n\n                  cost_electricity:res.data.cost_electricity,\n                  cost_water:res.data.cost_water,\n\n                  room_cleaning:res.data.room_cleaning,\n                  cost_cleaning:res.data.cost_cleaning,\n\n                  capacity:res.data.capacity,\n                  balcony:res.data.balcony,\n                  separate_washroom:res.data.separate_washroom,\n                  title:res.data.title,\n                  seller_price:res.data.seller_price,\n                  owner_discount:res.data.owner_discount,\n                  bed_type:res.data.bed_type,\n                  length:res.data.length,\n                  breadth:res.data.breadth,\n                  height:res.data.height,\n                  building_guard:res.data.building_guard,\n                  category:res.data.category,\n                  cctv_building:res.data.cctv_building,\n                  windows:res.data.windows,\n                  power_backup:res.data.power_backup,\n                  furniture:res.data.furniture,\n                  facility:res.data.facility,\n                  description:res.data.description,\n                  fans:res.data.fans,\n                  floor_no:res.data.floor_no,\n\n\n                  veg_food:res.data.veg_food,\n                  nonveg_food:res.data.nonveg_food,\n                  food_policy:res.data.food_policy,\n\n                  city:res.data.city,\n                  state:res.data.state,\n                  country:res.data.country,\n                  landmark:res.data.landmark,\n                  longitude:res.data.longitude,\n                  latitude:res.data.latitude,\n                  location:res.data.location,\n                  pincode:res.data.pincode,\n\n                  nearby_station1:res.data.nearby_station1,\n                  nearby_station2:res.data.nearby_station2,\n                  distance1:res.data.distance1,\n                  distance2:res.data.distance2,\n\n                  guest_allowed:res.data.guest_allowed,\n                  guest_policy:res.data.guest_policy,\n\n                  room_policy:res.data.room_policy,\n\n                  address_proof:res.data.address_proof,\n\n                  photo1:res.data.photo1,\n                  photo2:res.data.photo2,\n                  photo3:res.data.photo3,\n                  photo4:res.data.photo4,\n                  photo5:res.data.photo5,\n\n                  file1:res.data.photo1,\n                  file2:res.data.photo2,\n                  file3:res.data.photo3,\n                  file4:res.data.photo4,\n                  file5:res.data.photo5,\n                })\n                setedit(true);\n                \n              \n              }\n                catch{\n\n                  seterror(true)\n      \n                }\n              }\n              else{\n                setnewredirect(true);\n              }\n        }\n    }\n    \n    ,[props.profile,roomid])\n\n    \n\n  \n\n  const formik = useFormik({\n    enableReinitialize:true,\n    initialValues: {\n      edit:edit,\n      \n      wifi:myroom.wifi,\n      cost_wifi:myroom.cost_wifi,\n      removable_wifi:myroom.removable_wifi,\n\n      house_TV:myroom.house_TV,\n      cost_TV:myroom.cost_TV,\n      removable_house_TV:myroom.removable_house_TV,\n\n      gender:myroom.gender,\n\n      room_TV:myroom.room_TV,\n      cost_roomTV:myroom.cost_roomTV,\n      removable_room_TV:myroom.removable_room_TV,\n\n      house_refridgerator:myroom.house_refridgerator,\n      cost_refridgerator:myroom.cost_refridgerator,\n      removable_house_refridgerator:myroom.removable_house_refridgerator,\n\n      room_refridgerator:myroom.room_refridgerator,\n      cost_roomrefridgerator:myroom.cost_roomrefridgerator,\n      removable_room_refridgerator:myroom.removable_room_refridgerator,\n\n      purified_water:myroom.purified_water,\n      cost_purified_water:myroom.cost_purified_water,\n      removable_purified_water:myroom.removable_purified_water,\n\n      AC:myroom.AC,\n      cost_AC:myroom.cost_AC,\n      removable_AC:myroom.removable_AC,\n\n      iron:myroom.iron,\n      cost_iron:myroom.cost_iron,\n\n      laundry:myroom.laundry,\n      cost_laundry:myroom.cost_laundry,\n\n      geyser:myroom.geyser,\n      cost_geyser:myroom.cost_geyser,\n      removable_geyser:myroom.removable_geyser,\n\n      cooler:myroom.cooler,\n      cost_cooler:myroom.cost_cooler,\n      removable_cooler:myroom.removable_cooler,\n\n      breakfast:myroom.breakfast,\n      cost_breakfast:myroom.cost_breakfast,\n      removable_breakfast:myroom.removable_breakfast,\n\n      lunch:myroom.lunch,\n      cost_lunch:myroom.cost_lunch,\n      removable_lunch:myroom.removable_lunch,\n\n      dinner:myroom.dinner,\n      cost_dinner:myroom.cost_dinner,\n      removable_dinner:myroom.removable_dinner,\n\n      cost_electricity:myroom.cost_electricity,\n      cost_water:myroom.cost_water,\n\n      room_cleaning:myroom.room_cleaning,\n      cost_cleaning:myroom.cost_cleaning,\n\n      capacity:myroom.capacity,\n      balcony:myroom.balcony,\n      separate_washroom:myroom.separate_washroom,\n      title:myroom.title,\n      seller_price:myroom.seller_price,\n      owner_discount:myroom.owner_discount,\n      length:myroom.length,\n      breadth:myroom.breadth,\n      height:myroom.height,\n      building_guard:myroom.building_guard,\n      category:myroom.category,\n      cctv_building:myroom.cctv_building,\n      windows:myroom.windows,\n      power_backup:myroom.power_backup,\n      furniture:myroom.furniture,\n      facility:myroom.facility,\n      description:myroom.description,\n      fans:myroom.fans,\n      floor_no:myroom.floor_no,\n\n      bed_type:myroom.bed_type,\n\n\n      veg_food:myroom.veg_food,\n      nonveg_food:myroom.nonveg_food,\n      food_policy:myroom.food_policy,\n\n      city:myroom.city,\n      state:myroom.state,\n      country:myroom.country,\n      landmark:myroom.landmark,\n      longitude:myroom.longitude,\n      latitude:myroom.latitude,\n      location:myroom.location,\n      pincode:myroom.pincode,\n\n      nearby_station1:myroom.nearby_station1,\n      nearby_station2:myroom.nearby_station2,\n      distance1:myroom.distance1,\n      distance2:myroom.distance2,\n\n      guest_allowed:myroom.guest_allowed,\n      guest_policy:myroom.guest_policy,\n\n      room_policy:myroom.room_policy,\n\n      \n\n      \n\n      \n      \n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      let form_data = new FormData();\n\n      \n      \n      setload(true)\n      form_data.append('title',values.title)\n      form_data.append('wifi',values.wifi)\n      form_data.append('cost_wifi',values.cost_wifi)\n      form_data.append('removable_wifi',values.removable_wifi)\n\n      form_data.append('gender',values.gender)\n\n      form_data.append('house_TV',values.house_TV)\n      form_data.append('cost_TV',values.cost_TV)\n      form_data.append('removable_house_TV',values.removable_house_TV)\n\n      form_data.append('room_TV',values.room_TV)\n      form_data.append('cost_roomTV',values.cost_roomTV)\n      form_data.append('removable_room_TV',values.removable_room_TV)\n\n      form_data.append('house_refridgerator',values.house_refridgerator)\n      form_data.append('cost_refridgerator',values.cost_refridgerator)\n      form_data.append('removable_house_refridgerator',values.removable_house_refridgerator)\n\n      form_data.append('room_refridgerator',values.room_refridgerator)\n      form_data.append('cost_roomrefridgerator',values.cost_roomrefridgerator)\n      form_data.append('removable_room_refridgerator',values.removable_room_refridgerator)\n\n      form_data.append('AC',values.AC)\n      form_data.append('cost_AC',values.cost_AC)\n      form_data.append('removable_AC',values.removable_AC)\n\n      form_data.append('purified_water',values.purified_water)\n      form_data.append('cost_purified_water',values.cost_purified_water)\n      form_data.append('removable_purified_water',values.removable_purified_water)\n\n      form_data.append('geyser',values.geyser)\n      form_data.append('cost_geyser',values.cost_geyser)\n      form_data.append('removable_geyser',values.removable_geyser)\n\n      form_data.append('cooler',values.cooler)\n      form_data.append('cost_cooler',values.cost_cooler)\n      form_data.append('removable_cooler',values.removable_cooler)\n\n      form_data.append('breakfast',values.breakfast)\n      form_data.append('cost_breakfast',values.cost_breakfast)\n      form_data.append('removable_breakfast',values.removable_breakfast)\n\n      form_data.append('lunch',values.lunch)\n      form_data.append('cost_lunch',values.cost_cooler)\n      form_data.append('removable_lunch',values.removable_lunch)\n\n      form_data.append('dinner',values.dinner)\n      form_data.append('cost_dinner',values.cost_dinner)\n      form_data.append('removable_dinner',values.removable_dinner)\n\n      form_data.append('laundry',values.laundry)\n      form_data.append('cost_laundry',values.cost_laundry)\n\n      form_data.append('iron',values.iron)\n      form_data.append('cost_iron',values.cost_iron)\n\n      form_data.append('room_cleaning',values.room_cleaning)\n      form_data.append('cost_cleaning',values.cost_cleaning)\n\n      form_data.append('cost_electricity',values.cost_electricity)\n\n      form_data.append('cost_water',values.cost_water)\n\n      form_data.append('location',values.location)\n\n      form_data.append('city',values.city)\n      form_data.append('state',values.state)\n      form_data.append('country',values.country)\n      form_data.append('landmark',values.landmark)\n      form_data.append('pincode',values.pincode)\n      form_data.append('longitude',values.longitude)\n      form_data.append('latitude',values.latitude)\n\n      form_data.append('nearby_station1',values.nearby_station1)\n      form_data.append('nearby_station2',values.nearby_station2)\n      form_data.append('distance1',values.distance1)\n      form_data.append('distance2',values.distance2)\n\n      form_data.append('veg_food',values.veg_food)\n      form_data.append('nonveg_food',values.nonveg_food)\n\n      form_data.append('photo1',values.photo1)\n      form_data.append('photo2',values.photo2)\n      form_data.append('photo3',values.photo3)\n      form_data.append('photo4',values.photo4)\n      form_data.append('photo5',values.photo5)\n\n      form_data.append('address_proof',values.address_proof)\n\n      form_data.append('capacity',values.capacity)\n      form_data.append('windows',values.windows)\n      form_data.append('fans',values.fans)\n      form_data.append('floor_no',values.floor_no)\n      form_data.append('balcony',values.balcony)\n      form_data.append('separate_washroom',values.separate_washroom)\n      form_data.append('cctv_building',values.cctv_building)\n      form_data.append('building_guard',values.building_guard)\n      form_data.append('guest_allowed',values.guest_allowed)\n      form_data.append('owner_discount',values.owner_discount)\n      form_data.append('seller_price',values.seller_price)\n      form_data.append('power_backup',values.power_backup)\n      form_data.append('length',values.length)\n      form_data.append('furniture',values.furniture)\n      form_data.append('description',values.description)\n      form_data.append('category',values.category)\n      form_data.append('bed_type',values.bed_type)\n\n\n      form_data.append('breadth',values.breadth)\n\n      form_data.append('height',values.height)\n\n      if(values.food_policy!='')\n      {\n        form_data.append('food_policy',values.food_policy)\n      }\n      else{\n        form_data.append('food_policy','None')\n      }\n\n\n      if(values.room_policy!='')\n      {\n        form_data.append('room_policy',values.room_policy)\n      }\n      else{\n        form_data.append('room_policy','None')\n      }\n\n      if(values.guest_policy!='')\n      {\n        form_data.append('guest_policy',values.guest_policy)\n      }\n      else{\n        form_data.append('guest_policy','None')\n      }\n\n      if(values.facility!='')\n      {\n        form_data.append('facility',values.facility)\n      }\n      else{\n        form_data.append('facility','None')\n      }\n\n\n\n\n\n\n\n   \n      \n     \n      const config = {\n        headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n\n      \n      if(edit===true)\n      {\n        try{const res = await axios.put(`${process.env.REACT_APP_API_URL}/sourcewdsfdaegds/my_rooms/${roomid}/`,form_data,config);\n            setload(false)  \n          setredirect(true)\n              \n              }\n                catch{\n                  setload(false)  \n                 \n                  seterror(true)\n                 \n                }\n      }\n      else{\n        try{const res = await axios.post(`${process.env.REACT_APP_API_URL}/sourcewdsfdaegds/my_rooms/`,form_data,config);\n        setload(false)  \n        setredirect(true)\n\n              }\n                catch{\n                  setload(false)  \n               \n                  seterror(true)\n                 \n                }\n      }\n    },\n  });\n\n  const handleclick1 = (name,value,setvalue) => {\n    \n    setvalue(name,value+1)\n}\nconst handleclick2 = (name,value,setvalue) => {\n  if(value>0){setvalue(name,value-1)}\n  \n}\n\nuseEffect(\n  () => {\n    if(formik.values.length!==formik.values.length){formik.setFieldValue('length',0);}\n    \n  \n  }\n,[formik.values.length])\n\nuseEffect(\n  () => {\n    if(formik.values.breadth!==formik.values.breadth){formik.setFieldValue('breadth',0);}\n    \n  \n  }\n,[formik.values.breadth])\n\nuseEffect(\n  () => {\n    if(formik.values.height!==formik.values.height){formik.setFieldValue('height',0);}\n    \n  \n  }\n,[formik.values.height])\n\nuseEffect(\n  () => {\n    \n    if(formik.values.owner_discount!==formik.values.owner_discount){formik.setFieldValue('owner_discount',0);}\n    \n  \n  }\n,[formik.values.owner_discount])\n\nuseEffect(\n  () => {\n    \n    if(formik.values.seller_price!==formik.values.seller_price){formik.setFieldValue('seller_price',0);}\n    \n  \n  }\n,[formik.values.seller_price])\n\nuseEffect(\n  () => {\n    \n    if(formik.values.cost_wifi!==formik.values.cost_wifi){formik.setFieldValue('cost_wifi',0);}\n    \n  \n  }\n,[formik.values.cost_wifi])\n\nuseEffect(\n  () => {\n    \n    if(formik.values.cost_refridgerator!==formik.values.cost_refridgerator){formik.setFieldValue('cost_refridgerator',0);}\n    if(formik.values.cost_roomrefridgerator!==formik.values.cost_roomrefridgerator){formik.setFieldValue('cost_roomrefridgerator',0);}\n    \n  \n  }\n,[formik.values.cost_refridgerator,formik.values.cost_roomrefridgerator])\n\n\nuseEffect(\n  () => {\n    \n    if(formik.values.cost_TV!==formik.values.cost_TV){formik.setFieldValue('cost_TV',0);}\n    if(formik.values.cost_roomTV!==formik.values.cost_roomTV){formik.setFieldValue('cost_roomTV',0);}\n    \n  \n  }\n,[formik.values.cost_TV,formik.values.cost_roomTV])\n\n\nuseEffect(\n  () => {\n    \n    if(formik.values.cost_AC!==formik.values.cost_AC){formik.setFieldValue('cost_AC',0);}\n    if(formik.values.cost_purified_water!==formik.values.cost_purified_water){formik.setFieldValue('cost_purified_water',0);}\n    if(formik.values.cost_geyser!==formik.values.cost_geyser){formik.setFieldValue('cost_geyser',0);}\n    \n  \n  }\n,[formik.values.cost_AC,formik.values.cost_purified_water,formik.values.cost_geyser])\n\n\nuseEffect(\n  () => {\n    \n    if(formik.values.cost_cooler!==formik.values.cost_cooler){formik.setFieldValue('cost_cooler',0);}\n    if(formik.values.cost_electricity!==formik.values.cost_electricity){formik.setFieldValue('cost_electricity',0);}\n    if(formik.values.cost_water!==formik.values.cost_water){formik.setFieldValue('cost_water',0);}\n    \n  \n  }\n,[formik.values.cost_cooler,formik.values.cost_electricity,formik.values.cost_water])\n\n\nuseEffect(\n  () => {\n    \n    if(formik.values.distance1!==formik.values.distance1){formik.setFieldValue('distance1',0);}\n    if(formik.values.distance2!==formik.values.distance2){formik.setFieldValue('distance2',0);}\n    if(formik.values.cost_breakfast!==formik.values.cost_breakfast){formik.setFieldValue('cost_breakfast',0);}\n    if(formik.values.cost_lunch!==formik.values.cost_lunch){formik.setFieldValue('cost_lunch',0);}\n    if(formik.values.cost_dinner!==formik.values.cost_dinner){formik.setFieldValue('cost_dinner',0);}\n    if(formik.values.cost_laundry!==formik.values.cost_laundry){formik.setFieldValue('cost_laundry',0);}\n    if(formik.values.cost_iron!==formik.values.cost_iron){formik.setFieldValue('cost_iron',0);}\n    if(formik.values.cost_cleaning!==formik.values.cost_cleaning){formik.setFieldValue('cost_cleaning',0);}\n  \n  }\n,[formik.values.distance1,formik.values.distance2,formik.values.cost_breakfast,formik.values.cost_laundry,formik.values.cost_lunch,formik.values.cost_dinner,formik.values.cost_cleaning,formik.values.cost_iron])\n\n\n\nconst Filevalidation = (file1) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 3072) {\n              alert(\n                \"File too Big, please select a file less than 3mb\");\n          } \n          else{\n            \n            formik.setFieldValue('address_proof',file1);\n            document.getElementById(\"proof\").innerHTML = '<b>'\n                    + file1.name + '</b> KB UPLOADED';\n          }\n      \n  \n}\n\n\nconst Filevalidation4 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo4',file1);\n            setroom({...myroom,file4: URL.createObjectURL(file1),photo4:file1});\n          }\n      \n  \n}\n\n\nconst Filevalidation3 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo3',file1);\n            setroom({...myroom,file3: URL.createObjectURL(file1),photo3:file1});\n          }\n      \n  \n}\n\nconst Filevalidation2 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo2',file1);\n            setroom({...myroom,file2: URL.createObjectURL(file1),photo2:file1});\n          }\n      \n  \n}\n\nconst Filevalidation1 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo1',file1);\n            setroom({...myroom,file1: URL.createObjectURL(file1),photo1:file1});\n          }\n      \n  \n}\n\nconst Filevalidation5 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo5',file1);\n            setroom({...myroom,file5: URL.createObjectURL(file1),photo5:file1});\n          }\n      \n  \n}\n\nif(props.isAuthenticated===false)\n    {\n      return <Redirect to=\"/login\" />;\n    }\n\n\nif(newredirect==true)\n{\n  return <Redirect to={{\n    pathname: '/dashboard/profile',\n    state: { property_id: true }\n  }}/>\n}\n\n  if(redirect==true)\n  {\n    return <Redirect to='/dashboard/my_rooms' />\n  }\n  if(error===true)\n  {\n    return <div className={classes.erorclass}><Eror error={'Cannot process request!'} /></div>;\n  }\n\n  return (\n    <div className=\"formbgclass\">\n    <div className={classes.myclass}>\n\n      <Rules open={openmodal} handleopen={handleOpenmodal} handleclose={closemodal} />\n\n      <Backdrop className={classes.backdrop} open={load}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n        \n        <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n          \n          <Grid item lg={5} md={6}>\n           \n          <Paper elevation={5} className={classes.papernewclass}>\n          <div id=\"mapcontainer1\">\n      <form onSubmit={formik.handleSubmit} className={classes.nowclass} >\n      <br />\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n        className={classes.nowclass1}\n      >\n       \n\n        <Grid item className={classes.imageclass}>\n\n        <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput1.current.click();}}>\n          <img src={myroom.file1} className={classes.imageclass}/>\n          </Button>\n        \n        <input type='file'  ref={hiddenFileInput1} style={{display:'none'}}  id='photo1' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation1(event.target.files[0]);}}\n /> \n        \n        </Grid>\n\n        <Grid item className={classes.imageclass}>\n\n        <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput2.current.click();}}>\n          <img src={myroom.file2} className={classes.imageclass}/>\n          </Button>\n        \n        <input type='file'  ref={hiddenFileInput2} style={{display:'none'}}  id='photo2' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n  Filevalidation2(event.target.files[0]);}}/> \n        \n        </Grid>\n\n        <Grid item className={classes.imageclass}>\n\n        <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput3.current.click();}}>\n          <img src={myroom.file3} className={classes.imageclass}/>\n          </Button>\n        \n        <input type='file'  ref={hiddenFileInput3} style={{display:'none'}}  id='photo3' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n  Filevalidation3(event.target.files[0]);}}/> \n        \n        </Grid>\n\n\n       \n\n        \n\n\n      </Grid>\n\n      <br />\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid item className={classes.imageclass}>\n\n          <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput4.current.click();}}>\n            <img src={myroom.file4} className={classes.imageclass}/>\n            </Button>\n\n          <input type='file'  ref={hiddenFileInput4} style={{display:'none'}}  id='photo4' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation4(event.target.files[0]);}}/> \n\n          </Grid>\n\n          <Grid item className={classes.imageclass}>\n\n          <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput5.current.click();}}>\n            <img src={myroom.file5} className={classes.imageclass}/>\n            </Button>\n\n          <input type='file'  ref={hiddenFileInput5} style={{display:'none'}}  id='photo5' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation5(event.target.files[0]);}}/> \n\n          </Grid>\n      </Grid>\n\n\n        <br />\n        <br />\n       \n       <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"title\"\n          name=\"title\"\n          label=\"Room name\"\n          value={formik.values.title}\n          onChange={formik.handleChange}\n          error={formik.touched.title && Boolean(formik.errors.title)}\n          helperText={formik.touched.title && formik.errors.title}\n        />\n        </div>\n       \n        <br />\n\n        \n        <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        >\n        \n        \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Capacity of your room\n          </Typography>\n          \n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"capacity\">Capacity</InputLabel>\n            <Select\n            labelId=\"capacity\"\n            id=\"capacity\"\n            value={formik.values.capacity}\n            onChange={(e) => formik.setFieldValue('capacity',e.target.value)}\n            error={formik.touched.capacity && Boolean(formik.errors.capacity)}\n            helperText={formik.touched.capacity && formik.errors.capacity}\n            >\n            <MenuItem value={1}>1</MenuItem>\n            <MenuItem value={2}>2</MenuItem>\n            <MenuItem value={3}>3</MenuItem>\n            <MenuItem value={4}>4</MenuItem>\n            <MenuItem value={5}>5</MenuItem>\n            <MenuItem value={6}>6</MenuItem>\n            <MenuItem value={7}>7</MenuItem>\n            <MenuItem value={8}>8</MenuItem>\n            <MenuItem value={9}>9</MenuItem>\n            <MenuItem value={10}>10</MenuItem>\n            </Select>\n        </FormControl>\n\n        </Grid>\n     \n  \n\n    <br />\n    <br />\n\n    <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        >\n\n    \n\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Who you want this room to rent?\n          </Typography>\n          \n        \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"gender\">Gender</InputLabel>\n            <Select\n            labelId=\"gender\"\n            id=\"gender\"\n            value={formik.values.gender}\n            onChange={(e) => formik.setFieldValue('gender',e.target.value)}\n            error={formik.touched.gender && Boolean(formik.errors.gender)}\n            helperText={formik.touched.gender && formik.errors.gender}\n            >\n            <MenuItem value={'Male'}>Male</MenuItem>\n            <MenuItem value={'Female'}>Female</MenuItem>\n            <MenuItem value={'Both Male and Female'}>Both Male and Female</MenuItem>\n            <MenuItem value={'Any'}>Any</MenuItem>\n            \n            </Select>\n        </FormControl>\n\n        </Grid>\n     \n\n        <br />\n    <br />\n\n    <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        >\n\n       \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of windows in the room\n          </Typography>\n         \n          <div>   \n            <Button onClick={() => handleclick1('windows',formik.values.windows,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.windows}\n\n            <Button  onClick={() => handleclick2('windows',formik.values.windows,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n\n        </Grid>\n   \n\n        <br />\n\n        <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        >\n  \n\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of balcony in the room\n          </Typography>\n         \n          <div>   \n            <Button onClick={() => handleclick1('balcony',formik.values.balcony,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.balcony}\n\n            <Button  onClick={() => handleclick2('balcony',formik.values.balcony,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n\n        </Grid>\n     \n\n    <br />\n\n    <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        >\n\n\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of fans in the room\n          </Typography>\n          \n       \n          <div>   \n            <Button onClick={() => handleclick1('fans',formik.values.fans,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.fans}\n\n            <Button  onClick={() => handleclick2('fans',formik.values.fans,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n\n        </Grid>\n      \n          \n          <br />\n\n          <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        >\n\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Floor no. of room\n          </Typography>\n\n         \n        \n          <div>   \n            <Button onClick={() => handleclick1('floor_no',formik.values.floor_no,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.floor_no}\n\n            <Button  onClick={() => handleclick2('floor_no',formik.values.floor_no,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n\n        </Grid>\n     \n    <br />\n\n    <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        >\n\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Category of the room\n          </Typography>\n         \n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"category\">Category</InputLabel>\n            <Select\n            labelId=\"category\"\n            id=\"category\"\n            value={formik.values.category}\n            onChange={(e) => formik.setFieldValue('category',e.target.value)}\n            error={formik.touched.category && Boolean(formik.errors.category)}\n            helperText={formik.touched.category && formik.errors.category}\n            >\n          <MenuItem value={''}>None</MenuItem>\n          <MenuItem value={'Classic room'}>Classic room</MenuItem>\n          <MenuItem value={'Deluxe room'}>Deluxe room</MenuItem>\n          <MenuItem value={'Single'}>Single</MenuItem>\n          <MenuItem value={'Double'}>Double</MenuItem>\n          <MenuItem value={'Triple'}>Triple</MenuItem>\n          <MenuItem value={'Quad'}>Quad</MenuItem>\n          <MenuItem value={'Queen'}>Queen</MenuItem>\n          <MenuItem value={'King'}>King</MenuItem>\n          <MenuItem value={'Twin'}>Twin</MenuItem>\n          <MenuItem value={'Double-Double'}>Double-Double</MenuItem>\n          <MenuItem value={'Studio'}>Studio</MenuItem>\n          <MenuItem value={'Suite'}>Suite</MenuItem>\n          <MenuItem value={'Executive suite'}>Executive suite</MenuItem>\n          <MenuItem value={'Mini suite'}>Mini suite</MenuItem>\n          <MenuItem value={'Presidential suite'}>Presidential suite</MenuItem>\n          <MenuItem value={'Apartment'}>Apartment</MenuItem>\n          <MenuItem value={'Connecting rooms'}>Connecting rooms</MenuItem>\n          <MenuItem value={'Murphy rooms'}>Murphy room</MenuItem>\n          <MenuItem value={'Adjacent rooms'}>Adjacent rooms</MenuItem>\n          <MenuItem value={'Murphy room'}>Murphy room</MenuItem>\n          <MenuItem value={'Adjacent rooms'}>Adjacent rooms</MenuItem>\n            </Select>\n        </FormControl>\n     </Grid>\n\n    <br />\n    <br />\n\n    <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        >\n\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Bed type provided in the room\n          </Typography>\n        \n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"bed_type\">Bed type</InputLabel>\n            <Select\n            labelId=\"bed_type\"\n            id=\"bed_type\"\n            value={formik.values.bed_type}\n            onChange={(e) => formik.setFieldValue('bed_type',e.target.value)}\n            error={formik.touched.bed_type && Boolean(formik.errors.bed_type)}\n            helperText={formik.touched.bed_type && formik.errors.bed_type}\n            >\n          <MenuItem value={''}>None</MenuItem>\n          <MenuItem value={'Single Bed'}>Single Bed</MenuItem>\n          <MenuItem value={'Double Bed'}>Double Bed</MenuItem>\n            </Select>\n        </FormControl>\n\n        </Grid>\n     \n\n    <div><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Length of the room\n        </Typography>\n        \n          <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"length\"\n          name=\"length\"\n          label=\"length\"\n          value={formik.values.length}\n          onChange={(e) => {formik.setFieldValue('length',parseInt(e.target.value)); \n          }}\n          error={formik.touched.length && Boolean(formik.errors.length)}\n          helperText={formik.touched.length && formik.errors.length}\n        /></div>\n       </div>\n\n  <div>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Breadth of the room\n        </Typography>\n        <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"breadth\"\n          name=\"breadth\"\n          label=\"breadth\"\n          value={formik.values.breadth}\n          onChange={(e) => {formik.setFieldValue('breadth',parseInt(e.target.value)); \n          }}\n          error={formik.touched.breadth && Boolean(formik.errors.breadth)}\n          helperText={formik.touched.breadth && formik.errors.breadth}\n        /></div>\n       </div>\n\n  <div>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Height of the room\n        </Typography>\n\n        <div className={classes.form}>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"height\"\n          name=\"height\"\n          label=\"height\"\n          value={formik.values.height}\n          onChange={(e) => {formik.setFieldValue('height',parseInt(e.target.value)); \n          }}\n          error={formik.touched.height && Boolean(formik.errors.height)}\n          helperText={formik.touched.height && formik.errors.height}\n        />\n       </div></div>\n\n  <div>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Furniture in the room\n        </Typography>\n        <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={4}\n          id=\"furniture\"\n          name=\"furniture\"\n          label=\"furniture\"\n          value={formik.values.furniture}\n          onChange={formik.handleChange}\n          error={formik.touched.furniture && Boolean(formik.errors.furniture)}\n          helperText={formik.touched.furniture && formik.errors.furniture}\n        />\n      </div></div>\n\n  <div>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Description of the room\n        </Typography>\n        <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={4}\n          id=\"description\"\n          name=\"description\"\n          label=\"description\"\n          value={formik.values.description}\n          onChange={formik.handleChange}\n          error={formik.touched.description && Boolean(formik.errors.description)}\n          helperText={formik.touched.description && formik.errors.description}\n        />\n       </div></div>\n\n\n\n\n            <br />\n            \n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Facilities\n            </Typography>\n            \n            <br />\n\n           \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Electricity charge\n            </Typography>\n            \n\n<div>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of electricity facility (if not any, enter 0)\n        </Typography>\n        <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_electricity\"\n          name=\"cost_electricity\"\n          label=\"Cost of electricity facility\"\n          value={formik.values.cost_electricity}\n          onChange={(e) => {formik.setFieldValue('cost_electricity',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_electricity && Boolean(formik.errors.cost_electricity)}\n          helperText={formik.touched.cost_electricity && formik.errors.cost_electricity}\n        />\n        </div></div>\n\n  <br />\n\n  \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Water charge\n            </Typography>\n           \n\n<div>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of Water facility (if not any, enter 0)\n        </Typography>\n        <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_water\"\n          name=\"cost_water\"\n          label=\"Cost of water facility\"\n          value={formik.values.cost_water}\n          onChange={(e) => {formik.setFieldValue('cost_water',parseInt(e.target.value)); \n        }}\n          error={formik.touched.cost_water && Boolean(formik.errors.cost_water)}\n          helperText={formik.touched.cost_water && formik.errors.cost_water}\n        />\n       </div></div>\n\n  <br />\n\n\n           \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              WIFI\n            </Typography>\n            \n            <br />\n            <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        >\n        \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have WIFI ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"wifi\">WIFI</InputLabel>\n            <Select\n            labelId=\"wifi\"\n            id=\"wifi\"\n            value={formik.values.wifi}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('wifi',e.target.value);\n            formik.setFieldValue('cost_wifi',0);\n            formik.setFieldValue('removable_wifi',false);}\n            else{formik.setFieldValue('wifi',e.target.value)}}}\n            error={formik.touched.wifi && Boolean(formik.errors.wifi)}\n            helperText={formik.touched.wifi && formik.errors.wifi}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n      \n      <br />\n\n    \n\n\n    {\n      formik.values.wifi ? <>\n      \n     \n      <Typography variant=\"body1\" color=\"textSecondary\">\n      Cost of wifi facility (if not enter 0)\n        </Typography>\n        <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_wifi\"\n          name=\"cost_wifi\"\n          label=\"Cost of wifi facility\"\n          value={formik.values.cost_wifi}\n          onChange={(e) => {formik.setFieldValue('cost_wifi',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_wifi && Boolean(formik.errors.cost_wifi)}\n          helperText={formik.touched.cost_wifi && formik.errors.cost_wifi}\n        /></div>\n        </>\n      \n  : null\n    }\n    \n<br />\n{\n      formik.values.wifi ? <>\n     \n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_wifi\">Removable wifi facility?</InputLabel>\n            <Select\n            labelId=\"removable_wifi\"\n            id=\"removable_wifi\"\n            value={formik.values.removable_wifi}\n            onChange={(e) => {\n            formik.setFieldValue('removable_wifi',e.target.value)}}\n            error={formik.touched.removable_wifi && Boolean(formik.errors.removable_wifi)}\n            helperText={formik.touched.removable_wifi && formik.errors.removable_wifi}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n        </>\n  : null\n    }\n\n    </Grid>\n    <br />\n\n    <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        >\n\n            \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              TV in the house\n            </Typography>\n            \n            <br />\n      \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have house TV ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"house_TV\">House TV</InputLabel>\n            <Select\n            labelId=\"house_TV\"\n            id=\"house_TV\"\n            value={formik.values.house_TV}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('house_TV',e.target.value);\n            formik.setFieldValue('cost_TV',0);\n            formik.setFieldValue('removable_house_TV',false);}\n            else{formik.setFieldValue('house_TV',e.target.value)}}}\n            error={formik.touched.house_TV && Boolean(formik.errors.house_TV)}\n            helperText={formik.touched.house_TV && formik.errors.house_TV}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n      \n\n    \n\n\n    {\n      formik.values.house_TV ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of house TV facility(if not enter 0)\n        </Typography>\n    <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_TV\"\n          name=\"cost_TV\"\n          label=\"Cost of house TV facility\"\n          value={formik.values.cost_TV}\n          onChange={(e) => {formik.setFieldValue('cost_TV',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_TV && Boolean(formik.errors.cost_TV)}\n          helperText={formik.touched.cost_TV && formik.errors.cost_TV}\n        />\n        </div>\n        </>\n  : null\n    }\n    \n\n{\n      formik.values.house_TV ? <><br />\n      \n     \n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove house TV facility?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_house_TV\">Removable house TV facility?</InputLabel>\n            <Select\n            labelId=\"removable_house_TV\"\n            id=\"removable_house_TV\"\n            value={formik.values.removable_house_TV}\n            onChange={(e) => {\n            formik.setFieldValue('removable_house_TV',e.target.value)}}\n            error={formik.touched.removable_house_TV && Boolean(formik.errors.removable_house_TV)}\n            helperText={formik.touched.removable_house_TV && formik.errors.removable_house_TV}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n        </>\n  : null\n    }\n\n\n           <br />\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              TV in the room\n            </Typography>\n           \n            <br />\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you provide TV in the room ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"room_TV\">Room TV</InputLabel>\n            <Select\n            labelId=\"room_TV\"\n            id=\"room_TV\"\n            value={formik.values.room_TV}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('room_TV',e.target.value);\n            formik.setFieldValue('cost_roomTV',0);\n            formik.setFieldValue('removable_room_TV',false);}\n            else{formik.setFieldValue('room_TV',e.target.value)}}}\n            error={formik.touched.room_TV && Boolean(formik.errors.room_TV)}\n            helperText={formik.touched.room_TV && formik.errors.room_TV}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n      \n    \n\n\n    {\n      formik.values.room_TV ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of room TV facility(if not enter 0)\n        </Typography>\n     <div className={classes.form}>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"cost_roomTV\"\n          name=\"cost_roomTV\"\n          label=\"Cost of room TV facility\"\n          value={formik.values.cost_roomTV}\n          onChange={(e) => {formik.setFieldValue('cost_roomTV',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_roomTV && Boolean(formik.errors.cost_roomTV)}\n          helperText={formik.touched.cost_roomTV && formik.errors.cost_roomTV}\n        /></div>\n        </>\n  : null\n    }\n    \n\n{\n      formik.values.room_TV ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove room TV facility?\n        </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_room_TV\">Removable room TV facility?</InputLabel>\n            <Select\n            labelId=\"removable_room_TV\"\n            id=\"removable_room_TV\"\n            value={formik.values.removable_room_TV}\n            onChange={(e) => {\n            formik.setFieldValue('removable_room_TV',e.target.value)}}\n            error={formik.touched.removable_room_TV && Boolean(formik.errors.removable_room_TV)}\n            helperText={formik.touched.removable_room_TV && formik.errors.removable_room_TV}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n\n<br />\n\n          <Typography variant=\"h6\" color=\"textPrimary\">\n            Refridgerator in the house\n          </Typography>\n          \n          <br />\n   \n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n          Do you have house refridgerator ?\n      </Typography>\n      \n      <FormControl className={classes.form}>\n      \n          <InputLabel id=\"house_refridgerator\">House refridgerator</InputLabel>\n          <Select\n          labelId=\"house_refridgerator\"\n          id=\"house_refridgerator\"\n          value={formik.values.house_refridgerator}\n          onChange={(e) => {if(e.target.value===false){formik.setFieldValue('house_refridgerator',e.target.value);\n          formik.setFieldValue('cost_refridgerator',0);\n          formik.setFieldValue('removable_house_refridgerator',false);}\n          else{formik.setFieldValue('house_refridgerator',e.target.value)}}}\n          error={formik.touched.house_refridgerator && Boolean(formik.errors.house_refridgerator)}\n          helperText={formik.touched.house_refridgerator && formik.errors.house_refridgerator}\n          >\n          <MenuItem value={true}>Yes</MenuItem>\n          <MenuItem value={false}>No</MenuItem>\n          </Select>\n      </FormControl>\n   \n\n  \n\n\n  {\n    formik.values.house_refridgerator ? <><br />\n    <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n    Cost of house refridgerator facility(if not enter 0)\n      </Typography>\n    <div className={classes.form}>\n      <TextField\n          multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           fullWidth\n        rows={1}\n        id=\"cost_refridgerator\"\n        name=\"cost_refridgerator\"\n        label=\"Cost of house refridgerator facility\"\n        value={formik.values.cost_refridgerator}\n        onChange={(e) => {formik.setFieldValue('cost_refridgerator',parseInt(e.target.value)); \n          }}\n        error={formik.touched.cost_refridgerator && Boolean(formik.errors.cost_refridgerator)}\n        helperText={formik.touched.cost_refridgerator && formik.errors.cost_refridgerator}\n      /></div>\n     </>\n: null\n  }\n  \n\n{\n    formik.values.house_refridgerator ? <><br />\n    <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n    Can customers remove house refridgerator facility?\n      </Typography>\n   \n      <FormControl className={classes.form}>\n      \n          <InputLabel id=\"removable_house_refridgerator\">Removable house refridgerator facility?</InputLabel>\n          <Select\n          labelId=\"removable_house_refridgerator\"\n          id=\"removable_house_refridgerator\"\n          value={formik.values.removable_house_refridgerator}\n          onChange={(e) => {\n          formik.setFieldValue('removable_house_refridgerator',e.target.value)}}\n          error={formik.touched.removable_house_refridgerator && Boolean(formik.errors.removable_house_refridgerator)}\n          helperText={formik.touched.removable_house_refridgerator && formik.errors.removable_house_refridgerator}\n          >\n          <MenuItem value={true}>Yes</MenuItem>\n          <MenuItem value={false}>No</MenuItem>\n          </Select>\n      </FormControl>\n     </>\n: null\n  }\n\n<br />\n          \n          <Typography variant=\"h6\" color=\"textPrimary\">\n            Refridgerator in the room\n          </Typography>\n          \n          <br />\n    \n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n          Do you provide refridgerator in the room ?\n      </Typography>\n      \n      <FormControl className={classes.form}>\n      \n          <InputLabel id=\"room_refridgerator\">Room refridgerator</InputLabel>\n          <Select\n          labelId=\"room_refridgerator\"\n          id=\"room_refridgerator\"\n          value={formik.values.room_refridgerator}\n          onChange={(e) => {if(e.target.value===false){formik.setFieldValue('room_refridgerator',e.target.value);\n          formik.setFieldValue('cost_roomrefridgerator',0);\n          formik.setFieldValue('removable_room_refridgerator',false);}\n          else{formik.setFieldValue('room_refridgerator',e.target.value)}}}\n          error={formik.touched.room_refridgerator && Boolean(formik.errors.room_refridgerator)}\n          helperText={formik.touched.room_refridgerator && formik.errors.room_refridgerator}\n          >\n          <MenuItem value={true}>Yes</MenuItem>\n          <MenuItem value={false}>No</MenuItem>\n          </Select>\n      </FormControl>\n   \n\n  \n\n\n  {\n    formik.values.room_refridgerator ? <><br />\n    <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n    Cost of room refridgerator facility(if not enter 0)\n      </Typography>\n   <div className={classes.form}>\n      <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         fullWidth\n        rows={1}\n        id=\"cost_roomrefridgerator\"\n        name=\"cost_roomrefridgerator\"\n        label=\"Cost of room refridgerator facility\"\n        value={formik.values.cost_roomrefridgerator}\n        onChange={(e) => {formik.setFieldValue('cost_roomrefridgerator',parseInt(e.target.value)); \n          }}\n        error={formik.touched.cost_roomrefridgerator && Boolean(formik.errors.cost_roomrefridgerator)}\n        helperText={formik.touched.cost_roomrefridgerator && formik.errors.cost_roomrefridgerator}\n      /></div>\n      </>\n: null\n  }\n  \n\n{\n    formik.values.room_refridgerator ? <><br />\n    <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n    Can customers remove room refridgerator facility?\n      </Typography>\n    \n      <FormControl className={classes.form}>\n      \n          <InputLabel id=\"removable_room_refridgerator\">Removable room refridgerator facility?</InputLabel>\n          <Select\n          labelId=\"removable_room_refridgerator\"\n          id=\"removable_room_refridgerator\"\n          value={formik.values.removable_room_refridgerator}\n          onChange={(e) => {\n          formik.setFieldValue('removable_room_refridgerator',e.target.value)}}\n          error={formik.touched.removable_room_refridgerator && Boolean(formik.errors.removable_room_refridgerator)}\n          helperText={formik.touched.removable_room_refridgerator && formik.errors.removable_room_refridgerator}\n          >\n          <MenuItem value={true}>Yes</MenuItem>\n          <MenuItem value={false}>No</MenuItem>\n          </Select>\n      </FormControl>\n     </>\n: null\n  }\n\n<br />\n       \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Purified water\n            </Typography>\n            \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have purified water ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"purified_water\">purified water</InputLabel>\n            <Select\n            labelId=\"purified_water\"\n            id=\"purified_water\"\n            value={formik.values.purified_water}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('purified_water',e.target.value);\n            formik.setFieldValue('cost_purified_water',0);\n            formik.setFieldValue('removable_purified_water',false);}\n            else{formik.setFieldValue('purified_water',e.target.value)}}}\n            error={formik.touched.purified_water && Boolean(formik.errors.purified_water)}\n            helperText={formik.touched.purified_water && formik.errors.purified_water}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.purified_water ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of purified water facility (if not enter 0)\n        </Typography>\n     <div className={classes.form}>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           fullWidth\n          rows={1}\n          id=\"cost_purified_water\"\n          name=\"cost_purified_water\"\n          label=\"Cost of purified water facility\"\n          value={formik.values.cost_purified_water}\n          onChange={(e) => {formik.setFieldValue('cost_purified_water',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_purified_water && Boolean(formik.errors.cost_purified_water)}\n          helperText={formik.touched.cost_purified_water && formik.errors.cost_purified_water}\n        /></div>\n       </>\n  : null\n    }\n    \n\n{\n      formik.values.purified_water ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_purified_water\">Removable purified water facility?</InputLabel>\n            <Select\n            labelId=\"removable_purified_water\"\n            id=\"removable_purified_water\"\n            value={formik.values.removable_purified_water}\n            onChange={(e) => {\n            formik.setFieldValue('removable_purified_water',e.target.value)}}\n            error={formik.touched.removable_purified_water && Boolean(formik.errors.removable_purified_water)}\n            helperText={formik.touched.removable_purified_water && formik.errors.removable_purified_water}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n\n<br />\n\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              AC\n            </Typography>\n           \n            <br />\n      \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have AC ?\n        </Typography>\n        \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"AC\">AC</InputLabel>\n            <Select\n            labelId=\"AC\"\n            id=\"AC\"\n            value={formik.values.AC}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('AC',e.target.value);\n            formik.setFieldValue('cost_AC',0);\n            formik.setFieldValue('removable_AC',false);}\n            else{formik.setFieldValue('AC',e.target.value)}}}\n            error={formik.touched.AC && Boolean(formik.errors.AC)}\n            helperText={formik.touched.AC && formik.errors.AC}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n    \n\n    \n\n\n    {\n      formik.values.AC ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of AC facility (if not enter 0)\n        </Typography>\n     <div className={classes.form}>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           fullWidth\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={1}\n          id=\"cost_AC\"\n          name=\"cost_AC\"\n          label=\"Cost of AC facility\"\n          value={formik.values.cost_AC}\n          onChange={(e) => {formik.setFieldValue('cost_AC',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_AC && Boolean(formik.errors.cost_AC)}\n          helperText={formik.touched.cost_AC && formik.errors.cost_AC}\n        /></div>\n        </>\n  : null\n    }\n    \n\n{\n      formik.values.AC ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_AC\">Removable AC facility?</InputLabel>\n            <Select\n            labelId=\"removable_AC\"\n            id=\"removable_AC\"\n            value={formik.values.removable_AC}\n            onChange={(e) => {\n            formik.setFieldValue('removable_AC',e.target.value)}}\n            error={formik.touched.removable_AC && Boolean(formik.errors.removable_AC)}\n            helperText={formik.touched.removable_AC && formik.errors.removable_AC}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n    <br />\n\n\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Geyser\n            </Typography>\n           \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have geyser ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"geyser\">Geyser</InputLabel>\n            <Select\n            labelId=\"geyser\"\n            id=\"geyser\"\n            value={formik.values.geyser}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('geyser',e.target.value);\n            formik.setFieldValue('cost_geyser',0);\n            formik.setFieldValue('removable_geyser',false);}\n            else{formik.setFieldValue('geyser',e.target.value)}}}\n            error={formik.touched.geyser && Boolean(formik.errors.geyser)}\n            helperText={formik.touched.geyser && formik.errors.geyser}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n    \n\n\n    {\n      formik.values.geyser ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of geyser facility(if not enter 0)\n        </Typography>\n     <div className={classes.form}>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           fullWidth\n          rows={1}\n          id=\"cost_geyser\"\n          name=\"cost_geyser\"\n          label=\"Cost of geyser geyser\"\n          value={formik.values.cost_geyser}\n          onChange={(e) => {formik.setFieldValue('cost_geyser',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_geyser && Boolean(formik.errors.cost_geyser)}\n          helperText={formik.touched.cost_geyser && formik.errors.cost_geyser}\n        /></div>\n       </>\n  : null\n    }\n    \n\n{\n      formik.values.geyser ? <><br />\n      \n      \n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this geyser?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_geyser\">Removable geyser geyser?</InputLabel>\n            <Select\n            labelId=\"removable_geyser\"\n            id=\"removable_geyser\"\n            value={formik.values.removable_geyser}\n            onChange={(e) => {\n            formik.setFieldValue('removable_geyser',e.target.value)}}\n            error={formik.touched.removable_geyser && Boolean(formik.errors.removable_geyser)}\n            helperText={formik.touched.removable_geyser && formik.errors.removable_geyser}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n        </>\n  : null\n    }\n    <br />\n\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Cooler\n            </Typography>\n          \n            <br />\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have cooler ?\n        </Typography>\n        \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"cooler\">cooler</InputLabel>\n            <Select\n            labelId=\"cooler\"\n            id=\"cooler\"\n            value={formik.values.cooler}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('cooler',e.target.value);\n            formik.setFieldValue('cost_cooler',0);\n            formik.setFieldValue('removable_cooler',false);}\n            else{formik.setFieldValue('cooler',e.target.value)}}}\n            error={formik.touched.cooler && Boolean(formik.errors.cooler)}\n            helperText={formik.touched.cooler && formik.errors.cooler}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.cooler ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of cooler facility(if not enter 0)\n        </Typography>\n      <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={1}\n          id=\"cost_cooler\"\n          name=\"cost_cooler\"\n          label=\"Cost of cooler facility\"\n          value={formik.values.cost_cooler}\n          onChange={(e) => {formik.setFieldValue('cost_cooler',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_cooler && Boolean(formik.errors.cost_cooler)}\n          helperText={formik.touched.cost_cooler && formik.errors.cost_cooler}\n        /></div>\n      </>\n  : null\n    }\n    \n\n{\n      formik.values.cooler ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_cooler\">Removable cooler facility?</InputLabel>\n            <Select\n            labelId=\"removable_cooler\"\n            id=\"removable_cooler\"\n            value={formik.values.removable_cooler}\n            onChange={(e) => {\n            formik.setFieldValue('removable_cooler',e.target.value)}}\n            error={formik.touched.removable_cooler && Boolean(formik.errors.removable_cooler)}\n            helperText={formik.touched.removable_cooler && formik.errors.removable_cooler}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n<br />\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Breakfast\n            </Typography>\n            \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have breakfast ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"breakfast\">breakfast</InputLabel>\n            <Select\n            labelId=\"breakfast\"\n            id=\"breakfast\"\n            value={formik.values.breakfast}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('breakfast',e.target.value);\n            formik.setFieldValue('cost_breakfast',0);\n            formik.setFieldValue('removable_breakfast',false);}\n            else{formik.setFieldValue('breakfast',e.target.value)}}}\n            error={formik.touched.breakfast && Boolean(formik.errors.breakfast)}\n            helperText={formik.touched.breakfast && formik.errors.breakfast}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.breakfast ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of breakfast facility(if not enter 0)\n        </Typography>\n     <div className={classes.form}>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           fullWidth\n          rows={1}\n          id=\"cost_breakfast\"\n          name=\"cost_breakfast\"\n          label=\"Cost of breakfast facility\"\n          value={formik.values.cost_breakfast}\n          onChange={(e) => {formik.setFieldValue('cost_breakfast',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_breakfast && Boolean(formik.errors.cost_breakfast)}\n          helperText={formik.touched.cost_breakfast && formik.errors.cost_breakfast}\n        /></div>\n       </>\n  : null\n    }\n    \n\n{\n      formik.values.breakfast ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_breakfast\">Removable breakfast facility?</InputLabel>\n            <Select\n            labelId=\"removable_breakfast\"\n            id=\"removable_breakfast\"\n            value={formik.values.removable_breakfast}\n            onChange={(e) => {\n            formik.setFieldValue('removable_breakfast',e.target.value)}}\n            error={formik.touched.removable_breakfast && Boolean(formik.errors.removable_breakfast)}\n            helperText={formik.touched.removable_breakfast && formik.errors.removable_breakfast}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Lunch\n            </Typography>\n         \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have lunch ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"lunch\">lunch</InputLabel>\n            <Select\n            labelId=\"lunch\"\n            id=\"lunch\"\n            value={formik.values.lunch}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('lunch',e.target.value);\n            formik.setFieldValue('cost_lunch',0);\n            formik.setFieldValue('removable_lunch',false);}\n            else{formik.setFieldValue('lunch',e.target.value)}}}\n            error={formik.touched.lunch && Boolean(formik.errors.lunch)}\n            helperText={formik.touched.lunch && formik.errors.lunch}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.lunch ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of lunch facility(if not enter 0)\n        </Typography>\n      <div className={classes.form}>\n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         fullWidth\n          rows={1}\n          id=\"cost_lunch\"\n          name=\"cost_lunch\"\n          label=\"Cost of lunch facility\"\n          value={formik.values.cost_lunch}\n          onChange={(e) => {formik.setFieldValue('cost_lunch',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_lunch && Boolean(formik.errors.cost_lunch)}\n          helperText={formik.touched.cost_lunch && formik.errors.cost_lunch}\n        /></div>\n        </>\n  : null\n    }\n    \n\n{\n      formik.values.lunch ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_lunch\">Removable lunch facility?</InputLabel>\n            <Select\n            labelId=\"removable_lunch\"\n            id=\"removable_lunch\"\n            value={formik.values.removable_lunch}\n            onChange={(e) => {\n            formik.setFieldValue('removable_lunch',e.target.value)}}\n            error={formik.touched.removable_lunch && Boolean(formik.errors.removable_lunch)}\n            helperText={formik.touched.removable_lunch && formik.errors.removable_lunch}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n    <br />\n\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Dinner\n            </Typography>\n            \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have dinner ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"dinner\">dinner</InputLabel>\n            <Select\n            labelId=\"dinner\"\n            id=\"dinner\"\n            value={formik.values.dinner}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('dinner',e.target.value);\n            formik.setFieldValue('cost_dinner',0);\n            formik.setFieldValue('removable_dinner',false);}\n            else{formik.setFieldValue('dinner',e.target.value)}}}\n            error={formik.touched.dinner && Boolean(formik.errors.dinner)}\n            helperText={formik.touched.dinner && formik.errors.dinner}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n   \n\n    \n\n\n    {\n      formik.values.dinner ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of dinner facility (if not enter 0)\n        </Typography>\n      <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={1}\n          id=\"cost_dinner\"\n          name=\"cost_dinner\"\n          label=\"Cost of dinner facility\"\n          value={formik.values.cost_dinner}\n          onChange={(e) => {formik.setFieldValue('cost_dinner',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_dinner && Boolean(formik.errors.cost_dinner)}\n          helperText={formik.touched.cost_dinner && formik.errors.cost_dinner}\n        /></div>\n      </>\n  : null\n    }\n    \n\n{\n      formik.values.dinner ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_dinner\">Removable dinner facility?</InputLabel>\n            <Select\n            labelId=\"removable_dinner\"\n            id=\"removable_dinner\"\n            value={formik.values.removable_dinner}\n            onChange={(e) => {\n            formik.setFieldValue('removable_dinner',e.target.value)}}\n            error={formik.touched.removable_dinner && Boolean(formik.errors.removable_dinner)}\n            helperText={formik.touched.removable_dinner && formik.errors.removable_dinner}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n        </>\n  : null\n    }\n\n\n\n       <br />\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Laundry\n            </Typography>\n        \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have laundry ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"laundry\">laundry</InputLabel>\n            <Select\n            labelId=\"laundry\"\n            id=\"laundry\"\n            value={formik.values.laundry}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('laundry',e.target.value);\n            formik.setFieldValue('cost_laundry',0);}\n            else{formik.setFieldValue('laundry',e.target.value)}}}\n            error={formik.touched.laundry && Boolean(formik.errors.laundry)}\n            helperText={formik.touched.laundry && formik.errors.laundry}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n    \n\n\n    {\n      formik.values.laundry ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of laundry facility (in /kg/use)\n        </Typography>\n     <div className={classes.form}>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           fullWidth\n          rows={1}\n          id=\"cost_laundry\"\n          name=\"cost_laundry\"\n          label=\"Cost of laundry facility\"\n          value={formik.values.cost_laundry}\n          onChange={(e) => {formik.setFieldValue('cost_laundry',parseInt(e.target.value)); \n          }}\n          onChange={formik.handleChange}\n          error={formik.touched.cost_laundry && Boolean(formik.errors.cost_laundry)}\n          helperText={formik.touched.cost_laundry && formik.errors.cost_laundry}\n        /></div>\n      </>\n  : null\n    }\n<br />\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Iron\n            </Typography>\n            \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have iron ?\n        </Typography>\n        \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"iron\">iron</InputLabel>\n            <Select\n            labelId=\"iron\"\n            id=\"iron\"\n            value={formik.values.iron}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('iron',e.target.value);\n            formik.setFieldValue('cost_iron',0);}\n            else{formik.setFieldValue('iron',e.target.value)}}}\n            error={formik.touched.iron && Boolean(formik.errors.iron)}\n            helperText={formik.touched.iron && formik.errors.iron}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.iron ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of iron facility (in /kg/use)\n        </Typography>\n      <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={1}\n          id=\"cost_iron\"\n          name=\"cost_iron\"\n          label=\"Cost of iron facility\"\n          value={formik.values.cost_iron}\n          onChange={(e) => {formik.setFieldValue('cost_iron',parseInt(e.target.value)); \n          }}\n          onChange={formik.handleChange}\n          error={formik.touched.cost_iron && Boolean(formik.errors.cost_iron)}\n          helperText={formik.touched.cost_iron && formik.errors.cost_iron}\n        /></div>\n      </>\n  : null\n    }\n    <br />\n\n\n            <Typography variant=\"h6\" color=\"textPrimary\">\n               Room cleaning\n            </Typography>\n           \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you provide room cleaning ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"room_cleaning\">Room cleaning</InputLabel>\n            <Select\n            labelId=\"room_cleaning\"\n            id=\"room_cleaning\"\n            value={formik.values.room_cleaning}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('room_cleaning',e.target.value);\n            formik.setFieldValue('cost_cleaning',0);}\n            else{formik.setFieldValue('room_cleaning',e.target.value)}}}\n            error={formik.touched.room_cleaning && Boolean(formik.errors.room_cleaning)}\n            helperText={formik.touched.room_cleaning && formik.errors.room_cleaning}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.room_cleaning ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of room cleaning facility (in per cleaning)\n        </Typography>\n     <div className={classes.form}>\n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         fullWidth\n          rows={1}\n          id=\"cost_cleaning\"\n          name=\"cost_cleaning\"\n          label=\"Cost of cleaning facility\"\n          value={formik.values.cost_cleaning}\n          onChange={(e) => {formik.setFieldValue('cost_cleaning',parseInt(e.target.value)); \n          }}\n          onChange={formik.handleChange}\n          error={formik.touched.cost_cleaning && Boolean(formik.errors.cost_cleaning)}\n          helperText={formik.touched.cost_cleaning && formik.errors.cost_cleaning}\n        /></div>\n       </>\n  : null\n    }\n    <br />\n\n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have separate washroom in room ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"separate_washroom\">separate_washroom</InputLabel>\n            <Select\n            labelId=\"separate_washroom\"\n            id=\"separate_washroom\"\n            value={formik.values.separate_washroom}\n            onChange={(e) => {\n            formik.setFieldValue('separate_washroom',e.target.value)}}\n            error={formik.touched.separate_washroom && Boolean(formik.errors.separate_washroom)}\n            helperText={formik.touched.separate_washroom && formik.errors.separate_washroom}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n\n    <br />\n\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have building sequrity guard ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"building_guard\">Building Guard</InputLabel>\n            <Select\n            labelId=\"building_guard\"\n            id=\"building_guard\"\n            value={formik.values.building_guard}\n            onChange={(e) => {\n            formik.setFieldValue('building_guard',e.target.value)}}\n            error={formik.touched.building_guard && Boolean(formik.errors.building_guard)}\n            helperText={formik.touched.building_guard && formik.errors.building_guard}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n      \n\n    <br />\n\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have CCTV in building ?\n        </Typography>\n      \n         \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"cctv_building\">cctv_building</InputLabel>\n            <Select\n            labelId=\"cctv_building\"\n            id=\"cctv_building\"\n            value={formik.values.cctv_building}\n            onChange={(e) => {\n            formik.setFieldValue('cctv_building',e.target.value)}}\n            error={formik.touched.cctv_building && Boolean(formik.errors.cctv_building)}\n            helperText={formik.touched.cctv_building && formik.errors.cctv_building}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    <br />\n\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have power backup in building ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"power_backup\">power_backup</InputLabel>\n            <Select\n            labelId=\"power_backup\"\n            id=\"power_backup\"\n            value={formik.values.power_backup}\n            onChange={(e) => {\n            formik.setFieldValue('power_backup',e.target.value)}}\n            error={formik.touched.power_backup && Boolean(formik.errors.power_backup)}\n            helperText={formik.touched.power_backup && formik.errors.power_backup}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n <br />\n      \n <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Any additional facility\n        </Typography>\n    <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={4}\n          id=\"facility\"\n          name=\"facility\"\n          label=\"facility\"\n          value={formik.values.facility}\n          onChange={formik.handleChange}\n        /></div>\n        </>\n\n  <br />\n\n\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Pricing\n            </Typography>\n           \n            \n    \n            <br />\n    <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Any discount you are providing (in %)\n        </Typography>\n     <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={1}\n          id=\"owner_discount\"\n          name=\"owner_discount\"\n          label=\"Discount\"\n          value={formik.values.owner_discount}\n          onChange={(e) => {formik.setFieldValue('owner_discount',parseInt(e.target.value)); \n          }}\n          error={formik.touched.owner_discount && Boolean(formik.errors.owner_discount)}\n          helperText={formik.touched.owner_discount && formik.errors.owner_discount}\n        /></div>\n      </>\n      <br />\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Final Price after discount (excluding the facilities,electricity and water charge that will be added later and wont be counted in discount)\n       </Typography>\n     <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={1}\n          id=\"seller_price\"\n          name=\"seller_price\"\n          label=\"Price\"\n          value={formik.values.seller_price}\n          onChange={(e) => {formik.setFieldValue('seller_price',parseInt(e.target.value)); \n          }}\n          error={formik.touched.seller_price && Boolean(formik.errors.seller_price)}\n          helperText={formik.touched.seller_price && formik.errors.seller_price}\n        /></div>\n       </>\n<br />\n\n  \n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Food\n            </Typography>\n            \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you provide Veg food ?\n        </Typography>\n        \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"veg_food\">Veg Food</InputLabel>\n            <Select\n            labelId=\"veg_food\"\n            id=\"veg_food\"\n            value={formik.values.veg_food}\n            onChange={(e) => {\n            formik.setFieldValue('veg_food',e.target.value)}}\n            error={formik.touched.veg_food && Boolean(formik.errors.veg_food)}\n            helperText={formik.touched.veg_food && formik.errors.veg_food}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you provide Non-Veg food ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"nonveg_food\">Non-veg Food</InputLabel>\n            <Select\n            labelId=\"nonveg_food\"\n            id=\"nonveg_food\"\n            value={formik.values.nonveg_food}\n            onChange={(e) => {\n            formik.setFieldValue('nonveg_food',e.target.value)}}\n            error={formik.touched.nonveg_food && Boolean(formik.errors.nonveg_food)}\n            helperText={formik.touched.nonveg_food && formik.errors.nonveg_food}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n      \n        <br />\n    <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Any food policy or schedule or rules\n        </Typography>\n     <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={5}\n          id=\"food_policy\"\n          name=\"food_policy\"\n          label=\"Food policy\"\n          value={formik.values.food_policy}\n          onChange={formik.handleChange}\n          \n        /></div>\n        </>\n\n<br />\n  \n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Guest\n            </Typography>\n           \n            <br />\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you allow guest in the room ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"guest_allowed\">Guest allowed</InputLabel>\n            <Select\n            labelId=\"guest_allowed\"\n            id=\"guest_allowed\"\n            value={formik.values.guest_allowed}\n            onChange={(e) => {\n            formik.setFieldValue('guest_allowed',e.target.value)}}\n            error={formik.touched.guest_allowed && Boolean(formik.errors.guest_allowed)}\n            helperText={formik.touched.guest_allowed && formik.errors.guest_allowed}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n      \n        <br />\n    <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Any guest policy or rules?\n        </Typography>\n              <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={5}\n          id=\"guest_policy\"\n          name=\"guest_policy\"\n          label=\"Guest policy\"\n          value={formik.values.guest_policy}\n          onChange={formik.handleChange}\n          \n        /></div>\n     </>\n\n  <br />\n\n\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Regarding room\n            </Typography>\n       \n            <br />\n      \n\n    <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Any room policy or rules?\n        </Typography>\n     <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={5}\n          id=\"room_policy\"\n          name=\"room_policy\"\n          label=\"room policy\"\n          value={formik.values.room_policy}\n          onChange={formik.handleChange}\n          \n        /></div>\n       </>\n\n<br />\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Location\n            </Typography>\n            \n            <br />\n            <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Full Address\n        </Typography>\n      <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={5}\n          id=\"location\"\n          name=\"location\"\n          label=\"location\"\n          value={formik.values.location}\n          onChange={formik.handleChange}\n          error={formik.touched.location && Boolean(formik.errors.location)}\n          helperText={formik.touched.location && formik.errors.location}\n          \n        /></div>\n       </>\n  <br />\n\n\n    <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      City name\n        </Typography>\n      <div className={classes.form}>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           fullWidth\n          rows={1}\n          id=\"city\"\n          name=\"city\"\n          label=\"city\"\n          value={formik.values.city}\n          onChange={formik.handleChange}\n          error={formik.touched.city && Boolean(formik.errors.city)}\n          helperText={formik.touched.city && formik.errors.city}\n          \n        /></div>\n        </>\n  <br />\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      State name\n        </Typography>\n     <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={1}\n          id=\"state\"\n          name=\"state\"\n          label=\"state\"\n          value={formik.values.state}\n          onChange={formik.handleChange}\n          error={formik.touched.state && Boolean(formik.errors.state)}\n          helperText={formik.touched.state && formik.errors.state}\n          \n        /></div>\n        </>\n\n<br />\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Country name\n        </Typography>\n     <div className={classes.form}>\n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           fullWidth\n          rows={1}\n          id=\"country\"\n          name=\"country\"\n          label=\"country\"\n          value={formik.values.country}\n          onChange={formik.handleChange}\n          error={formik.touched.country && Boolean(formik.errors.country)}\n          helperText={formik.touched.country && formik.errors.country}\n          \n        /></div>\n       </>\n  <br />\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Landmark\n        </Typography>\n      <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={1}\n          id=\"landmark\"\n          name=\"landmark\"\n          label=\"landmark\"\n          value={formik.values.landmark}\n          onChange={formik.handleChange}\n          error={formik.touched.landmark && Boolean(formik.errors.landmark)}\n          helperText={formik.touched.landmark && formik.errors.landmark}\n          \n        /></div>\n        </>\n\n  <br />\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Pincode\n        </Typography>\n      <div className={classes.form}>\n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         fullWidth\n          rows={1}\n          id=\"pincode\"\n          name=\"pincode\"\n          label=\"pincode\"\n          value={formik.values.pincode}\n          onChange={formik.handleChange}\n          error={formik.touched.pincode && Boolean(formik.errors.pincode)}\n          helperText={formik.touched.pincode && formik.errors.pincode}\n          \n        /></div>\n       </>\n\n\n  <br />\n\n  \n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Address proof (pdf format)\n        </Typography>\n   </>  \n       \n\n{\n  myroom.address_proof ? <><a href={myroom.address_proof}><p id=\"proof\">UPLOADED ALREADY</p></a></> :  <><input type='file'  id='address' accept='application/pdf' onChange={(event) => {\n    Filevalidation(event.target.files[0]);}}/> \n         <p id=\"proof\">NOT UPLOADED</p></>\n }\n        \n\n  <br />\n\n  \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n        \n        \n        \n\n        \n        <br />\n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Kindly, mark the location of your house in the map to provide better facilites and optimisation (required*).\n     \n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      \n      Please note that if you have marked multiple time then the latest one will be used as our reference \n        </Typography>\n        <MapForm value={formik.values} setvalue={formik.setFieldValue}/>\n        <br />\n\n        \n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Neighborhood\n            </Typography>\n           \n            <br />\n\n        <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Nearby station 1\n        </Typography>\n    <div className={classes.form}>\n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         fullWidth\n          rows={1}\n          id=\"nearby_station1\"\n          name=\"nearby_station1\"\n          label=\"Nearby Station 1\"\n          value={formik.values.nearby_station1}\n          onChange={formik.handleChange}\n          error={formik.touched.nearby_station1 && Boolean(formik.errors.nearby_station1)}\n          helperText={formik.touched.nearby_station1 && formik.errors.nearby_station1}\n          \n        /></div>\n       </>\n\n\n  <br />\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Distance from station 1 (in km)\n        </Typography>\n      <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={1}\n          id=\"distance1\"\n          name=\"distance1\"\n          label=\"distance from station 1\"\n          value={formik.values.distance1}\n          onChange={(e) => {formik.setFieldValue('distance1',parseFloat(e.target.value)); \n          }}\n          error={formik.touched.distance1 && Boolean(formik.errors.distance1)}\n          helperText={formik.touched.distance1 && formik.errors.distance1}\n          \n        /></div>\n       </>\n\n\n  <br />\n\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Nearby station 2\n        </Typography>\n      <div className={classes.form}>\n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         fullWidth\n          rows={1}\n          id=\"nearby_station2\"\n          name=\"nearby_station2\"\n          label=\"Nearby Station 2\"\n          value={formik.values.nearby_station2}\n          onChange={formik.handleChange}\n          error={formik.touched.nearby_station1 && Boolean(formik.errors.nearby_station2)}\n          helperText={formik.touched.nearby_station2 && formik.errors.nearby_station2}\n          \n        /></div>\n       </>\n\n\n  <br />\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Distance from station 2 (in km)\n        </Typography>\n      <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          rows={1}\n          id=\"distance2\"\n          name=\"distance2\"\n          label=\"distance from station 2\"\n          value={formik.values.distance2}\n          onChange={(e) => {formik.setFieldValue('distance2',parseFloat(e.target.value)); \n          }}\n          error={formik.touched.distance2 && Boolean(formik.errors.distance2)}\n          helperText={formik.touched.distance2 && formik.errors.distance2}\n          \n        /></div>\n        </>\n\n  <br />\n  \n\n\n          \n  <Button color=\"default\" variant=\"contained\" fullWidth onClick={(e) => {e.preventDefault();handleOpenmodal();}}>\n          View Instructions\n        </Button>\n\n        <br />\n \n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n\n\n\n        </Grid>\n       \n      </form>\n      </div>\n      </Paper>\n     \n      </Grid>\n      </Grid>\n    </div>\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(RoomForm)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/shop_form.js",["1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364"],"import React,{useState,useEffect} from 'react';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport Eror from './eror'\nimport MapForm from './map_form'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport Rules from './roomrules';\nimport Add from '../addroom.png';\nimport './css/App.css';\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\nconst FILE_SIZE = 1600 * 1024;\nconst SUPPORTED_FORMATS = [\n  \"image/jpg\",\n  \"image/jpeg\",\n  \"image/png\"\n];\n\n\nconst SUPPORTED_FORMATS1 = [\n  \"application/pdf\"\n];\n\nconst validationSchema = yup.object({\n\n\n  title: yup\n  .string('Enter your Room name')\n  .required('Room name is required'),\n\n  gender: yup\n  .string('Enter your Room name')\n  .required('Room name is required'),\n  \n  wifi: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_wifi: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_wifi: yup\n  .boolean()\n  .required('You must answer this '),\n\n  TV: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_TV: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_TV: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cooler: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_cooler: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_cooler: yup\n  .boolean()\n  .required('You must answer this '),\n  \n \n  \n  purified_water: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_purified_water: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_purified_water: yup\n  .boolean()\n  .required('You must answer this '),\n\n  AC: yup\n  .boolean()\n  .required('You must answer this '),\n\n  cost_AC: yup\n  .number().integer('please enter integer'),\n  \n  \n  \n  shop_cleaning: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_cleaning: yup\n  .number().integer('please enter integer'),\n\n  \n  windows: yup\n  .number().integer('please enter integer'),\n  \n  floor_no: yup\n  .number().integer('please enter integer'),\n  \n  cost_electricity: yup\n  .number().integer('please enter integer'),\n  \n  \n  cost_water: yup\n  .number().integer('please enter integer'),\n  \n  \n \n  \n  city: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  state: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  country: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  separate_washroom: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  location: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  landmark: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  pincode: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  length: yup\n  .number().integer('please enter integer'),\n  \n  \n  breadth: yup\n  .number().integer('please enter integer'),\n  \n  \n  \n  height: yup\n  .number().integer('please enter integer'),\n\n  washroom: yup\n  .number().integer('please enter integer'),\n\n  total_rooms: yup\n  .number().integer('please enter integer'),\n\n  total_floors: yup\n  .number().integer('please enter integer'),\n  \n  \n  fans: yup\n  .number().integer('please enter integer'),\n  \n  \n  description: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  furniture: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  building_guard: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cctv_building: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  power_backup: yup\n  .boolean()\n  .required('You must answer this '),\n  \n\n  seller_price: yup\n  .number().integer('please enter integer'),\n  \n  \n  owner_discount: yup\n  .number().integer('please enter integer'),\n  \n  longitude: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  latitude: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  balcony: yup\n  .number().integer('please enter integer'),\n  \n  distance1: yup\n  .number().required('please enter this'),\n  \n  distance2: yup\n  .number().required('please enter this'),\n  \n  nearby_station1: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  nearby_station2: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n \n    \n});\n\nconst useStyles = makeStyles(theme => ({\n \n  myclass: {\n       \n    [theme.breakpoints.up('md')]: {\n      paddingTop:'10%',\n    },\n},\nimageclass: {\n  overflow: 'hidden',\n    width: '85px',\n    height: '85px',\n    position:'relative',\n  borderRadius:'50%',\n  [theme.breakpoints.up('sm')]: {\n    borderRadius:'50%',\n    overflow: 'hidden',\n    width: '100px',\n    height: '100px',\n    position:'relative',\n  },\n  [theme.breakpoints.up('md')]: {\n    borderRadius:'50%',\n    overflow: 'hidden',\n    width: '200px',\n    height: '200px',\n    position:'relative',\n  },\n  marginRight:'1%',\n  marginLeft:'1%',\n\n},\nerorclass: {\n  width:'50%',\n  marginLeft:'25%',\n},\nbuttonclass:{\npadding:0,\nborderRadius:'70%',\n\n},\n\nform: {\n  width: '100%', // Fix IE 11 issue.\n  marginTop: theme.spacing(1),\n \n},\npapernewclass:{\n  padding:25,\n  [theme.breakpoints.up('sm')]: {\n    padding:30,\n  },\n \n},\nnowclass1:{\n  width: 'inherit'\n}\n  }));\n\nfunction ShopForm (props){\n  const theme = useTheme();\n    const classes = useStyles();\n    const hiddenFileInput1 = React.useRef(null);\n    const hiddenFileInput2 = React.useRef(null);\n    const hiddenFileInput3 = React.useRef(null);\n    const hiddenFileInput4 = React.useRef(null);\n    const hiddenFileInput5 = React.useRef(null);\n\n    const [openmodal, setopenmodal] = React.useState(true);\n\n    const handleOpenmodal = () => {\n      setopenmodal(true);\n    };\n\n    const closemodal = () => {\n      setopenmodal(false);\n    };\n\n    const [newredirect,setnewredirect] = React.useState(false);\n    const [myroom,setroom] = useState({\n      wifi:'',\n      cost_wifi:'',\n      removable_wifi:false,\n\n      TV:'',\n      cost_TV:'',\n      removable_TV:false,\n\n      gender:'Any',\n\n      cooler:'',\n      cost_cooler:'',\n      removable_cooler:false,\n\n      AC:'',\n      cost_AC:'',\n      removable_AC:false,\n\n      purified_water:'',\n      cost_purified_water:'',\n      removable_purified_water:false,\n\n      cost_electricity:'',\n      cost_water:'',\n\n      shop_cleaning:'',\n      cost_cleaning:'',\n\n   \n      separate_washroom:'',\n      title:'',\n      seller_price:'',\n      owner_discount:0,\n     \n      length:'',\n      breadth:'',\n      height:'',\n      building_guard:'',\n      category:'',\n      cctv_building:'',\n      balcony:0,\n      total_rooms:1,\n      total_floors:1,\n      washroom:1,\n      windows:0,\n      power_backup:'',\n      furniture:'',\n      facility:'',\n      description:'',\n      fans:1,\n      floor_no:0,\n\n      city:'',\n      state:'',\n      country:'',\n      landmark:'',\n      longitude:'',\n      latitude:'',\n      location:'',\n      pincode:'',\n\n      nearby_station1:'',\n      nearby_station2:'',\n      distance1:0,\n      distance2:0,\n\n      shop_policy:'',\n\n      address_proof:'',\n\n      photo1:'',\n      photo2:'',\n      photo3:'',\n      photo4:'',\n      photo5:'',\n      file1:Add,\n      file2:Add,\n      file3:Add,\n      file4:Add,\n      file5:Add,\n    })\n\n    const [edit,setedit] = useState(false)\n    const [redirect,setredirect] = useState(false)\n    const [error,seterror] = useState(false)\n    const roomid = props.location.state.property_id;\n    const [load,setload] = useState(false)\n   \n\n    useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n              if(props.profile && roomid)\n              {\n                if(props.profile.is_seller && props.profile.profile_completed && props.profile.bank_completed && props.profile.address_completed){\n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcekfhkt274fs/my_shops/${roomid}/`,config);\n                \n                setroom({\n                  wifi:res.data.wifi,\n                  cost_wifi:res.data.cost_wifi,\n                  removable_wifi:res.data.removable_wifi,\n\n                  TV:res.data.TV,\n                  cost_TV:res.data.cost_TV,\n                  removable_TV:res.data.removable_TV,\n\n                  cooler:res.data.cooler,\n                  cost_cooler:res.data.cost_cooler,\n                  removable_cooler:res.data.removable_cooler,\n\n                  gender:res.data.gender,\n\n                 \n\n                  purified_water:res.data.purified_water,\n                  cost_purified_water:res.data.cost_purified_water,\n                  removable_purified_water:res.data.removable_purified_water,\n\n                 \n\n                  cost_electricity:res.data.cost_electricity,\n                  cost_water:res.data.cost_water,\n\n                  shop_cleaning:res.data.shop_cleaning,\n                  cost_cleaning:res.data.cost_cleaning,\n\n                  balcony:res.data.balcony,\n                  separate_washroom:res.data.separate_washroom,\n                  washroom:res.data.washroom,\n                  total_rooms:res.data.total_rooms,\n                  total_floors:res.data.total_floors,\n                  title:res.data.title,\n                  seller_price:res.data.seller_price,\n                  owner_discount:res.data.owner_discount,\n                 \n                  length:res.data.length,\n                  breadth:res.data.breadth,\n                  height:res.data.height,\n                  building_guard:res.data.building_guard,\n                  category:res.data.category,\n                  cctv_building:res.data.cctv_building,\n                  windows:res.data.windows,\n                  power_backup:res.data.power_backup,\n                  furniture:res.data.furniture,\n                  facility:res.data.facility,\n                  description:res.data.description,\n                  fans:res.data.fans,\n                  floor_no:res.data.floor_no,\n\n                  AC:res.data.AC,\n                  cost_AC:res.data.cost_AC,\n                  removable_AC:res.data.removable_AC,\n\n                  city:res.data.city,\n                  state:res.data.state,\n                  country:res.data.country,\n                  landmark:res.data.landmark,\n                  longitude:res.data.longitude,\n                  latitude:res.data.latitude,\n                  location:res.data.location,\n                  pincode:res.data.pincode,\n\n                  nearby_station1:res.data.nearby_station1,\n                  nearby_station2:res.data.nearby_station2,\n                  distance1:res.data.distance1,\n                  distance2:res.data.distance2,\n\n                  shop_policy:res.data.shop_policy,\n\n                  address_proof:res.data.address_proof,\n\n                  photo1:res.data.photo1,\n                  photo2:res.data.photo2,\n                  photo3:res.data.photo3,\n                  photo4:res.data.photo4,\n                  photo5:res.data.photo5,\n\n                  file1:res.data.photo1,\n                  file2:res.data.photo2,\n                  file3:res.data.photo3,\n                  file4:res.data.photo4,\n                  file5:res.data.photo5,\n                })\n                setedit(true);\n                \n              \n              }\n                catch{\n      \n                }\n              }\n              else{\n                setnewredirect(true);\n              }\n        }\n    }\n    \n    ,[props.profile,roomid])\n\n    \n\n  \n\n  const formik = useFormik({\n    enableReinitialize:true,\n    initialValues: {\n      edit:edit,\n      \n      wifi:myroom.wifi,\n      cost_wifi:myroom.cost_wifi,\n      removable_wifi:myroom.removable_wifi,\n\n      TV:myroom.TV,\n      cost_TV:myroom.cost_TV,\n      removable_TV:myroom.removable_TV,\n\n      cooler:myroom.cooler,\n      cost_cooler:myroom.cost_cooler,\n      removable_cooler:myroom.removable_cooler,\n\n      purified_water:myroom.purified_water,\n      cost_purified_water:myroom.cost_purified_water,\n      removable_purified_water:myroom.removable_purified_water,\n\n    \n\n      cost_electricity:myroom.cost_electricity,\n      cost_water:myroom.cost_water,\n\n      gender:myroom.gender,\n\n      shop_cleaning:myroom.shop_cleaning,\n      cost_cleaning:myroom.cost_cleaning,\n\n      AC:myroom.AC,\n      cost_AC:myroom.cost_AC,\n      removable_AC:myroom.removable_AC,\n\n     \n      balcony:myroom.balcony,\n      separate_washroom:myroom.separate_washroom,\n      washroom:myroom.washroom,\n      total_rooms:myroom.total_rooms,\n      total_floors:myroom.total_floors,\n      title:myroom.title,\n      seller_price:myroom.seller_price,\n      owner_discount:myroom.owner_discount,\n    \n      length:myroom.length,\n      breadth:myroom.breadth,\n      height:myroom.height,\n      building_guard:myroom.building_guard,\n      category:myroom.category,\n      cctv_building:myroom.cctv_building,\n      windows:myroom.windows,\n      power_backup:myroom.power_backup,\n      furniture:myroom.furniture,\n      facility:myroom.facility,\n      description:myroom.description,\n      fans:myroom.fans,\n      floor_no:myroom.floor_no,\n\n      city:myroom.city,\n      state:myroom.state,\n      country:myroom.country,\n      landmark:myroom.landmark,\n      longitude:myroom.longitude,\n      latitude:myroom.latitude,\n      location:myroom.location,\n      pincode:myroom.pincode,\n\n      nearby_station1:myroom.nearby_station1,\n      nearby_station2:myroom.nearby_station2,\n      distance1:myroom.distance1,\n      distance2:myroom.distance2,\n\n      shop_policy:myroom.room_policy,\n\n      \n\n      \n      \n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      let form_data = new FormData();\n     \n      setload(true)\n      form_data.append('title',values.title)\n      form_data.append('wifi',values.wifi)\n      form_data.append('cost_wifi',values.cost_wifi)\n      form_data.append('removable_wifi',values.removable_wifi)\n\n      form_data.append('cooler',values.cooler)\n      form_data.append('cost_cooler',values.cost_cooler)\n      form_data.append('removable_cooler',values.removable_cooler)\n\n      form_data.append('TV',values.TV)\n      form_data.append('cost_TV',values.cost_TV)\n      form_data.append('removable_TV',values.removable_TV)\n\n      form_data.append('AC',values.AC)\n      form_data.append('cost_AC',values.cost_AC)\n      form_data.append('removable_AC',values.removable_AC)\n\n      form_data.append('purified_water',values.purified_water)\n      form_data.append('cost_purified_water',values.cost_purified_water)\n      form_data.append('removable_purified_water',values.removable_purified_water)\n\n      form_data.append('shop_cleaning',values.room_cleaning)\n      form_data.append('cost_cleaning',values.cost_cleaning)\n\n      form_data.append('cost_electricity',values.cost_electricity)\n\n      form_data.append('cost_water',values.cost_water)\n\n      form_data.append('location',values.location)\n      form_data.append('gender',values.gender)\n\n      form_data.append('city',values.city)\n      form_data.append('state',values.state)\n      form_data.append('country',values.country)\n      form_data.append('landmark',values.landmark)\n      form_data.append('pincode',values.pincode)\n      form_data.append('longitude',values.longitude)\n      form_data.append('latitude',values.latitude)\n\n      form_data.append('nearby_station1',values.nearby_station1)\n      form_data.append('nearby_station2',values.nearby_station2)\n      form_data.append('distance1',values.distance1)\n      form_data.append('distance2',values.distance2)\n\n      form_data.append('photo1',values.photo1)\n      form_data.append('photo2',values.photo2)\n      form_data.append('photo3',values.photo3)\n      form_data.append('photo4',values.photo4)\n      form_data.append('photo5',values.photo5)\n\n      form_data.append('address_proof',values.address_proof)\n\n \n      form_data.append('windows',values.windows)\n      form_data.append('washroom',values.washroom)\n      form_data.append('total_rooms',values.total_rooms)\n      form_data.append('total_floors',values.total_floors)\n      form_data.append('fans',values.fans)\n      form_data.append('floor_no',values.floor_no)\n      form_data.append('balcony',values.balcony)\n      form_data.append('separate_washroom',values.separate_washroom)\n      form_data.append('cctv_building',values.cctv_building)\n      form_data.append('building_guard',values.building_guard)\n      form_data.append('owner_discount',values.owner_discount)\n      form_data.append('seller_price',values.seller_price)\n      form_data.append('power_backup',values.power_backup)\n      form_data.append('length',values.length)\n      form_data.append('furniture',values.furniture)\n      form_data.append('description',values.description)\n      form_data.append('category',values.category)\n\n      form_data.append('breadth',values.breadth)\n\n      form_data.append('height',values.height)\n\n      \n\n      if(values.shop_policy!='')\n      {\n        form_data.append('shop_policy',values.shop_policy)\n      }\n      else{\n        form_data.append('shop_policy','None')\n      }\n\n     \n\n      if(values.facility!='')\n      {\n        form_data.append('facility',values.facility)\n      }\n      else{\n        form_data.append('facility','None')\n      }\n\n\n\n\n\n\n\n   \n      \n      \n      const config = {\n        headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n\n      \n      if(edit===true)\n      {\n        try{const res = await axios.put(`${process.env.REACT_APP_API_URL}/sourcekfhkt274fs/my_shops/${roomid}/`,form_data,config);\n            setload(false)  \n          setredirect(true)\n              \n              }\n                catch{\n                  setload(false)  \n                 \n                  seterror(true)\n                 \n                }\n      }\n      else{\n        try{const res = await axios.post(`${process.env.REACT_APP_API_URL}/sourcekfhkt274fs/my_shops/`,form_data,config);\n        setload(false)  \n        setredirect(true)\n\n              }\n                catch{\n                  setload(false)  \n                \n                  seterror(true)\n                 \n                }\n      }\n    },\n  });\n\n  const handleclick1 = (name,value,setvalue) => {\n    \n    setvalue(name,value+1)\n}\nconst handleclick2 = (name,value,setvalue) => {\n  if(value>0){setvalue(name,value-1)}\n  \n}\n\nuseEffect(\n  () => {\n    if(formik.values.length!==formik.values.length){formik.setFieldValue('length',0);}\n    \n  \n  }\n,[formik.values.length])\n\nuseEffect(\n  () => {\n    if(formik.values.breadth!==formik.values.breadth){formik.setFieldValue('breadth',0);}\n    \n  \n  }\n,[formik.values.breadth])\n\nuseEffect(\n  () => {\n    if(formik.values.height!==formik.values.height){formik.setFieldValue('height',0);}\n    \n  \n  }\n,[formik.values.height])\n\nuseEffect(\n  () => {\n    \n    if(formik.values.owner_discount!==formik.values.owner_discount){formik.setFieldValue('owner_discount',0);}\n    \n  \n  }\n,[formik.values.owner_discount])\n\nuseEffect(\n  () => {\n    \n    if(formik.values.seller_price!==formik.values.seller_price){formik.setFieldValue('seller_price',0);}\n    \n  \n  }\n,[formik.values.seller_price])\n\nuseEffect(\n  () => {\n    \n    if(formik.values.cost_wifi!==formik.values.cost_wifi){formik.setFieldValue('cost_wifi',0);}\n    \n  \n  }\n,[formik.values.cost_wifi])\n\n\n\n\n\n\nuseEffect(\n  () => {\n    \n\n    if(formik.values.cost_purified_water!==formik.values.cost_purified_water){formik.setFieldValue('cost_purified_water',0);}\n\n    \n  \n  }\n,[formik.values.cost_purified_water])\n\n\nuseEffect(\n  () => {\n    \n    \n    if(formik.values.cost_electricity!==formik.values.cost_electricity){formik.setFieldValue('cost_electricity',0);}\n    if(formik.values.cost_water!==formik.values.cost_water){formik.setFieldValue('cost_water',0);}\n    if(formik.values.cost_AC!==formik.values.cost_AC){formik.setFieldValue('cost_AC',0);}\n    if(formik.values.cost_TV!==formik.values.cost_TV){formik.setFieldValue('cost_TV',0);}\n    if(formik.values.cost_cooler!==formik.values.cost_cooler){formik.setFieldValue('cost_cooler',0);}\n  \n  }\n,[formik.values.cost_electricity,formik.values.cost_water,formik.values.cost_AC,formik.values.cost_TV,formik.values.cooler])\n\n\nuseEffect(\n  () => {\n    \n    if(formik.values.distance1!==formik.values.distance1){formik.setFieldValue('distance1',0);}\n    if(formik.values.distance2!==formik.values.distance2){formik.setFieldValue('distance2',0);}\n    \n    if(formik.values.cost_cleaning!==formik.values.cost_cleaning){formik.setFieldValue('cost_cleaning',0);}\n  \n  }\n,[formik.values.distance1,formik.values.distance2,formik.values.cost_cleaning])\n\n\nconst Filevalidation = (file1) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 3072) {\n              alert(\n                \"File too Big, please select a file less than 3mb\");\n          } \n          else{\n            \n            formik.setFieldValue('address_proof',file1);\n            document.getElementById(\"proof\").innerHTML = '<b>'\n                    + file1.name + '</b> KB UPLOADED';\n          }\n      \n  \n}\n\n\nconst Filevalidation4 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo4',file1);\n            setroom({...myroom,file4: URL.createObjectURL(file1),photo4:file1});\n          }\n      \n  \n}\n\n\nconst Filevalidation3 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo3',file1);\n            setroom({...myroom,file3: URL.createObjectURL(file1),photo3:file1});\n          }\n      \n  \n}\n\nconst Filevalidation2 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo2',file1);\n            setroom({...myroom,file2: URL.createObjectURL(file1),photo2:file1});\n          }\n      \n  \n}\n\nconst Filevalidation1 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo1',file1);\n            setroom({...myroom,file1: URL.createObjectURL(file1),photo1:file1});\n          }\n      \n  \n}\n\nconst Filevalidation5 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo5',file1);\n            setroom({...myroom,file5: URL.createObjectURL(file1),photo5:file1});\n          }\n      \n  \n}\n\nif(props.isAuthenticated===false)\n    {\n      return <Redirect to=\"/login\" />;\n    }\n\n\n\nif(newredirect==true)\n{\n  return <Redirect to={{\n    pathname: '/dashboard/profile',\n    state: { property_id: true }\n  }}/>\n}\n\n\n\n  if(redirect==true)\n  {\n    return <Redirect to='/dashboard/my_shops' />\n  }\n  if(error===true)\n  {\n    return <div className={classes.erorclass}><Eror error={'Cannot process request!'} /></div>;\n  }\n\n  return (\n\n    <div className=\"formbgclass\">\n    <div className={classes.myclass}>\n\n    <Rules open={openmodal} handleopen={handleOpenmodal} handleclose={closemodal} />\n\n      <Backdrop className={classes.backdrop} open={load}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n        \n        <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n      <Grid item lg={5} md={6}>\n           \n           <Paper elevation={5} className={classes.papernewclass}>\n           <div id=\"mapcontainer1\">\n       <form onSubmit={formik.handleSubmit} className={classes.nowclass} >\n         <br />\n       <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n        className={classes.nowclass1}\n      >\n       \n\n        <Grid item className={classes.imageclass}>\n\n        <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput1.current.click();}}>\n          <img src={myroom.file1} className={classes.imageclass}/>\n          </Button>\n        \n        <input type='file'  ref={hiddenFileInput1} style={{display:'none'}}  id='photo1' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation1(event.target.files[0]);}}\n /> \n        \n        </Grid>\n\n        <Grid item className={classes.imageclass}>\n\n        <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput2.current.click();}}>\n          <img src={myroom.file2} className={classes.imageclass}/>\n          </Button>\n        \n        <input type='file'  ref={hiddenFileInput2} style={{display:'none'}}  id='photo2' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n  Filevalidation2(event.target.files[0]);}}/> \n        \n        </Grid>\n\n        <Grid item className={classes.imageclass}>\n\n        <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput3.current.click();}}>\n          <img src={myroom.file3} className={classes.imageclass}/>\n          </Button>\n        \n        <input type='file'  ref={hiddenFileInput3} style={{display:'none'}}  id='photo3' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n  Filevalidation3(event.target.files[0]);}}/> \n        \n        </Grid>\n\n\n       \n\n        \n\n\n      </Grid>\n\n      <br />\n\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid item className={classes.imageclass}>\n\n          <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput4.current.click();}}>\n            <img src={myroom.file4} className={classes.imageclass}/>\n            </Button>\n\n          <input type='file'  ref={hiddenFileInput4} style={{display:'none'}}  id='photo4' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation4(event.target.files[0]);}}/> \n\n          </Grid>\n\n          <Grid item className={classes.imageclass}>\n\n          <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput5.current.click();}}>\n            <img src={myroom.file5} className={classes.imageclass}/>\n            </Button>\n\n          <input type='file'  ref={hiddenFileInput5} style={{display:'none'}}  id='photo5' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation5(event.target.files[0]);}}/> \n\n          </Grid>\n      </Grid>\n\n        <br />\n        <br />\n\n\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        >\n\n\n      <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"title\"\n          name=\"title\"\n          label=\"Room name\"\n          value={formik.values.title}\n          onChange={formik.handleChange}\n          error={formik.touched.title && Boolean(formik.errors.title)}\n          helperText={formik.touched.title && formik.errors.title}\n        />\n        </div>\n        \n        <br />\n\n        \n\n      \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of windows in the shop\n          </Typography>\n       \n          <div>   \n            <Button onClick={() => handleclick1('windows',formik.values.windows,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.windows}\n\n            <Button  onClick={() => handleclick2('windows',formik.values.windows,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n      \n\n    <br />\n\n \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of washrooms in the shop\n          </Typography>\n       \n          <div>   \n            <Button onClick={() => handleclick1('washroom',formik.values.washroom,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.washroom}\n\n            <Button  onClick={() => handleclick2('washroom',formik.values.washroom,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n  \n\n    <br />\n\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of rooms in the shop\n          </Typography>\n      \n          <div>   \n            <Button onClick={() => handleclick1('total_rooms',formik.values.total_rooms,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.total_rooms}\n\n            <Button  onClick={() => handleclick2('total_rooms',formik.values.total_rooms,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n   \n\n    <br />\n\n    <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n        Who you want this shop to rent?\n      </Typography>\n   \n    <FormControl className={classes.form}>\n    \n        <InputLabel id=\"gender\">Gender</InputLabel>\n        <Select\n        labelId=\"gender\"\n        id=\"gender\"\n        value={formik.values.gender}\n        onChange={(e) => formik.setFieldValue('gender',e.target.value)}\n        error={formik.touched.gender && Boolean(formik.errors.gender)}\n        helperText={formik.touched.gender && formik.errors.gender}\n        >\n        <MenuItem value={'Male'}>Male</MenuItem>\n        <MenuItem value={'Female'}>Female</MenuItem>\n        <MenuItem value={'Both Male and Female'}>Both Male and Female</MenuItem>\n        <MenuItem value={'Any'}>Any</MenuItem>\n        \n        </Select>\n    </FormControl>\n \n\n    <br />\n\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of floors in the shop\n          </Typography>\n       \n          <div>   \n            <Button onClick={() => handleclick1('total_floors',formik.values.total_floors,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.total_floors}\n\n            <Button  onClick={() => handleclick2('total_floors',formik.values.total_floors,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n     \n    <br />\n\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of balconys in the room\n          </Typography>\n       \n          <div>   \n            <Button onClick={() => handleclick1('balcony',formik.values.balcony,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.balcony}\n\n            <Button  onClick={() => handleclick2('balcony',formik.values.balcony,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n    \n\n    <br />\n\n\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of fans in the room\n          </Typography>\n      \n          <div>   \n            <Button onClick={() => handleclick1('fans',formik.values.fans,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.fans}\n\n            <Button  onClick={() => handleclick2('fans',formik.values.fans,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n    \n          \n          <br />\n\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Floor no. of room\n          </Typography>\n     \n          <div>   \n            <Button onClick={() => handleclick1('floor_no',formik.values.floor_no,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.floor_no}\n\n            <Button  onClick={() => handleclick2('floor_no',formik.values.floor_no,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n     \n    <br />\n\n   \n\n   \n\n    <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Length of the room\n        </Typography>\n     <div className={classes.form}>\n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"length\"\n          name=\"length\"\n          label=\"length\"\n          value={formik.values.length}\n          onChange={(e) => {formik.setFieldValue('length',parseInt(e.target.value)); \n          }}\n          error={formik.touched.length && Boolean(formik.errors.length)}\n          helperText={formik.touched.length && formik.errors.length}\n        /></div>\n       </>\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Breadth of the room\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"breadth\"\n          name=\"breadth\"\n          label=\"breadth\"\n          value={formik.values.breadth}\n          onChange={(e) => {formik.setFieldValue('breadth',parseInt(e.target.value)); \n          }}\n          error={formik.touched.breadth && Boolean(formik.errors.breadth)}\n          helperText={formik.touched.breadth && formik.errors.breadth}\n        />\n      </>\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Height of the room\n        </Typography>\n      \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"height\"\n          name=\"height\"\n          label=\"height\"\n          value={formik.values.height}\n          onChange={(e) => {formik.setFieldValue('height',parseInt(e.target.value)); \n          }}\n          error={formik.touched.height && Boolean(formik.errors.height)}\n          helperText={formik.touched.height && formik.errors.height}\n        />\n       </>\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Furniture in the room\n        </Typography>\n      \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={4}\n          id=\"furniture\"\n          name=\"furniture\"\n          label=\"furniture\"\n          value={formik.values.furniture}\n          onChange={formik.handleChange}\n          error={formik.touched.furniture && Boolean(formik.errors.furniture)}\n          helperText={formik.touched.furniture && formik.errors.furniture}\n        />\n        </>\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Description of the room\n        </Typography>\n      \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={4}\n          id=\"description\"\n          name=\"description\"\n          label=\"description\"\n          value={formik.values.description}\n          onChange={formik.handleChange}\n          error={formik.touched.description && Boolean(formik.errors.description)}\n          helperText={formik.touched.description && formik.errors.description}\n        />\n       </>\n\n\n\n\n            <br />\n            \n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Facilities\n            </Typography>\n           \n            <br />\n\n            \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Electricity charge\n            </Typography>\n           \n\n<><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of electricity facility(if not any, enter 0)\n        </Typography>\n     \n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         \n         fullWidth\n          rows={1}\n          id=\"cost_electricity\"\n          name=\"cost_electricity\"\n          label=\"Cost of electricity facility\"\n          value={formik.values.cost_electricity}\n          onChange={(e) => {formik.setFieldValue('cost_electricity',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_electricity && Boolean(formik.errors.cost_electricity)}\n          helperText={formik.touched.cost_electricity && formik.errors.cost_electricity}\n        />\n       </>\n\n  <br />\n\n \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Water charge\n            </Typography>\n           \n\n<><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of Water facility(if not any, enter 0)\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_water\"\n          name=\"cost_water\"\n          label=\"Cost of water facility\"\n          value={formik.values.cost_water}\n          onChange={(e) => {formik.setFieldValue('cost_water',parseInt(e.target.value)); \n        }}\n          error={formik.touched.cost_water && Boolean(formik.errors.cost_water)}\n          helperText={formik.touched.cost_water && formik.errors.cost_water}\n        />\n       </>\n\n  <br />\n\n\n           \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              WIFI\n            </Typography>\n           \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have WIFI ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"wifi\">WIFI</InputLabel>\n            <Select\n            labelId=\"wifi\"\n            id=\"wifi\"\n            value={formik.values.wifi}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('wifi',e.target.value);\n            formik.setFieldValue('cost_wifi',0);\n            formik.setFieldValue('removable_wifi',false);}\n            else{formik.setFieldValue('wifi',e.target.value)}}}\n            error={formik.touched.wifi && Boolean(formik.errors.wifi)}\n            helperText={formik.touched.wifi && formik.errors.wifi}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n      \n\n    \n\n\n    {\n      formik.values.wifi ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of wifi facility(if not enter 0)\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_wifi\"\n          name=\"cost_wifi\"\n          label=\"Cost of wifi facility\"\n          value={formik.values.cost_wifi}\n          onChange={(e) => {formik.setFieldValue('cost_wifi',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_wifi && Boolean(formik.errors.cost_wifi)}\n          helperText={formik.touched.cost_wifi && formik.errors.cost_wifi}\n        />\n      </>\n  : null\n    }\n    \n\n{\n      formik.values.wifi ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_wifi\">Removable wifi facility?</InputLabel>\n            <Select\n            labelId=\"removable_wifi\"\n            id=\"removable_wifi\"\n            value={formik.values.removable_wifi}\n            onChange={(e) => {\n            formik.setFieldValue('removable_wifi',e.target.value)}}\n            error={formik.touched.removable_wifi && Boolean(formik.errors.removable_wifi)}\n            helperText={formik.touched.removable_wifi && formik.errors.removable_wifi}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n        </>\n  : null\n    }\n\n<br />\n\n\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              TV\n            </Typography>\n            \n            <br />\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have TV ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"TV\">TV</InputLabel>\n            <Select\n            labelId=\"TV\"\n            id=\"TV\"\n            value={formik.values.TV}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('TV',e.target.value);\n            formik.setFieldValue('cost_TV',0);\n            formik.setFieldValue('removable_TV',false);}\n            else{formik.setFieldValue('TV',e.target.value)}}}\n            error={formik.touched.TV && Boolean(formik.errors.TV)}\n            helperText={formik.touched.TV && formik.errors.TV}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n      \n\n    \n\n\n    {\n      formik.values.TV ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of TV facility(if not enter 0)\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_TV\"\n          name=\"cost_TV\"\n          label=\"Cost of TV facility\"\n          value={formik.values.cost_TV}\n          onChange={(e) => {formik.setFieldValue('cost_TV',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_TV && Boolean(formik.errors.cost_TV)}\n          helperText={formik.touched.cost_TV && formik.errors.cost_TV}\n        />\n        </>\n  : null\n    }\n    \n\n{\n      formik.values.TV ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_TV\">Removable TV facility?</InputLabel>\n            <Select\n            labelId=\"removable_TV\"\n            id=\"removable_TV\"\n            value={formik.values.removable_TV}\n            onChange={(e) => {\n            formik.setFieldValue('removable_TV',e.target.value)}}\n            error={formik.touched.removable_TV && Boolean(formik.errors.removable_TV)}\n            helperText={formik.touched.removable_TV && formik.errors.removable_TV}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n\n<br />\n\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              cooler\n            </Typography>\n         \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have cooler ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"cooler\">cooler</InputLabel>\n            <Select\n            labelId=\"cooler\"\n            id=\"cooler\"\n            value={formik.values.cooler}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('cooler',e.target.value);\n            formik.setFieldValue('cost_cooler',0);\n            formik.setFieldValue('removable_cooler',false);}\n            else{formik.setFieldValue('cooler',e.target.value)}}}\n            error={formik.touched.cooler && Boolean(formik.errors.cooler)}\n            helperText={formik.touched.cooler && formik.errors.cooler}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.cooler ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of cooler facility(if not enter 0)\n        </Typography>\n    \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_cooler\"\n          name=\"cost_cooler\"\n          label=\"Cost of cooler facility\"\n          value={formik.values.cost_cooler}\n          onChange={(e) => {formik.setFieldValue('cost_cooler',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_cooler && Boolean(formik.errors.cost_cooler)}\n          helperText={formik.touched.cost_cooler && formik.errors.cost_cooler}\n        />\n      </>\n  : null\n    }\n    \n\n{\n      formik.values.cooler ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n    \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_cooler\">Removable cooler facility?</InputLabel>\n            <Select\n            labelId=\"removable_cooler\"\n            id=\"removable_cooler\"\n            value={formik.values.removable_cooler}\n            onChange={(e) => {\n            formik.setFieldValue('removable_cooler',e.target.value)}}\n            error={formik.touched.removable_cooler && Boolean(formik.errors.removable_cooler)}\n            helperText={formik.touched.removable_cooler && formik.errors.removable_cooler}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n        </>\n  : null\n    }\n    <br />\n\n\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              AC\n            </Typography>\n            \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have AC ?\n        </Typography>\n        \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"AC\">AC</InputLabel>\n            <Select\n            labelId=\"AC\"\n            id=\"AC\"\n            value={formik.values.AC}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('AC',e.target.value);\n            formik.setFieldValue('cost_AC',0);\n            formik.setFieldValue('removable_AC',false);\n            }\n            else{formik.setFieldValue('AC',e.target.value)}}}\n            error={formik.touched.AC && Boolean(formik.errors.AC)}\n            helperText={formik.touched.AC && formik.errors.AC}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.AC ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of AC facility(if not enter 0)\n        </Typography>\n      \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_AC\"\n          name=\"cost_AC\"\n          label=\"Cost of AC facility\"\n          value={formik.values.cost_AC}\n          onChange={(e) => {formik.setFieldValue('cost_AC',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_AC && Boolean(formik.errors.cost_AC)}\n          helperText={formik.touched.cost_AC && formik.errors.cost_AC}\n        />\n       </>\n  : null\n    }\n\n{\n      formik.values.AC ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n    \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_AC\">Removable AC facility?</InputLabel>\n            <Select\n            labelId=\"removable_AC\"\n            id=\"removable_AC\"\n            value={formik.values.removable_AC}\n            onChange={(e) => {\n            formik.setFieldValue('removable_AC',e.target.value)}}\n           \n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n        </>\n  : null\n    }\n\n\n<br />\n\n\n        \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Purified water\n            </Typography>\n           \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have purified water ?\n        </Typography>\n        \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"purified_water\">purified water</InputLabel>\n            <Select\n            labelId=\"purified_water\"\n            id=\"purified_water\"\n            value={formik.values.purified_water}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('purified_water',e.target.value);\n            formik.setFieldValue('cost_purified_water',0);\n            formik.setFieldValue('removable_purified_water',false);}\n            else{formik.setFieldValue('purified_water',e.target.value)}}}\n            error={formik.touched.purified_water && Boolean(formik.errors.purified_water)}\n            helperText={formik.touched.purified_water && formik.errors.purified_water}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.purified_water ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of purified water facility(if not enter 0)\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_purified_water\"\n          name=\"cost_purified_water\"\n          label=\"Cost of purified water facility\"\n          value={formik.values.cost_purified_water}\n          onChange={(e) => {formik.setFieldValue('cost_purified_water',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_purified_water && Boolean(formik.errors.cost_purified_water)}\n          helperText={formik.touched.cost_purified_water && formik.errors.cost_purified_water}\n        />\n      </>\n  : null\n    }\n    \n\n{\n      formik.values.purified_water ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n    \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_purified_water\">Removable purified water facility?</InputLabel>\n            <Select\n            labelId=\"removable_purified_water\"\n            id=\"removable_purified_water\"\n            value={formik.values.removable_purified_water}\n            onChange={(e) => {\n            formik.setFieldValue('removable_purified_water',e.target.value)}}\n            error={formik.touched.removable_purified_water && Boolean(formik.errors.removable_purified_water)}\n            helperText={formik.touched.removable_purified_water && formik.errors.removable_purified_water}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n\n<br />\n\n       \n\n            <Typography variant=\"h6\" color=\"textPrimary\">\n               Shop cleaning\n            </Typography>\n          \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you provide Shop cleaning ?\n        </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"shop_cleaning\">Shop cleaning</InputLabel>\n            <Select\n            labelId=\"shop_cleaning\"\n            id=\"shop_cleaning\"\n            value={formik.values.shop_cleaning}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('shop_cleaning',e.target.value);\n            formik.setFieldValue('cost_cleaning',0);}\n            else{formik.setFieldValue('shop_cleaning',e.target.value)}}}\n            error={formik.touched.shop_cleaning && Boolean(formik.errors.shop_cleaning)}\n            helperText={formik.touched.shop_cleaning && formik.errors.shop_cleaning}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.shop_cleaning ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of shop cleaning facility (in per cleaning)\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_cleaning\"\n          name=\"cost_cleaning\"\n          label=\"Cost of cleaning facility\"\n          value={formik.values.cost_cleaning}\n          onChange={(e) => {formik.setFieldValue('cost_cleaning',parseInt(e.target.value)); \n          }}\n          onChange={formik.handleChange}\n          error={formik.touched.cost_cleaning && Boolean(formik.errors.cost_cleaning)}\n          helperText={formik.touched.cost_cleaning && formik.errors.cost_cleaning}\n        />\n       </>\n  : null\n    }\n    <br />\n\n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have separate washroom in room ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"separate_washroom\">separate_washroom</InputLabel>\n            <Select\n            labelId=\"separate_washroom\"\n            id=\"separate_washroom\"\n            value={formik.values.separate_washroom}\n            onChange={(e) => {\n            formik.setFieldValue('separate_washroom',e.target.value)}}\n            error={formik.touched.separate_washroom && Boolean(formik.errors.separate_washroom)}\n            helperText={formik.touched.separate_washroom && formik.errors.separate_washroom}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n    \n\n\n    <br />\n\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have building sequrity guard ?\n        </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"building_guard\">building_guard</InputLabel>\n            <Select\n            labelId=\"building_guard\"\n            id=\"building_guard\"\n            value={formik.values.building_guard}\n            onChange={(e) => {\n            formik.setFieldValue('building_guard',e.target.value)}}\n            error={formik.touched.building_guard && Boolean(formik.errors.building_guard)}\n            helperText={formik.touched.building_guard && formik.errors.building_guard}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    <br />\n\n  \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have CCTV in building ?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"cctv_building\">cctv_building</InputLabel>\n            <Select\n            labelId=\"cctv_building\"\n            id=\"cctv_building\"\n            value={formik.values.cctv_building}\n            onChange={(e) => {\n            formik.setFieldValue('cctv_building',e.target.value)}}\n            error={formik.touched.cctv_building && Boolean(formik.errors.cctv_building)}\n            helperText={formik.touched.cctv_building && formik.errors.cctv_building}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    <br />\n\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have power backup in building ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"power_backup\">power_backup</InputLabel>\n            <Select\n            labelId=\"power_backup\"\n            id=\"power_backup\"\n            value={formik.values.power_backup}\n            onChange={(e) => {\n            formik.setFieldValue('power_backup',e.target.value)}}\n            error={formik.touched.power_backup && Boolean(formik.errors.power_backup)}\n            helperText={formik.touched.power_backup && formik.errors.power_backup}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Any additional facility\n        </Typography>\n    \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={4}\n          id=\"facility\"\n          name=\"facility\"\n          label=\"facility\"\n          value={formik.values.facility}\n          onChange={formik.handleChange}\n        />\n       </>\n\n  <br />\n\n\n           \n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Pricing\n            </Typography>\n          \n            \n    \n\n    <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Any discount you are providing (in %)\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"owner_discount\"\n          name=\"owner_discount\"\n          label=\"Discount\"\n          value={formik.values.owner_discount}\n          onChange={(e) => {formik.setFieldValue('owner_discount',parseInt(e.target.value)); \n          }}\n          error={formik.touched.owner_discount && Boolean(formik.errors.owner_discount)}\n          helperText={formik.touched.owner_discount && formik.errors.owner_discount}\n        />\n      </>\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Final Price after discount (excluding the facilities,electricity and water charge that will be added later and wont be counted in discount)\n      </Typography>\n     \n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         \n         fullWidth\n          rows={1}\n          id=\"seller_price\"\n          name=\"seller_price\"\n          label=\"Price\"\n          value={formik.values.seller_price}\n          onChange={(e) => {formik.setFieldValue('seller_price',parseInt(e.target.value)); \n          }}\n          error={formik.touched.seller_price && Boolean(formik.errors.seller_price)}\n          helperText={formik.touched.seller_price && formik.errors.seller_price}\n        />\n        </>\n<br />\n\n\n\n\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Regarding Shop\n            </Typography>\n          \n            <br />\n      \n\n    <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Any shop policy or rules?\n        </Typography>\n    \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={5}\n          id=\"shop_policy\"\n          name=\"shop_policy\"\n          label=\"shop policy\"\n          value={formik.values.shop_policy}\n          onChange={formik.handleChange}\n          \n        />\n      </>\n\n\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Location\n            </Typography>\n           \n            <br />\n            <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Full Address\n        </Typography>\n     \n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         \n         fullWidth\n          rows={5}\n          id=\"location\"\n          name=\"location\"\n          label=\"location\"\n          value={formik.values.location}\n          onChange={formik.handleChange}\n          error={formik.touched.location && Boolean(formik.errors.location)}\n          helperText={formik.touched.location && formik.errors.location}\n          \n        />\n       </>\n  <br />\n\n\n    <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      City name\n        </Typography>\n    \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"city\"\n          name=\"city\"\n          label=\"city\"\n          value={formik.values.city}\n          onChange={formik.handleChange}\n          error={formik.touched.city && Boolean(formik.errors.city)}\n          helperText={formik.touched.city && formik.errors.city}\n          \n        />\n        </>\n  <br />\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      State name\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"state\"\n          name=\"state\"\n          label=\"state\"\n          value={formik.values.state}\n          onChange={formik.handleChange}\n          error={formik.touched.state && Boolean(formik.errors.state)}\n          helperText={formik.touched.state && formik.errors.state}\n          \n        />\n      </>\n\n<br />\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Country name\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"country\"\n          name=\"country\"\n          label=\"country\"\n          value={formik.values.country}\n          onChange={formik.handleChange}\n          error={formik.touched.country && Boolean(formik.errors.country)}\n          helperText={formik.touched.country && formik.errors.country}\n          \n        />\n        </>\n  <br />\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Landmark\n        </Typography>\n      \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"landmark\"\n          name=\"landmark\"\n          label=\"landmark\"\n          value={formik.values.landmark}\n          onChange={formik.handleChange}\n          error={formik.touched.landmark && Boolean(formik.errors.landmark)}\n          helperText={formik.touched.landmark && formik.errors.landmark}\n          \n        />\n       </>\n\n  <br />\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Pincode\n        </Typography>\n    \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"pincode\"\n          name=\"pincode\"\n          label=\"pincode\"\n          value={formik.values.pincode}\n          onChange={formik.handleChange}\n          error={formik.touched.pincode && Boolean(formik.errors.pincode)}\n          helperText={formik.touched.pincode && formik.errors.pincode}\n          \n        />\n        </>\n\n\n  <br />\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Address proof (pdf format)\n        </Typography>\n   </>  \n       \n\n{\n  myroom.address_proof ? <><a href={myroom.address_proof}><p id=\"proof\">UPLOADED ALREADY</p></a></> :  <><input type='file'  id='address' accept='application/pdf' onChange={(event) => {\n    Filevalidation(event.target.files[0]);}}/> \n         <p id=\"proof\">NOT UPLOADED</p></>\n }\n        \n\n  <br />\n\n  \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n        \n        \n        \n\n        \n        <br />\n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Kindly, mark the location of your shop in the map to provide better facilites and optimisation (required*).\n     \n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      \n      Please note that if you have marked multiple time then the latest one will be used as our reference \n        </Typography>\n        <MapForm value={formik.values} setvalue={formik.setFieldValue}/>\n        <br />\n\n       \n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Neighborhood\n            </Typography>\n           \n            <br />\n\n        <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Nearby station 1\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"nearby_station1\"\n          name=\"nearby_station1\"\n          label=\"Nearby Station 1\"\n          value={formik.values.nearby_station1}\n          onChange={formik.handleChange}\n          error={formik.touched.nearby_station1 && Boolean(formik.errors.nearby_station1)}\n          helperText={formik.touched.nearby_station1 && formik.errors.nearby_station1}\n          \n        />\n        </>\n\n\n  <br />\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Distance from station 1 (in km)\n        </Typography>\n     \n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         \n         fullWidth\n          rows={1}\n          id=\"distance1\"\n          name=\"distance1\"\n          label=\"distance from station 1\"\n          value={formik.values.distance1}\n          onChange={(e) => {formik.setFieldValue('distance1',parseFloat(e.target.value)); \n          }}\n          error={formik.touched.distance1 && Boolean(formik.errors.distance1)}\n          helperText={formik.touched.distance1 && formik.errors.distance1}\n          \n        />\n       </>\n\n\n  <br />\n\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Nearby station 2\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"nearby_station2\"\n          name=\"nearby_station2\"\n          label=\"Nearby Station 2\"\n          value={formik.values.nearby_station2}\n          onChange={formik.handleChange}\n          error={formik.touched.nearby_station1 && Boolean(formik.errors.nearby_station2)}\n          helperText={formik.touched.nearby_station2 && formik.errors.nearby_station2}\n          \n        />\n       </>\n\n\n  <br />\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Distance from station 2 (in km)\n        </Typography>\n     \n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         \n         fullWidth\n          rows={1}\n          id=\"distance2\"\n          name=\"distance2\"\n          label=\"distance from station 2\"\n          value={formik.values.distance2}\n          onChange={(e) => {formik.setFieldValue('distance2',parseFloat(e.target.value)); \n          }}\n          error={formik.touched.distance2 && Boolean(formik.errors.distance2)}\n          helperText={formik.touched.distance2 && formik.errors.distance2}\n          \n        />\n       </>\n\n  <br />\n\n\n\n\n  <Button color=\"default\" variant=\"contained\" fullWidth onClick={(e) => {e.preventDefault();handleOpenmodal();}}>\n          View Instructions\n        </Button>\n\n        <br />\n  \n        \n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n\n        </Grid>\n      </form>\n      \n      </div>\n     \n      </Paper>\n      </Grid>\n      \n      </Grid>\n    </div>\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(ShopForm)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/apartment_form.js",["1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413"],"import React,{useState,useEffect} from 'react';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport Eror from './eror'\nimport MapForm from './map_form'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport './css/App.css';\nimport Rules from './roomrules';\nimport Add from '../addroom.png';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst FILE_SIZE = 1600 * 1024;\nconst SUPPORTED_FORMATS = [\n  \"image/jpg\",\n  \"image/jpeg\",\n  \"image/png\"\n];\n\n\nconst SUPPORTED_FORMATS1 = [\n  \"application/pdf\"\n];\n\nconst validationSchema = yup.object({\n\n\n  \n  title: yup\n  .string('Enter your Room name')\n  .required('Room name is required'),\n\n  gender: yup\n  .string('Enter your Room name')\n  .required('Room name is required'),\n  \n  wifi: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_wifi: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_wifi: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  TV: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_TV: yup\n  .number().integer('please enter integer'),\n\n  BHK: yup\n  .number().integer('please enter integer'),\n\n  total_beds: yup\n  .number().integer('please enter integer'),\n\n  total_AC: yup\n  .number().integer('please enter integer'),\n\n  total_TV: yup\n  .number().integer('please enter integer'),\n\n  total_cooler: yup\n  .number().integer('please enter integer'),\n\n  total_geyser: yup\n  .number().integer('please enter integer'),\n\n  total_rooms: yup\n  .number().integer('please enter integer'),\n\n  total_floors: yup\n  .number().integer('please enter integer'),\n\n  washroom: yup\n  .number().integer('please enter integer'),\n\n  sofa: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  \n  removable_house_TV: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  house_refridgerator: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  \n  \n  purified_water: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_purified_water: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_purified_water: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  AC: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_AC: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_AC: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  geyser: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_geyser: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_geyser: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cooler: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_cooler: yup\n  .number().integer('please enter integer'),\n  \n  \n  removable_cooler: yup\n  .boolean()\n  .required('You must answer this '),\n  \n \n  \n  laundry: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_laundry: yup\n  .number().integer('please enter integer'),\n\n  removable_laundry: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  \n  \n  apartment_cleaning: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cost_cleaning: yup\n  .number().integer('please enter integer'),\n  \n  \n  BHK: yup\n  .number().integer('please enter integer'),\n  \n  windows: yup\n  .number().integer('please enter integer'),\n  \n  floor_no: yup\n  .number().integer('please enter integer'),\n  \n  cost_electricity: yup\n  .number().integer('please enter integer'),\n  \n  \n  cost_water: yup\n  .number().integer('please enter integer'),\n  \n  \n \n\n  apartment_type: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  city: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  state: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  country: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n \n  \n  location: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  landmark: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  pincode: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  length: yup\n  .number().integer('please enter integer'),\n  \n  \n  breadth: yup\n  .number().integer('please enter integer'),\n  \n  \n  \n  height: yup\n  .number().integer('please enter integer'),\n  \n  \n  fans: yup\n  .number().integer('please enter integer'),\n  \n  bed_type: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  description: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  furniture: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  building_guard: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  cctv_building: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  power_backup: yup\n  .boolean()\n  .required('You must answer this '),\n  \n  \n  \n  seller_price: yup\n  .number().integer('please enter integer'),\n  \n  \n  owner_discount: yup\n  .number().integer('please enter integer'),\n  \n  \n  \n  longitude: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  latitude: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  balcony: yup\n  .number().integer('please enter integer'),\n  \n  distance1: yup\n  .number().required('please enter this'),\n  \n  distance2: yup\n  .number().required('please enter this'),\n  \n  nearby_station1: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n  nearby_station2: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n  \n\n    \n});\n\nconst useStyles = makeStyles(theme => ({\n  myclass: {\n       \n    [theme.breakpoints.up('md')]: {\n      paddingTop:'10%',\n    },\n},\nimageclass: {\n  overflow: 'hidden',\n    width: '85px',\n    height: '85px',\n    position:'relative',\n  borderRadius:'50%',\n  [theme.breakpoints.up('sm')]: {\n    borderRadius:'50%',\n    overflow: 'hidden',\n    width: '100px',\n    height: '100px',\n    position:'relative',\n  },\n  [theme.breakpoints.up('md')]: {\n    borderRadius:'50%',\n    overflow: 'hidden',\n    width: '200px',\n    height: '200px',\n    position:'relative',\n  },\n  marginRight:'1%',\n  marginLeft:'1%',\n\n},\nerorclass: {\n  width:'50%',\n  marginLeft:'25%',\n},\nbuttonclass:{\npadding:0,\nborderRadius:'70%',\n\n},\n\nform: {\n  width: '100%', // Fix IE 11 issue.\n  marginTop: theme.spacing(1),\n \n},\npapernewclass:{\n  padding:25,\n  [theme.breakpoints.up('sm')]: {\n    padding:30,\n  },\n \n},\nnowclass1:{\n  width: 'inherit'\n}\n  }));\n\nfunction ApartmentForm (props){\n  const theme = useTheme();\n    const classes = useStyles();\n    const hiddenFileInput1 = React.useRef(null);\n    const hiddenFileInput2 = React.useRef(null);\n    const hiddenFileInput3 = React.useRef(null);\n    const hiddenFileInput4 = React.useRef(null);\n    const hiddenFileInput5 = React.useRef(null);\n    const hiddenFileInput6 = React.useRef(null);\n\n    const [openmodal, setopenmodal] = React.useState(true);\n\n    const handleOpenmodal = () => {\n      setopenmodal(true);\n    };\n\n    const closemodal = () => {\n      setopenmodal(false);\n    };\n\n\n   \n    const [myroom,setroom] = useState({\n      wifi:'',\n      cost_wifi:'',\n      removable_wifi:false,\n\n      TV:'',\n      cost_TV:'',\n      removable_house_TV:false,\n\n      house_refridgerator:'',\n      cost_refridgerator:'',\n      removable_house_refridgerator:false,\n\n      purified_water:'',\n      cost_purified_water:'',\n      removable_purified_water:false,\n\n      AC:'',\n      cost_AC:'',\n      removable_AC:'',\n\n      gender:'Any',\n\n      laundry:'',\n      cost_laundry:0,\n      removable_laundry:false,\n\n      geyser:'',\n      cost_geyser:'',\n      removable_geyser:false,\n\n      cooler:'',\n      cost_cooler:'',\n      removable_cooler:false,\n\n      cost_electricity:'',\n      cost_water:'',\n\n      apartment_cleaning:'',\n      cost_cleaning:'',\n\n      BHK:0,\n      balcony:0,\n    \n      title:'',\n      seller_price:'',\n      owner_discount:0,\n      bed_type:'',\n      length:'',\n      breadth:'',\n      height:'',\n      building_guard:'',\n      category:'',\n      cctv_building:'',\n      windows:0,\n      power_backup:'',\n      furniture:'',\n      facility:'',\n      description:'',\n      fans:1,\n      floor_no:0,\n    \n\n      city:'',\n      state:'',\n      country:'',\n      landmark:'',\n      longitude:'',\n      latitude:'',\n      location:'',\n      pincode:'',\n\n      nearby_station1:'',\n      nearby_station2:'',\n      distance1:0,\n      distance2:0,\n\n      apartment_policy:'',\n\n      address_proof:'',\n\n      photo1:'',\n      photo2:'',\n      photo3:'',\n      photo4:'',\n      photo5:'',\n      photo6:'',\n      file1:Add,\n      file2:Add,\n      file3:Add,\n      file4:Add,\n      file5:Add,\n      file6:Add,\n\n      total_rooms:1,\n      total_floors:1,\n      total_beds:1,\n      sofa:false,\n      total_AC:0,\n      total_TV:0,\n      total_cooler:0,\n      total_geyser:0,\n      apartment_type:'',\n      washroom:0,\n\n    })\n\n    const [edit,setedit] = useState(false)\n    const [redirect,setredirect] = useState(false)\n    const [error,seterror] = useState(false)\n    const roomid = props.location.state.property_id;\n    const [load,setload] = useState(false)\n   const [newredirect,setnewredirect] = useState(false);\n\n    useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n              if(props.profile && roomid)\n              {\n                if(props.profile.is_seller && props.profile.profile_completed && props.profile.bank_completed && props.profile.address_completed){\n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourceddnvslf54d/my_apartments/${roomid}/`,config);\n               \n                setroom({\n                  wifi:res.data.wifi,\n                  cost_wifi:res.data.cost_wifi,\n                  removable_wifi:res.data.removable_wifi,\n\n                  TV:res.data.TV,\n                  cost_TV:res.data.cost_TV,\n                  removable_house_TV:res.data.removable_house_TV,\n\n                  house_refridgerator:res.data.house_refridgerator,\n                  cost_refridgerator:res.data.cost_refridgerator,\n                  removable_house_refridgerator:res.data.removable_house_refridgerator,\n\n                  purified_water:res.data.purified_water,\n                  cost_purified_water:res.data.cost_purified_water,\n                  removable_purified_water:res.data.removable_purified_water,\n\n                  AC:res.data.AC,\n                  cost_AC:res.data.cost_AC,\n                  removable_AC:res.data.removable_AC,\n\n                  gender:res.data.gender,\n\n                  laundry:res.data.laundry,\n                  cost_laundry:res.data.cost_laundry,\n                  removable_laundry:res.data.removable_laundry,\n\n                  geyser:res.data.geyser,\n                  cost_geyser:res.data.cost_geyser,\n                  removable_geyser:res.data.removable_geyser,\n\n                  cooler:res.data.cooler,\n                  cost_cooler:res.data.cost_cooler,\n                  removable_cooler:res.data.removable_cooler,\n\n                  cost_electricity:res.data.cost_electricity,\n                  cost_water:res.data.cost_water,\n\n                  apartment_cleaning:res.data.apartment_cleaning,\n                  cost_cleaning:res.data.cost_cleaning,\n\n                  BHK:res.data.BHK,\n                  balcony:res.data.balcony,\n                  \n                  title:res.data.title,\n                  seller_price:res.data.seller_price,\n                  owner_discount:res.data.owner_discount,\n                  bed_type:res.data.bed_type,\n                  length:res.data.length,\n                  breadth:res.data.breadth,\n                  height:res.data.height,\n                  building_guard:res.data.building_guard,\n                  category:res.data.category,\n                  cctv_building:res.data.cctv_building,\n                  windows:res.data.windows,\n                  power_backup:res.data.power_backup,\n                  furniture:res.data.furniture,\n                  facility:res.data.facility,\n                  description:res.data.description,\n                  fans:res.data.fans,\n                  floor_no:res.data.floor_no,\n\n                  city:res.data.city,\n                  state:res.data.state,\n                  country:res.data.country,\n                  landmark:res.data.landmark,\n                  longitude:res.data.longitude,\n                  latitude:res.data.latitude,\n                  location:res.data.location,\n                  pincode:res.data.pincode,\n\n                  nearby_station1:res.data.nearby_station1,\n                  nearby_station2:res.data.nearby_station2,\n                  distance1:res.data.distance1,\n                  distance2:res.data.distance2,\n\n                  apartment_policy:res.data.apartment_policy,\n\n                  address_proof:res.data.address_proof,\n\n                  photo1:res.data.photo1,\n                  photo2:res.data.photo2,\n                  photo3:res.data.photo3,\n                  photo4:res.data.photo4,\n                  photo5:res.data.photo5,\n                  photo6:res.data.photo6,\n\n                  file1:res.data.photo1,\n                  file2:res.data.photo2,\n                  file3:res.data.photo3,\n                  file4:res.data.photo4,\n                  file5:res.data.photo5,\n                  file6:res.data.photo6,\n\n                  total_rooms:res.data.total_rooms,\n                    total_floors:res.data.total_floors,\n                    total_beds:res.data.total_beds,\n                    sofa:res.data.sofa,\n                    total_AC:res.data.total_AC,\n                    total_TV:res.data.total_TV,\n                    total_cooler:res.data.total_cooler,\n                    total_geyser:res.data.total_geyser,\n                    apartment_type:res.data.apartment_type,\n                    washroom:res.data.washroom,\n                })\n                setedit(true);\n                \n              \n              }\n                catch{\n\n                  seterror(true)\n      \n                }\n              }\n              else{\n                setnewredirect(true);\n              }\n        }\n    }\n    \n    ,[props.profile,roomid])\n\n    \n\n  \n\n  const formik = useFormik({\n    enableReinitialize:true,\n    initialValues: {\n      edit:edit,\n      \n      wifi:myroom.wifi,\n      cost_wifi:myroom.cost_wifi,\n      removable_wifi:myroom.removable_wifi,\n\n      TV:myroom.TV,\n      cost_TV:myroom.cost_TV,\n      removable_house_TV:myroom.removable_house_TV,\n\n      house_refridgerator:myroom.house_refridgerator,\n      cost_refridgerator:myroom.cost_refridgerator,\n      removable_house_refridgerator:myroom.removable_house_refridgerator,\n\n      purified_water:myroom.purified_water,\n      cost_purified_water:myroom.cost_purified_water,\n      removable_purified_water:myroom.removable_purified_water,\n\n      AC:myroom.AC,\n      cost_AC:myroom.cost_AC,\n      removable_AC:myroom.removable_AC,\n\n      laundry:myroom.laundry,\n      cost_laundry:myroom.cost_laundry,\n      removable_laundry:myroom.removable_laundry,\n\n      geyser:myroom.geyser,\n      cost_geyser:myroom.cost_geyser,\n      removable_geyser:myroom.removable_geyser,\n\n      gender:myroom.gender,\n\n      cooler:myroom.cooler,\n      cost_cooler:myroom.cost_cooler,\n      removable_cooler:myroom.removable_cooler,\n\n\n      cost_electricity:myroom.cost_electricity,\n      cost_water:myroom.cost_water,\n\n      apartment_cleaning:myroom.apartment_cleaning,\n      cost_cleaning:myroom.cost_cleaning,\n\n      BHK:myroom.BHK,\n      balcony:myroom.balcony,\n      \n      title:myroom.title,\n      seller_price:myroom.seller_price,\n      owner_discount:myroom.owner_discount,\n      length:myroom.length,\n      breadth:myroom.breadth,\n      height:myroom.height,\n      building_guard:myroom.building_guard,\n      category:myroom.category,\n      cctv_building:myroom.cctv_building,\n      windows:myroom.windows,\n      power_backup:myroom.power_backup,\n      furniture:myroom.furniture,\n      facility:myroom.facility,\n      description:myroom.description,\n      fans:myroom.fans,\n      floor_no:myroom.floor_no,\n\n      bed_type:myroom.bed_type,\n\n      city:myroom.city,\n      state:myroom.state,\n      country:myroom.country,\n      landmark:myroom.landmark,\n      longitude:myroom.longitude,\n      latitude:myroom.latitude,\n      location:myroom.location,\n      pincode:myroom.pincode,\n\n      nearby_station1:myroom.nearby_station1,\n      nearby_station2:myroom.nearby_station2,\n      distance1:myroom.distance1,\n      distance2:myroom.distance2,\n\n      apartment_policy:myroom.apartment_policy,\n\n      total_rooms:myroom.total_rooms,\n    total_floors:myroom.total_floors,\n    total_beds:myroom.total_beds,\n    sofa:myroom.sofa,\n    total_AC:myroom.total_AC,\n    total_TV:myroom.total_TV,\n    total_cooler:myroom.total_cooler,\n    total_geyser:myroom.total_geyser,\n    apartment_type:myroom.apartment_type,\n    washroom:myroom.washroom,\n\n    \n\n\n      \n      \n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      let form_data = new FormData();\n    \n      setload(true)\n      form_data.append('title',values.title)\n      form_data.append('wifi',values.wifi)\n      form_data.append('cost_wifi',values.cost_wifi)\n      form_data.append('removable_wifi',values.removable_wifi)\n\n      form_data.append('TV',values.TV)\n      form_data.append('cost_TV',values.cost_TV)\n      form_data.append('removable_house_TV',values.removable_house_TV)\n\n      form_data.append('house_refridgerator',values.house_refridgerator)\n      form_data.append('cost_refridgerator',values.cost_refridgerator)\n      form_data.append('removable_house_refridgerator',values.removable_house_refridgerator)\n\n      form_data.append('AC',values.AC)\n      form_data.append('cost_AC',values.cost_AC)\n      form_data.append('removable_AC',values.removable_AC)\n\n      form_data.append('purified_water',values.purified_water)\n      form_data.append('cost_purified_water',values.cost_purified_water)\n      form_data.append('removable_purified_water',values.removable_purified_water)\n\n      form_data.append('geyser',values.geyser)\n      form_data.append('cost_geyser',values.cost_geyser)\n      form_data.append('removable_geyser',values.removable_geyser)\n\n      form_data.append('cooler',values.cooler)\n      form_data.append('cost_cooler',values.cost_cooler)\n      form_data.append('removable_cooler',values.removable_cooler)\n\n      form_data.append('gender',values.gender)\n\n      form_data.append('laundry',values.laundry)\n      form_data.append('cost_laundry',values.cost_laundry)\n      form_data.append('removable_laundry',values.removable_laundry)\n\n      form_data.append('apartment_cleaning',values.apartment_cleaning)\n      form_data.append('cost_cleaning',values.cost_cleaning)\n\n      form_data.append('cost_electricity',values.cost_electricity)\n\n      form_data.append('cost_water',values.cost_water)\n\n      form_data.append('location',values.location)\n\n      form_data.append('city',values.city)\n      form_data.append('state',values.state)\n      form_data.append('country',values.country)\n      form_data.append('landmark',values.landmark)\n      form_data.append('pincode',values.pincode)\n      form_data.append('longitude',values.longitude)\n      form_data.append('latitude',values.latitude)\n\n      form_data.append('nearby_station1',values.nearby_station1)\n      form_data.append('nearby_station2',values.nearby_station2)\n      form_data.append('distance1',values.distance1)\n      form_data.append('distance2',values.distance2)\n\n      form_data.append('photo1',values.photo1)\n      form_data.append('photo2',values.photo2)\n      form_data.append('photo3',values.photo3)\n      form_data.append('photo4',values.photo4)\n      form_data.append('photo5',values.photo5)\n      form_data.append('photo6',values.photo6)\n\n      form_data.append('address_proof',values.address_proof)\n\n      form_data.append('BHK',values.BHK)\n      form_data.append('windows',values.windows)\n      form_data.append('fans',values.fans)\n      form_data.append('floor_no',values.floor_no)\n      form_data.append('balcony',values.balcony)\n      form_data.append('separate_washroom',values.separate_washroom)\n      form_data.append('cctv_building',values.cctv_building)\n      form_data.append('building_guard',values.building_guard)\n     \n      form_data.append('owner_discount',values.owner_discount)\n      form_data.append('seller_price',values.seller_price)\n      form_data.append('power_backup',values.power_backup)\n      form_data.append('length',values.length)\n      form_data.append('furniture',values.furniture)\n      form_data.append('description',values.description)\n      form_data.append('category',values.category)\n      form_data.append('bed_type',values.bed_type)\n\n\n      form_data.append('breadth',values.breadth)\n\n      form_data.append('height',values.height)\n\n      form_data.append('washroom',values.washroom)\n      form_data.append('total_rooms',values.total_rooms)\n      form_data.append('total_floors',values.total_floors)\n      form_data.append('total_beds',values.total_beds)\n      form_data.append('sofa',values.sofa)\n      form_data.append('total_AC',values.total_AC)\n      form_data.append('total_TV',values.total_TV)\n      form_data.append('total_cooler',values.total_cooler)\n      form_data.append('total_geyser',values.total_geyser)\n      form_data.append('apartment_type',values.apartment_type)\n\n      if(values.apartment_policy!='')\n      {\n        form_data.append('apartment_policy',values.apartment_policy)\n      }\n      else{\n        form_data.append('apartment_policy','None')\n      }\n\n    \n      if(values.facility!='')\n      {\n        form_data.append('facility',values.facility)\n      }\n      else{\n        form_data.append('facility','None')\n      }\n\n\n\n\n\n\n\n   \n      \n     \n      const config = {\n        headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n\n      \n      if(edit===true)\n      {\n        try{const res = await axios.put(`${process.env.REACT_APP_API_URL}/sourceddnvslf54d/my_apartments/${roomid}/`,form_data,config);\n            setload(false)  \n          setredirect(true)\n              \n              }\n                catch{\n                  setload(false)  \n               \n                  seterror(true)\n                 \n                }\n      }\n      else{\n        try{const res = await axios.post(`${process.env.REACT_APP_API_URL}/sourceddnvslf54d/my_apartments/`,form_data,config);\n        setload(false)  \n        setredirect(true)\n\n              }\n                catch{\n                  setload(false)  \n               \n                  seterror(true)\n                  \n                 \n                }\n      }\n    },\n  });\n\n  const handleclick1 = (name,value,setvalue) => {\n    \n    setvalue(name,value+1)\n}\nconst handleclick2 = (name,value,setvalue) => {\n  if(value>0){setvalue(name,value-1)}\n  \n}\n\nuseEffect(\n  () => {\n    if(formik.values.length!==formik.values.length){formik.setFieldValue('length',0);}\n    \n  \n  }\n,[formik.values.length])\n\nuseEffect(\n  () => {\n    if(formik.values.breadth!==formik.values.breadth){formik.setFieldValue('breadth',0);}\n    \n  \n  }\n,[formik.values.breadth])\n\nuseEffect(\n  () => {\n    if(formik.values.height!==formik.values.height){formik.setFieldValue('height',0);}\n    \n  \n  }\n,[formik.values.height])\n\nuseEffect(\n  () => {\n    \n    if(formik.values.owner_discount!==formik.values.owner_discount){formik.setFieldValue('owner_discount',0);}\n    \n  \n  }\n,[formik.values.owner_discount])\n\nuseEffect(\n  () => {\n    \n    if(formik.values.seller_price!==formik.values.seller_price){formik.setFieldValue('seller_price',0);}\n    \n  \n  }\n,[formik.values.seller_price])\n\nuseEffect(\n  () => {\n    \n    if(formik.values.cost_wifi!==formik.values.cost_wifi){formik.setFieldValue('cost_wifi',0);}\n    \n  \n  }\n,[formik.values.cost_wifi])\n\nuseEffect(\n  () => {\n    \n    if(formik.values.cost_refridgerator!==formik.values.cost_refridgerator){formik.setFieldValue('cost_refridgerator',0);}\n   \n    \n  \n  }\n,[formik.values.cost_refridgerator])\n\n\nuseEffect(\n  () => {\n    \n    if(formik.values.cost_TV!==formik.values.cost_TV){formik.setFieldValue('cost_TV',0);}\n  \n    \n  \n  }\n,[formik.values.cost_TV])\n\n\nuseEffect(\n  () => {\n    \n    if(formik.values.cost_AC!==formik.values.cost_AC){formik.setFieldValue('cost_AC',0);}\n    if(formik.values.cost_purified_water!==formik.values.cost_purified_water){formik.setFieldValue('cost_purified_water',0);}\n    if(formik.values.cost_geyser!==formik.values.cost_geyser){formik.setFieldValue('cost_geyser',0);}\n    \n  \n  }\n,[formik.values.cost_AC,formik.values.cost_purified_water,formik.values.cost_geyser])\n\n\nuseEffect(\n  () => {\n    \n    if(formik.values.cost_cooler!==formik.values.cost_cooler){formik.setFieldValue('cost_cooler',0);}\n    if(formik.values.cost_electricity!==formik.values.cost_electricity){formik.setFieldValue('cost_electricity',0);}\n    if(formik.values.cost_water!==formik.values.cost_water){formik.setFieldValue('cost_water',0);}\n    \n  \n  }\n,[formik.values.cost_cooler,formik.values.cost_electricity,formik.values.cost_water])\n\n\nuseEffect(\n  () => {\n    \n    if(formik.values.distance1!==formik.values.distance1){formik.setFieldValue('distance1',0);}\n    if(formik.values.distance2!==formik.values.distance2){formik.setFieldValue('distance2',0);}\n    \n    if(formik.values.cost_laundry!==formik.values.cost_laundry){formik.setFieldValue('cost_laundry',0);}\n   \n    if(formik.values.cost_cleaning!==formik.values.cost_cleaning){formik.setFieldValue('cost_cleaning',0);}\n  \n  }\n,[formik.values.distance1,formik.values.distance2,formik.values.cost_laundry,formik.values.cost_cleaning])\n\n\n\nconst Filevalidation = (file1) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 3072) {\n              alert(\n                \"File too Big, please select a file less than 3mb\");\n          } \n          else{\n            \n            formik.setFieldValue('address_proof',file1);\n            document.getElementById(\"proof\").innerHTML = '<b>'\n                    + file1.name + '</b> KB UPLOADED';\n          }\n      \n  \n}\n\n\nconst Filevalidation4 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo4',file1);\n            setroom({...myroom,file4: URL.createObjectURL(file1),photo4:file1});\n          }\n      \n  \n}\n\n\nconst Filevalidation3 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo3',file1);\n            setroom({...myroom,file3: URL.createObjectURL(file1),photo3:file1});\n          }\n      \n  \n}\n\nconst Filevalidation2 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo2',file1);\n            setroom({...myroom,file2: URL.createObjectURL(file1),photo2:file1});\n          }\n      \n  \n}\n\nconst Filevalidation1 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo1',file1);\n            setroom({...myroom,file1: URL.createObjectURL(file1),photo1:file1});\n          }\n      \n  \n}\n\nconst Filevalidation5 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo5',file1);\n            setroom({...myroom,file5: URL.createObjectURL(file1),photo5:file1});\n          }\n      \n  \n}\n\n\nconst Filevalidation6 = (file1,name) => {\n  \n \n  // Check if any file is selected.\n  \n     \n\n          const fsize =file1.size;\n          const file = Math.round((fsize / 1024));\n          // The size of the file.\n          if (file >= 10240) {\n              alert(\n                \"File too Big, please select a file less than 10mb\");\n          } \n          else{\n            \n            formik.setFieldValue('photo6',file1);\n            setroom({...myroom,file6: URL.createObjectURL(file1),photo6:file1});\n          }\n      \n  \n}\n\nif(props.isAuthenticated===false)\n    {\n      return <Redirect to=\"/login\" />;\n    }\n\nif(newredirect==true)\n{\n  return <Redirect to={{\n    pathname: '/dashboard/profile',\n    state: { property_id: true }\n  }}/>\n}\n\n\n  if(redirect==true)\n  {\n    return <Redirect to='/dashboard/my_housing' />\n  }\n  if(error===true)\n  {\n    return <div className={classes.erorclass}><Eror error={'Cannot process request!'} /></div>;\n  }\n\n  return (\n    <div className=\"formbgclass\">\n    <div className={classes.myclass}>\n\n    <Rules open={openmodal} handleopen={handleOpenmodal} handleclose={closemodal} />\n\n      <Backdrop className={classes.backdrop} open={load}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n        \n        <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n      <Grid item lg={5} md={6}>\n           \n           <Paper elevation={5} className={classes.papernewclass}>\n           <div id=\"mapcontainer1\">\n       <form onSubmit={formik.handleSubmit} className={classes.nowclass} >\n         <br />\n\n         <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n        className={classes.nowclass1}\n      >\n       \n\n        <Grid item className={classes.imageclass}>\n\n        <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput1.current.click();}}>\n          <img src={myroom.file1} className={classes.imageclass}/>\n          </Button>\n        \n        <input type='file'  ref={hiddenFileInput1} style={{display:'none'}}  id='photo1' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation1(event.target.files[0]);}}\n /> \n        \n        </Grid>\n\n        <Grid item className={classes.imageclass}>\n\n        <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput2.current.click();}}>\n          <img src={myroom.file2} className={classes.imageclass}/>\n          </Button>\n        \n        <input type='file'  ref={hiddenFileInput2} style={{display:'none'}}  id='photo2' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n  Filevalidation2(event.target.files[0]);}}/> \n        \n        </Grid>\n\n        <Grid item className={classes.imageclass}>\n\n        <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput3.current.click();}}>\n          <img src={myroom.file3} className={classes.imageclass}/>\n          </Button>\n        \n        <input type='file'  ref={hiddenFileInput3} style={{display:'none'}}  id='photo3' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n  Filevalidation3(event.target.files[0]);}}/> \n        \n        </Grid>\n\n\n       \n\n        \n\n\n      </Grid>\n\n      <br />\n\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid item className={classes.imageclass}>\n\n          <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput4.current.click();}}>\n            <img src={myroom.file4} className={classes.imageclass}/>\n            </Button>\n\n          <input type='file'  ref={hiddenFileInput4} style={{display:'none'}}  id='photo4' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation4(event.target.files[0]);}}/> \n\n          </Grid>\n\n          <Grid item className={classes.imageclass}>\n\n          <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput5.current.click();}}>\n            <img src={myroom.file5} className={classes.imageclass}/>\n            </Button>\n\n          <input type='file'  ref={hiddenFileInput5} style={{display:'none'}}  id='photo5' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation5(event.target.files[0]);}}/> \n\n          </Grid>\n\n          <Grid item className={classes.imageclass}>\n\n          <Button variant='contained' className={classes.buttonclass} onClick={(e) => {hiddenFileInput6.current.click();}}>\n            <img src={myroom.file6} className={classes.imageclass}/>\n            </Button>\n\n          <input type='file'  ref={hiddenFileInput6} style={{display:'none'}}  id='photo6' accept='image/png,image/jpeg,image/jpg' onChange={(event) => {\n          Filevalidation6(event.target.files[0]);}}/> \n\n          </Grid>\n      </Grid>\n\n\n        <br />\n        <br />\n\n        <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        >\n\n      \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"title\"\n          name=\"title\"\n          label=\"House name\"\n          value={formik.values.title}\n          onChange={formik.handleChange}\n          error={formik.touched.title && Boolean(formik.errors.title)}\n          helperText={formik.touched.title && formik.errors.title}\n        />\n       \n        <br />\n\n        \n\n\n       \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of windows in the house\n          </Typography>\n       \n          <div>   \n            <Button onClick={() => handleclick1('windows',formik.values.windows,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.windows}\n\n            <Button  onClick={() => handleclick2('windows',formik.values.windows,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n     \n\n    <br />\n\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of balcony in the House\n          </Typography>\n        \n          <div>   \n            <Button onClick={() => handleclick1('balcony',formik.values.balcony,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.balcony}\n\n            <Button  onClick={() => handleclick2('balcony',formik.values.balcony,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n     \n\n    <br />\n\n\n    <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n        Who you want this House to rent?\n      </Typography>\n    \n    <FormControl className={classes.form}>\n    \n        <InputLabel id=\"gender\">Gender</InputLabel>\n        <Select\n        labelId=\"gender\"\n        id=\"gender\"\n        value={formik.values.gender}\n        onChange={(e) => formik.setFieldValue('gender',e.target.value)}\n        error={formik.touched.gender && Boolean(formik.errors.gender)}\n        helperText={formik.touched.gender && formik.errors.gender}\n        >\n        <MenuItem value={'Male'}>Male</MenuItem>\n        <MenuItem value={'Female'}>Female</MenuItem>\n        <MenuItem value={'Both Male and Female'}>Both Male and Female</MenuItem>\n        <MenuItem value={'Any'}>Any</MenuItem>\n        \n        </Select>\n    </FormControl>\n  \n  <br />\n\n\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of fans in the House\n          </Typography>\n       \n          <div>   \n            <Button onClick={() => handleclick1('fans',formik.values.fans,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.fans}\n\n            <Button  onClick={() => handleclick2('fans',formik.values.fans,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n     \n          \n          <br />\n\n       \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n        House type\n          </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"apartment_type\">House type</InputLabel>\n            <Select\n            labelId=\"apartment_type\"\n            id=\"apartment_type\"\n            value={formik.values.apartment_type}\n            onChange={(e) => formik.setFieldValue('apartment_type',e.target.value)}\n            error={formik.touched.apartment_type && Boolean(formik.errors.apartment_type)}\n            helperText={formik.touched.apartment_type && formik.errors.apartment_type}\n            >\n          \n          <MenuItem value={'Flat'}>Flat</MenuItem>\n          <MenuItem value={'Bunglow'}>Bunglow</MenuItem>\n          <MenuItem value={'Villa'}>Villa</MenuItem>\n          <MenuItem value={'Mansion'}>Mansion</MenuItem>\n          <MenuItem value={'Farm House'}>Farm House</MenuItem>\n            </Select>\n        </FormControl>\n      \n    <br />\n\n          \n\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Floor no. of House\n          </Typography>\n      \n          <div>   \n            <Button onClick={() => handleclick1('floor_no',formik.values.floor_no,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.floor_no}\n\n            <Button  onClick={() => handleclick2('floor_no',formik.values.floor_no,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n     \n\n    <br />\n\n \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of washrooms in the House\n          </Typography>\n       \n          <div>   \n            <Button onClick={() => handleclick1('washroom',formik.values.washroom,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.washroom}\n\n            <Button  onClick={() => handleclick2('washroom',formik.values.washroom,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n     \n\n    <br />\n\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of rooms in the House\n          </Typography>\n    \n          <div>   \n            <Button onClick={() => handleclick1('total_rooms',formik.values.total_rooms,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.total_rooms}\n\n            <Button  onClick={() => handleclick2('total_rooms',formik.values.total_rooms,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n      \n\n    <br />\n\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of floors in the House\n          </Typography>\n      \n          <div>   \n            <Button onClick={() => handleclick1('total_floors',formik.values.total_floors,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.total_floors}\n\n            <Button  onClick={() => handleclick2('total_floors',formik.values.total_floors,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n    \n\n    <br />\n\n  \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            BHK of the House\n          </Typography>\n      \n          <div>   \n            <Button onClick={() => handleclick1('BHK',formik.values.BHK,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.BHK}\n\n            <Button  onClick={() => handleclick2('BHK',formik.values.BHK,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n     \n\n    <br />\n\n\n   \n    \n\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Bed type provided in the House\n          </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"bed_type\">Bed type</InputLabel>\n            <Select\n            labelId=\"bed_type\"\n            id=\"bed_type\"\n            value={formik.values.bed_type}\n            onChange={(e) => formik.setFieldValue('bed_type',e.target.value)}\n            error={formik.touched.bed_type && Boolean(formik.errors.bed_type)}\n            helperText={formik.touched.bed_type && formik.errors.bed_type}\n            >\n          <MenuItem value={''}>None</MenuItem>\n          <MenuItem value={'Single Bed'}>Single Bed</MenuItem>\n          <MenuItem value={'Double Bed'}>Double Bed</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    <br />\n\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of beds in the House\n          </Typography>\n      \n          <div>   \n            <Button onClick={() => handleclick1('total_beds',formik.values.total_beds,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.total_beds}\n\n            <Button  onClick={() => handleclick2('total_beds',formik.values.total_beds,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n     \n\n    <br />\n\n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of TV in the House\n          </Typography>\n       \n          <div>   \n            <Button onClick={() => handleclick1('total_TV',formik.values.total_TV,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.total_TV}\n\n            <Button  onClick={() => handleclick2('total_TV',formik.values.total_TV,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n     \n\n    <br />\n\n  \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of AC in the House\n          </Typography>\n        \n          <div>   \n            <Button onClick={() => handleclick1('total_AC',formik.values.total_AC,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.total_AC}\n\n            <Button  onClick={() => handleclick2('total_AC',formik.values.total_AC,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n     \n\n    <br />\n\n  \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of cooler in the House\n          </Typography>\n      \n          <div>   \n            <Button onClick={() => handleclick1('total_cooler',formik.values.total_cooler,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.total_cooler}\n\n            <Button  onClick={() => handleclick2('total_cooler',formik.values.total_cooler,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n    \n\n    <br />\n\n  \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            No. of geyser in the House\n          </Typography>\n      \n          <div>   \n            <Button onClick={() => handleclick1('total_geyser',formik.values.total_geyser,formik.setFieldValue)} >\n                <AddIcon />\n            </Button>\n\n            {formik.values.total_geyser}\n\n            <Button  onClick={() => handleclick2('total_geyser',formik.values.total_geyser,formik.setFieldValue)}>\n                <RemoveIcon />\n            </Button>\n        </div>\n   \n    <br />\n\n  \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Sofa\n            </Typography>\n         \n            <br />\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have Sofa ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"sofa\">Sofa</InputLabel>\n            <Select\n            labelId=\"sofa\"\n            id=\"sofa\"\n            value={formik.values.sofa}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('sofa',e.target.value);}\n            else{formik.setFieldValue('sofa',e.target.value)}}}\n            error={formik.touched.sofa && Boolean(formik.errors.sofa)}\n            helperText={formik.touched.sofa && formik.errors.sofa}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Length of the House\n        </Typography>\n     \n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         \n         fullWidth\n          rows={1}\n          id=\"length\"\n          name=\"length\"\n          label=\"length\"\n          value={formik.values.length}\n          onChange={(e) => {formik.setFieldValue('length',parseInt(e.target.value)); \n          }}\n          error={formik.touched.length && Boolean(formik.errors.length)}\n          helperText={formik.touched.length && formik.errors.length}\n        />\n       </>\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Breadth of the House\n        </Typography>\n      \n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         \n         fullWidth\n          rows={1}\n          id=\"breadth\"\n          name=\"breadth\"\n          label=\"breadth\"\n          value={formik.values.breadth}\n          onChange={(e) => {formik.setFieldValue('breadth',parseInt(e.target.value)); \n          }}\n          error={formik.touched.breadth && Boolean(formik.errors.breadth)}\n          helperText={formik.touched.breadth && formik.errors.breadth}\n        />\n        </>\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Height of the House\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"height\"\n          name=\"height\"\n          label=\"height\"\n          value={formik.values.height}\n          onChange={(e) => {formik.setFieldValue('height',parseInt(e.target.value)); \n          }}\n          error={formik.touched.height && Boolean(formik.errors.height)}\n          helperText={formik.touched.height && formik.errors.height}\n        />\n        </>\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Furniture in the House\n        </Typography>\n      \n        <TextField\n         multiline\n         variant=\"outlined\"\n         margin=\"normal\"\n         \n         fullWidth\n          rows={4}\n          id=\"furniture\"\n          name=\"furniture\"\n          label=\"furniture\"\n          value={formik.values.furniture}\n          onChange={formik.handleChange}\n          error={formik.touched.furniture && Boolean(formik.errors.furniture)}\n          helperText={formik.touched.furniture && formik.errors.furniture}\n        />\n      </>\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Description of the House\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={4}\n          id=\"description\"\n          name=\"description\"\n          label=\"description\"\n          value={formik.values.description}\n          onChange={formik.handleChange}\n          error={formik.touched.description && Boolean(formik.errors.description)}\n          helperText={formik.touched.description && formik.errors.description}\n        />\n        </>\n\n\n\n\n            <br />\n            \n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Facilities\n            </Typography>\n          \n            <br />\n\n            \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Electricity charge\n            </Typography>\n            \n\n<div><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of electricity facility(if not any, enter 0)\n        </Typography>\n      \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_electricity\"\n          name=\"cost_electricity\"\n          label=\"Cost of electricity facility\"\n          value={formik.values.cost_electricity}\n          onChange={(e) => {formik.setFieldValue('cost_electricity',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_electricity && Boolean(formik.errors.cost_electricity)}\n          helperText={formik.touched.cost_electricity && formik.errors.cost_electricity}\n        />\n       </div>\n\n  <br />\n\n  \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Water charge\n            </Typography>\n            \n\n<><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of Water facility(if not any, enter 0)\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_water\"\n          name=\"cost_water\"\n          label=\"Cost of water facility\"\n          value={formik.values.cost_water}\n          onChange={(e) => {formik.setFieldValue('cost_water',parseInt(e.target.value)); \n        }}\n          error={formik.touched.cost_water && Boolean(formik.errors.cost_water)}\n          helperText={formik.touched.cost_water && formik.errors.cost_water}\n        />\n      </>\n\n  <br />\n\n\n            \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              WIFI\n            </Typography>\n          \n            <br />\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have WIFI ?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"wifi\">WIFI</InputLabel>\n            <Select\n            labelId=\"wifi\"\n            id=\"wifi\"\n            value={formik.values.wifi}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('wifi',e.target.value);\n            formik.setFieldValue('cost_wifi',0);\n            formik.setFieldValue('removable_wifi',false);}\n            else{formik.setFieldValue('wifi',e.target.value)}}}\n            error={formik.touched.wifi && Boolean(formik.errors.wifi)}\n            helperText={formik.touched.wifi && formik.errors.wifi}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.wifi ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of wifi facility(if not enter 0)\n        </Typography>\n     \n        <TextField\n          multiline\n          rows={1}\n          id=\"cost_wifi\"\n          name=\"cost_wifi\"\n          label=\"Cost of wifi facility\"\n          value={formik.values.cost_wifi}\n          onChange={(e) => {formik.setFieldValue('cost_wifi',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_wifi && Boolean(formik.errors.cost_wifi)}\n          helperText={formik.touched.cost_wifi && formik.errors.cost_wifi}\n        />\n       </>\n  : null\n    }\n    \n\n{\n      formik.values.wifi ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_wifi\">Removable wifi facility?</InputLabel>\n            <Select\n            labelId=\"removable_wifi\"\n            id=\"removable_wifi\"\n            value={formik.values.removable_wifi}\n            onChange={(e) => {\n            formik.setFieldValue('removable_wifi',e.target.value)}}\n            error={formik.touched.removable_wifi && Boolean(formik.errors.removable_wifi)}\n            helperText={formik.touched.removable_wifi && formik.errors.removable_wifi}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n\n<br />\n           \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              TV in the house\n            </Typography>\n          \n            <br />\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have house TV ?\n        </Typography>\n        \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"TV\">House TV</InputLabel>\n            <Select\n            labelId=\"TV\"\n            id=\"TV\"\n            value={formik.values.TV}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('TV',e.target.value);\n            formik.setFieldValue('cost_TV',0);\n            formik.setFieldValue('removable_house_TV',false);}\n            else{formik.setFieldValue('TV',e.target.value)}}}\n            error={formik.touched.TV && Boolean(formik.errors.TV)}\n            helperText={formik.touched.TV && formik.errors.TV}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n      \n\n    \n\n\n    {\n      formik.values.TV ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of house TV facility(if not enter 0)\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"cost_TV\"\n          name=\"cost_TV\"\n          label=\"Cost of house TV facility\"\n          value={formik.values.cost_TV}\n          onChange={(e) => {formik.setFieldValue('cost_TV',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_TV && Boolean(formik.errors.cost_TV)}\n          helperText={formik.touched.cost_TV && formik.errors.cost_TV}\n        />\n     </>\n  : null\n    }\n    \n\n{\n      formik.values.TV ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove house TV facility?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_house_TV\">Removable house TV facility?</InputLabel>\n            <Select\n            labelId=\"removable_house_TV\"\n            id=\"removable_house_TV\"\n            value={formik.values.removable_house_TV}\n            onChange={(e) => {\n            formik.setFieldValue('removable_house_TV',e.target.value)}}\n            error={formik.touched.removable_house_TV && Boolean(formik.errors.removable_house_TV)}\n            helperText={formik.touched.removable_house_TV && formik.errors.removable_house_TV}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n\n\n       \n<br />\n          <Typography variant=\"h6\" color=\"textPrimary\">\n            Refridgerator in the house\n          </Typography>\n         \n          <br />\n   \n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n          Do you have house refridgerator ?\n      </Typography>\n     \n      <FormControl className={classes.form}>\n      \n          <InputLabel id=\"house_refridgerator\">House refridgerator</InputLabel>\n          <Select\n          labelId=\"house_refridgerator\"\n          id=\"house_refridgerator\"\n          value={formik.values.house_refridgerator}\n          onChange={(e) => {if(e.target.value===false){formik.setFieldValue('house_refridgerator',e.target.value);\n          formik.setFieldValue('cost_refridgerator',0);\n          formik.setFieldValue('removable_house_refridgerator',false);}\n          else{formik.setFieldValue('house_refridgerator',e.target.value)}}}\n          error={formik.touched.house_refridgerator && Boolean(formik.errors.house_refridgerator)}\n          helperText={formik.touched.house_refridgerator && formik.errors.house_refridgerator}\n          >\n          <MenuItem value={true}>Yes</MenuItem>\n          <MenuItem value={false}>No</MenuItem>\n          </Select>\n      </FormControl>\n   \n  \n\n\n  {\n    formik.values.house_refridgerator ? <><br />\n    <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n    Cost of house refridgerator facility(if not enter 0)\n      </Typography>\n   \n      <TextField\n        multiline\n        variant=\"outlined\"\n        margin=\"normal\"\n        \n        fullWidth\n        rows={1}\n        id=\"cost_refridgerator\"\n        name=\"cost_refridgerator\"\n        label=\"Cost of house refridgerator facility\"\n        value={formik.values.cost_refridgerator}\n        onChange={(e) => {formik.setFieldValue('cost_refridgerator',parseInt(e.target.value)); \n          }}\n        error={formik.touched.cost_refridgerator && Boolean(formik.errors.cost_refridgerator)}\n        helperText={formik.touched.cost_refridgerator && formik.errors.cost_refridgerator}\n      />\n     </>\n: null\n  }\n  \n\n{\n    formik.values.house_refridgerator ? <div><br />\n    <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n    Can customers remove house refridgerator facility?\n      </Typography>\n   \n      <FormControl className={classes.form}>\n      \n          <InputLabel id=\"removable_house_refridgerator\">Removable house refridgerator facility?</InputLabel>\n          <Select\n          labelId=\"removable_house_refridgerator\"\n          id=\"removable_house_refridgerator\"\n          value={formik.values.removable_house_refridgerator}\n          onChange={(e) => {\n          formik.setFieldValue('removable_house_refridgerator',e.target.value)}}\n          error={formik.touched.removable_house_refridgerator && Boolean(formik.errors.removable_house_refridgerator)}\n          helperText={formik.touched.removable_house_refridgerator && formik.errors.removable_house_refridgerator}\n          >\n          <MenuItem value={true}>Yes</MenuItem>\n          <MenuItem value={false}>No</MenuItem>\n          </Select>\n      </FormControl>\n     </div>\n: null\n  }\n<br />\n       \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Purified water\n            </Typography>\n           \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have purified water ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"purified_water\">purified water</InputLabel>\n            <Select\n            labelId=\"purified_water\"\n            id=\"purified_water\"\n            value={formik.values.purified_water}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('purified_water',e.target.value);\n            formik.setFieldValue('cost_purified_water',0);\n            formik.setFieldValue('removable_purified_water',false);}\n            else{formik.setFieldValue('purified_water',e.target.value)}}}\n            error={formik.touched.purified_water && Boolean(formik.errors.purified_water)}\n            helperText={formik.touched.purified_water && formik.errors.purified_water}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n    \n\n\n    {\n      formik.values.purified_water ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of purified water facility(if not enter 0)\n        </Typography>\n     \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"cost_purified_water\"\n          name=\"cost_purified_water\"\n          label=\"Cost of purified water facility\"\n          value={formik.values.cost_purified_water}\n          onChange={(e) => {formik.setFieldValue('cost_purified_water',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_purified_water && Boolean(formik.errors.cost_purified_water)}\n          helperText={formik.touched.cost_purified_water && formik.errors.cost_purified_water}\n        />\n       </>\n  : null\n    }\n    \n\n{\n      formik.values.purified_water ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_purified_water\">Removable purified water facility?</InputLabel>\n            <Select\n            labelId=\"removable_purified_water\"\n            id=\"removable_purified_water\"\n            value={formik.values.removable_purified_water}\n            onChange={(e) => {\n            formik.setFieldValue('removable_purified_water',e.target.value)}}\n            error={formik.touched.removable_purified_water && Boolean(formik.errors.removable_purified_water)}\n            helperText={formik.touched.removable_purified_water && formik.errors.removable_purified_water}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n        </>\n  : null\n    }\n<br />\n\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              AC\n            </Typography>\n         \n            <br />\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have AC ?\n        </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"AC\">AC</InputLabel>\n            <Select\n            labelId=\"AC\"\n            id=\"AC\"\n            value={formik.values.AC}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('AC',e.target.value);\n            formik.setFieldValue('cost_AC',0);\n            formik.setFieldValue('removable_AC',false);}\n            else{formik.setFieldValue('AC',e.target.value)}}}\n            error={formik.touched.AC && Boolean(formik.errors.AC)}\n            helperText={formik.touched.AC && formik.errors.AC}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.AC ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of AC facility(if not enter 0)\n        </Typography>\n     \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"cost_AC\"\n          name=\"cost_AC\"\n          label=\"Cost of AC facility\"\n          value={formik.values.cost_AC}\n          onChange={(e) => {formik.setFieldValue('cost_AC',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_AC && Boolean(formik.errors.cost_AC)}\n          helperText={formik.touched.cost_AC && formik.errors.cost_AC}\n        />\n      </>\n  : null\n    }\n    \n\n{\n      formik.values.AC ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_AC\">Removable AC facility?</InputLabel>\n            <Select\n            labelId=\"removable_AC\"\n            id=\"removable_AC\"\n            value={formik.values.removable_AC}\n            onChange={(e) => {\n            formik.setFieldValue('removable_AC',e.target.value)}}\n            error={formik.touched.removable_AC && Boolean(formik.errors.removable_AC)}\n            helperText={formik.touched.removable_AC && formik.errors.removable_AC}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n    <br />\n\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Geyser\n            </Typography>\n            \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have geyser ?\n        </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"geyser\">geyser</InputLabel>\n            <Select\n            labelId=\"geyser\"\n            id=\"geyser\"\n            value={formik.values.geyser}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('geyser',e.target.value);\n            formik.setFieldValue('cost_geyser',0);\n            formik.setFieldValue('removable_geyser',false);}\n            else{formik.setFieldValue('geyser',e.target.value)}}}\n            error={formik.touched.geyser && Boolean(formik.errors.geyser)}\n            helperText={formik.touched.geyser && formik.errors.geyser}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n      \n\n    \n\n\n    {\n      formik.values.geyser ? <div><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of geyser geyser(if not enter 0)\n        </Typography>\n \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"cost_geyser\"\n          name=\"cost_geyser\"\n          label=\"Cost of geyser geyser\"\n          value={formik.values.cost_geyser}\n          onChange={(e) => {formik.setFieldValue('cost_geyser',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_geyser && Boolean(formik.errors.cost_geyser)}\n          helperText={formik.touched.cost_geyser && formik.errors.cost_geyser}\n        />\n       </div>\n  : null\n    }\n    \n\n{\n      formik.values.geyser ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this geyser?\n        </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_geyser\">Removable geyser geyser?</InputLabel>\n            <Select\n            labelId=\"removable_geyser\"\n            id=\"removable_geyser\"\n            value={formik.values.removable_geyser}\n            onChange={(e) => {\n            formik.setFieldValue('removable_geyser',e.target.value)}}\n            error={formik.touched.removable_geyser && Boolean(formik.errors.removable_geyser)}\n            helperText={formik.touched.removable_geyser && formik.errors.removable_geyser}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n<br />\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Cooler\n            </Typography>\n       \n            <br />\n    \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have cooler ?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"cooler\">cooler</InputLabel>\n            <Select\n            labelId=\"cooler\"\n            id=\"cooler\"\n            value={formik.values.cooler}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('cooler',e.target.value);\n            formik.setFieldValue('cost_cooler',0);\n            formik.setFieldValue('removable_cooler',false);}\n            else{formik.setFieldValue('cooler',e.target.value)}}}\n            error={formik.touched.cooler && Boolean(formik.errors.cooler)}\n            helperText={formik.touched.cooler && formik.errors.cooler}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.cooler ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of cooler facility(if not enter 0)\n        </Typography>\n   \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"cost_cooler\"\n          name=\"cost_cooler\"\n          label=\"Cost of cooler facility\"\n          value={formik.values.cost_cooler}\n          onChange={(e) => {formik.setFieldValue('cost_cooler',parseInt(e.target.value)); \n          }}\n          error={formik.touched.cost_cooler && Boolean(formik.errors.cost_cooler)}\n          helperText={formik.touched.cost_cooler && formik.errors.cost_cooler}\n        />\n       </>\n  : null\n    }\n    \n\n{\n      formik.values.cooler ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this facility?\n        </Typography>\n     \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_cooler\">Removable cooler facility?</InputLabel>\n            <Select\n            labelId=\"removable_cooler\"\n            id=\"removable_cooler\"\n            value={formik.values.removable_cooler}\n            onChange={(e) => {\n            formik.setFieldValue('removable_cooler',e.target.value)}}\n            error={formik.touched.removable_cooler && Boolean(formik.errors.removable_cooler)}\n            helperText={formik.touched.removable_cooler && formik.errors.removable_cooler}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n<br />\n\n\n      \n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Laundry\n            </Typography>\n           \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have laundry ?\n        </Typography>\n        \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"laundry\">laundry</InputLabel>\n            <Select\n            labelId=\"laundry\"\n            id=\"laundry\"\n            value={formik.values.laundry}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('laundry',e.target.value);\n            formik.setFieldValue('cost_laundry',0);\n            formik.setFieldValue('removable_laundry',false);}\n            else{formik.setFieldValue('laundry',e.target.value)}}}\n            error={formik.touched.laundry && Boolean(formik.errors.laundry)}\n            helperText={formik.touched.laundry && formik.errors.laundry}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n    \n\n\n    {\n      formik.values.laundry ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of laundry facility\n        </Typography>\n      \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"cost_laundry\"\n          name=\"cost_laundry\"\n          label=\"Cost of laundry facility\"\n          value={formik.values.cost_laundry}\n          onChange={(e) => {formik.setFieldValue('cost_laundry',parseInt(e.target.value)); \n          }}\n          onChange={formik.handleChange}\n          error={formik.touched.cost_laundry && Boolean(formik.errors.cost_laundry)}\n          helperText={formik.touched.cost_laundry && formik.errors.cost_laundry}\n        />\n      </>\n  : null\n    }\n\n\n{\n      formik.values.laundry ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Can customers remove this laundry?\n        </Typography>\n    \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"removable_laundry\">Removable laundry ?</InputLabel>\n            <Select\n            labelId=\"removable_laundry\"\n            id=\"removable_laundry\"\n            value={formik.values.removable_laundry}\n            onChange={(e) => {\n            formik.setFieldValue('removable_laundry',e.target.value)}}\n            error={formik.touched.removable_laundry && Boolean(formik.errors.removable_laundry)}\n            helperText={formik.touched.removable_laundry && formik.errors.removable_laundry}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n       </>\n  : null\n    }\n    <br />\n\n\n            <Typography variant=\"h6\" color=\"textPrimary\">\n            House cleaning\n            </Typography>\n      \n            <br />\n     \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you provide House cleaning ?\n        </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"apartment_cleaning\">House cleaning</InputLabel>\n            <Select\n            labelId=\"apartment_cleaning\"\n            id=\"apartment_cleaning\"\n            value={formik.values.apartment_cleaning}\n            onChange={(e) => {if(e.target.value===false){formik.setFieldValue('apartment_cleaning',e.target.value);\n            formik.setFieldValue('cost_cleaning',0);}\n            else{formik.setFieldValue('apartment_cleaning',e.target.value)}}}\n            error={formik.touched.apartment_cleaning && Boolean(formik.errors.apartment_cleaning)}\n            helperText={formik.touched.apartment_cleaning && formik.errors.apartment_cleaning}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n    \n    \n\n\n    {\n      formik.values.apartment_cleaning ? <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Cost of House cleaning facility (in per cleaning)\n        </Typography>\n      \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"cost_cleaning\"\n          name=\"cost_cleaning\"\n          label=\"Cost of cleaning facility\"\n          value={formik.values.cost_cleaning}\n          onChange={(e) => {formik.setFieldValue('cost_cleaning',parseInt(e.target.value)); \n          }}\n          onChange={formik.handleChange}\n          error={formik.touched.cost_cleaning && Boolean(formik.errors.cost_cleaning)}\n          helperText={formik.touched.cost_cleaning && formik.errors.cost_cleaning}\n        />\n        </>\n  : null\n    }\n    <br />\n\n\n   \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have building sequrity guard ?\n        </Typography>\n      \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"building_guard\">building_guard</InputLabel>\n            <Select\n            labelId=\"building_guard\"\n            id=\"building_guard\"\n            value={formik.values.building_guard}\n            onChange={(e) => {\n            formik.setFieldValue('building_guard',e.target.value)}}\n            error={formik.touched.building_guard && Boolean(formik.errors.building_guard)}\n            helperText={formik.touched.building_guard && formik.errors.building_guard}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n    \n\n    <br />\n\n \n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have CCTV in building ?\n        </Typography>\n       \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"cctv_building\">cctv_building</InputLabel>\n            <Select\n            labelId=\"cctv_building\"\n            id=\"cctv_building\"\n            value={formik.values.cctv_building}\n            onChange={(e) => {\n            formik.setFieldValue('cctv_building',e.target.value)}}\n            error={formik.touched.cctv_building && Boolean(formik.errors.cctv_building)}\n            helperText={formik.touched.cctv_building && formik.errors.cctv_building}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n    <br />\n\n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n            Do you have power backup in building ?\n        </Typography>\n        \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"power_backup\">power_backup</InputLabel>\n            <Select\n            labelId=\"power_backup\"\n            id=\"power_backup\"\n            value={formik.values.power_backup}\n            onChange={(e) => {\n            formik.setFieldValue('power_backup',e.target.value)}}\n            error={formik.touched.power_backup && Boolean(formik.errors.power_backup)}\n            helperText={formik.touched.power_backup && formik.errors.power_backup}\n            >\n            <MenuItem value={true}>Yes</MenuItem>\n            <MenuItem value={false}>No</MenuItem>\n            </Select>\n        </FormControl>\n     \n\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Any additional facility\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={4}\n          id=\"facility\"\n          name=\"facility\"\n          label=\"facility\"\n          value={formik.values.facility}\n          onChange={formik.handleChange}\n        />\n       </>\n\n  <br />\n\n\n          \n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Pricing\n            </Typography>\n         \n            \n    \n\n    <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Any discount you are providing (in %)\n        </Typography>\n     \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"owner_discount\"\n          name=\"owner_discount\"\n          label=\"Discount\"\n          value={formik.values.owner_discount}\n          onChange={(e) => {formik.setFieldValue('owner_discount',parseInt(e.target.value)); \n          }}\n          error={formik.touched.owner_discount && Boolean(formik.errors.owner_discount)}\n          helperText={formik.touched.owner_discount && formik.errors.owner_discount}\n        />\n       </>\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Final Price after discount (excluding the facilities,electricity and water charge that will be added later and wont be counted in discount)\n        </Typography>\n   \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"seller_price\"\n          name=\"seller_price\"\n          label=\"Price\"\n          value={formik.values.seller_price}\n          onChange={(e) => {formik.setFieldValue('seller_price',parseInt(e.target.value)); \n          }}\n          error={formik.touched.seller_price && Boolean(formik.errors.seller_price)}\n          helperText={formik.touched.seller_price && formik.errors.seller_price}\n        />\n       </>\n<br />\n\n\n\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Regarding House\n            </Typography>\n     \n            <br />\n      \n\n    <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Any House policy or rules?\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={5}\n          id=\"apartment_policy\"\n          name=\"apartment_policy\"\n          label=\"apartment policy\"\n          value={formik.values.apartment_policy}\n          onChange={formik.handleChange}\n          \n        />\n     </>\n\n     <br />\n\n\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Location\n            </Typography>\n          \n            <br />\n            <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Full Address\n        </Typography>\n    \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={5}\n          id=\"location\"\n          name=\"location\"\n          label=\"location\"\n          value={formik.values.location}\n          onChange={formik.handleChange}\n          error={formik.touched.location && Boolean(formik.errors.location)}\n          helperText={formik.touched.location && formik.errors.location}\n          \n        />\n      </>\n  <br />\n\n\n    <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      City name\n        </Typography>\n      \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"city\"\n          name=\"city\"\n          label=\"city\"\n          value={formik.values.city}\n          onChange={formik.handleChange}\n          error={formik.touched.city && Boolean(formik.errors.city)}\n          helperText={formik.touched.city && formik.errors.city}\n          \n        />\n       </>\n  <br />\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      State name\n        </Typography>\n     \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"state\"\n          name=\"state\"\n          label=\"state\"\n          value={formik.values.state}\n          onChange={formik.handleChange}\n          error={formik.touched.state && Boolean(formik.errors.state)}\n          helperText={formik.touched.state && formik.errors.state}\n          \n        />\n      </>\n\n<br />\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Country name\n        </Typography>\n     \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"country\"\n          name=\"country\"\n          label=\"country\"\n          value={formik.values.country}\n          onChange={formik.handleChange}\n          error={formik.touched.country && Boolean(formik.errors.country)}\n          helperText={formik.touched.country && formik.errors.country}\n          \n        />\n        </>\n  <br />\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Landmark\n        </Typography>\n      \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"landmark\"\n          name=\"landmark\"\n          label=\"landmark\"\n          value={formik.values.landmark}\n          onChange={formik.handleChange}\n          error={formik.touched.landmark && Boolean(formik.errors.landmark)}\n          helperText={formik.touched.landmark && formik.errors.landmark}\n          \n        />\n       </>\n\n  <br />\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Pincode\n        </Typography>\n     \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"pincode\"\n          name=\"pincode\"\n          label=\"pincode\"\n          value={formik.values.pincode}\n          onChange={formik.handleChange}\n          error={formik.touched.pincode && Boolean(formik.errors.pincode)}\n          helperText={formik.touched.pincode && formik.errors.pincode}\n          \n        />\n       </>\n\n\n  <br />\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Address proof (pdf format)\n        </Typography>\n   </>  \n       \n\n{\n  myroom.address_proof ? <><a href={myroom.address_proof}><p id=\"proof\">UPLOADED ALREADY</p></a></> :  <><input type='file'  id='address' accept='application/pdf' onChange={(event) => {\n    Filevalidation(event.target.files[0]);}}/> \n         <p id=\"proof\">NOT UPLOADED</p></>\n }\n        \n\n  <br />\n\n  \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n        \n        \n        \n\n        \n        <br />\n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Kindly, mark the location of your house in the map to provide better facilites and optimisation (required*).\n     \n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      \n      Please note that if you have marked multiple time then the latest one will be used as our reference \n        </Typography>\n        <MapForm value={formik.values} setvalue={formik.setFieldValue}/>\n        <br />\n\n       \n            <Typography variant=\"h4\" color=\"textPrimary\">\n              Neighborhood\n            </Typography>\n        \n            <br />\n\n        <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Nearby station 1\n        </Typography>\n   \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"nearby_station1\"\n          name=\"nearby_station1\"\n          label=\"Nearby Station 1\"\n          value={formik.values.nearby_station1}\n          onChange={formik.handleChange}\n          error={formik.touched.nearby_station1 && Boolean(formik.errors.nearby_station1)}\n          helperText={formik.touched.nearby_station1 && formik.errors.nearby_station1}\n          \n        />\n       </>\n\n\n  <br />\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Distance from station 1 (in km)\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"distance1\"\n          name=\"distance1\"\n          label=\"distance from station 1\"\n          value={formik.values.distance1}\n          onChange={(e) => {formik.setFieldValue('distance1',parseFloat(e.target.value)); \n          }}\n          error={formik.touched.distance1 && Boolean(formik.errors.distance1)}\n          helperText={formik.touched.distance1 && formik.errors.distance1}\n          \n        />\n        </>\n\n\n  <br />\n\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Nearby station 2\n        </Typography>\n   \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"nearby_station2\"\n          name=\"nearby_station2\"\n          label=\"Nearby Station 2\"\n          value={formik.values.nearby_station2}\n          onChange={formik.handleChange}\n          error={formik.touched.nearby_station1 && Boolean(formik.errors.nearby_station2)}\n          helperText={formik.touched.nearby_station2 && formik.errors.nearby_station2}\n          \n        />\n        </>\n\n\n  <br />\n\n  <>\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Distance from station 2 (in km)\n        </Typography>\n      \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"distance2\"\n          name=\"distance2\"\n          label=\"distance from station 2\"\n          value={formik.values.distance2}\n          onChange={(e) => {formik.setFieldValue('distance2',parseFloat(e.target.value)); \n          }}\n          error={formik.touched.distance2 && Boolean(formik.errors.distance2)}\n          helperText={formik.touched.distance2 && formik.errors.distance2}\n          \n        />\n        </>\n\n  <br />\n\n\n  <Button color=\"default\" variant=\"contained\" fullWidth onClick={(e) => {e.preventDefault();handleOpenmodal();}}>\n          View Instructions\n        </Button>\n\n        <br />\n  \n        \n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n        </Grid>\n        </form>\n      \n      </div>\n     \n      </Paper>\n      </Grid>\n      \n      </Grid>\n    </div>\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(ApartmentForm)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/coupon_form.js",["1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426"],"import React,{useState,useEffect} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Eror from './eror'\nimport Typography from '@material-ui/core/Typography';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DateSelect from './dateselect'\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\nconst validationSchema = yup.object({\n  \n  coupoun_code: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n\n  off: yup\n  .number().integer('please enter integer'),\n\n  life: yup\n  .number().integer('please enter integer'),\n\n  min_price: yup\n  .number().integer('please enter integer'),\n\n  max_off_price: yup\n  .number().integer('please enter integer'),\n  \n  \n  coupon_type: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n\n  valid_from: yup\n  .string('Please, provide the appropriate answer')\n  .required('You must answer this '),\n   \n\n    \n});\n\n\n  const useStyles = makeStyles((theme) => ({\n    \n  \n \n    // necessary for content to be below app bar\n    myclass: {\n     \n      [theme.breakpoints.up('md')]: {\n        padding:'1%',\n      },\n     \n  },\n  bgclass: {\n    backgroundColor:`${process.env.REACT_APP_BG_COLOR}`,\n    height:'100vh',\n  \n    \n\n \n  },\n  myclass1: {\n    padding:'30px'\n},\n    imageclass: {\n      width:'350px'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n    erorclass: {\n        width:'50%',\n        marginLeft:'25%',\n    },\n    textclass1:{\n        float: 'left',\n    },\n    papernewclass:{\n      padding:20,\n      [theme.breakpoints.up('sm')]: {\n        padding:50,\n      },\n      [theme.breakpoints.up('lg')]: {\n        padding:50,\n        minWidth:600,\n      },\n     \n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n     \n    },\n  }));\n\nfunction CouponForm (props){\n    const classes = useStyles();\n\n    const [mycoupon,setcoupon] = useState({\n      coupoun_code:'',\n      coupon_type:'',\n      valid_from: '',\n      life:1,\n      coupoun_rooms:[],\n      coupoun_shops:[],\n      coupoun_apartments:[],    \n      off:0,\n      min_price:0,\n      max_off_price:0,\n    })\n\n    const [edit,setedit] = useState(false)\n    const [redirect,setredirect] = useState(false)\n    const [error,seterror] = useState(false)\n    const couponid = props.location.state.property_id;\n    const [myrooms,setrooms] =useState([])\n    const [myshops,setshops] =useState([])\n    const [myapartments,setapartments] =useState([])\n    const [loading1,setloading1] = useState(false)\n    const [newredirect,setnewredirect] = React.useState(false);\n\n    React.useEffect(() => {\n      if(props.profile)\n      {\n        if(props.profile)\n        {\n          if(!props.profile.profile_completed || !props.profile.bank_completed || !props.profile.address_completed)\n          {\n            setnewredirect(true);\n          }\n        }\n      }\n    },[props.profile])\n\n   \n\n    useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n              if(props.profile)\n              {\n                try{const res = await axios.get(`${process.env.REACT_APP_API_URL}/sourcesfnsjfn231/mycoupons/${couponid}/`,config);\n               \n                setcoupon({\n                    coupoun_code:res.data.coupoun_code,\n                    coupon_type:res.data.coupon_type,\n                    valid_from: res.data.valid_from,\n                    life:res.data.life,\n                    coupoun_rooms:res.data.coupoun_rooms,\n                    coupoun_shops:res.data.coupoun_shops,\n                    coupoun_apartments:res.data.coupoun_apartments,    \n                    off:res.data.off,\n                    min_price:res.data.min_price,\n                    max_off_price:res.data.max_off_price,\n                })\n                setedit(true);\n        \n                \n              \n              }\n                catch{\n\n                    \n      \n                }\n\n            \n              \n                \n                 \n                  try{const res1 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcewdsfdaegds/my_rooms/`,config);\n                \n                  setrooms(res1.data)\n                 \n                \n                }\n                  catch{\n        \n                  }\n\n                  try{const res2 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcekfhkt274fs/my_shops/`,config);\n              \n                  setshops(res2.data)\n                 \n                \n                }\n                  catch{\n        \n                  }\n                  try{const res3 = await axios.get(`${process.env.REACT_APP_API_URL}/sourceddnvslf54d/my_apartments/`,config);\n              \n                  setapartments(res3.data)\n                \n                \n                }\n                  catch{\n        \n                  }\n        }\n    }\n    \n    ,[couponid])\n\n\n  \n\n  const formik = useFormik({\n    enableReinitialize:true,\n    initialValues: {\n        coupoun_code:mycoupon.coupoun_code,\n        coupon_type:mycoupon.coupon_type,\n        valid_from: mycoupon.valid_from,\n        life:mycoupon.life,\n        coupoun_rooms:mycoupon.coupoun_rooms,\n        coupoun_shops:mycoupon.coupoun_shops,\n        coupoun_apartments:mycoupon.coupoun_apartments,    \n        off:mycoupon.off,\n        min_price:mycoupon.min_price,\n        max_off_price:mycoupon.max_off_price,\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n\n      setloading1(true)      \n      const config = {\n        headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n        },\n      };\n\n      const body = {\n          data:values\n      }\n\n      \n      if(edit===false)\n      {\n        try{const res = await axios.post(`${process.env.REACT_APP_API_URL}/sourcesfnsjfn231/mycoupons/`,body,config);\n        setloading1(false)        \n        setredirect(true)\n        \n              }\n                catch{\n                  setloading1(false)  \n                 \n                  seterror(true)\n                  \n                }\n      }\n     \n    },\n  });\n\n\n  useEffect(\n    () => {\n      if(formik.values.off!==formik.values.off){formik.setFieldValue('off',0);}\n      \n    \n    }\n  ,[formik.values.off])\n\n  useEffect(\n    () => {\n      if(formik.values.min_price!==formik.values.min_price){formik.setFieldValue('min_price',0);}\n      \n    \n    }\n  ,[formik.values.min_price])\n\n  useEffect(\n    () => {\n      if(formik.values.max_off_price!==formik.values.max_off_price){formik.setFieldValue('max_off_price',0);}\n      \n    \n    }\n  ,[formik.values.max_off_price])\n\n  useEffect(\n    () => {\n      if(formik.values.life!==formik.values.life){formik.setFieldValue('life',0);}\n      \n    \n    }\n  ,[formik.values.life])\n\n  if(props.isAuthenticated===false)\n    {\n      return <Redirect to=\"/login\" />;\n    }\n\n    if(newredirect==true)\n{\n  return <Redirect to={{\n    pathname: '/dashboard/profile',\n    state: { property_id: true }\n  }}/>\n}\n\n  if(redirect==true)\n  {\n    return <Redirect to='/dashboard/my_coupons' />\n  }\n  if(error===true)\n  {\n\n      return <div className={classes.erorclass}><Eror error={'Cannot update coupon details'}/></div>\n  }\n\n  const handleChange = (e,roomid,boolean) => {\n      \n     \n      if(boolean)\n      {\n          /* formik.setFieldValue('coupoun_rooms',formik.values.coupoun_rooms.splice(formik.values.coupoun_rooms.indexOf(roomid)-1,1)) */\n      }\n      else{\n        formik.setFieldValue('coupoun_rooms',formik.values.coupoun_rooms.concat(roomid))\n      }\n  }\n\n  const handleChange1 = async (e,shopid,boolean) => {\n    \n    \n    if(boolean)\n    {\n       /*  await formik.setFieldValue('coupoun_shops',formik.values.coupoun_shops.splice(formik.values.coupoun_shops.indexOf(shopid),1)) */\n    }\n    else{\n      await formik.setFieldValue('coupoun_shops',formik.values.coupoun_shops.concat(shopid))\n    }\n    \n}\nconst handleChange2 = (e,apartmentid,boolean) => {\n    \n   \n    if(boolean)\n    {\n        /* formik.setFieldValue('coupoun_apartments',formik.values.coupoun_apartments.splice(formik.values.coupoun_apartments.indexOf(apartmentid)-1,1)) */\n    }\n    else{\n      formik.setFieldValue('coupoun_apartments',formik.values.coupoun_apartments.concat(apartmentid))\n    }\n}\n\n\n  return (\n    <div className=\"formbgclass\">\n    \n    <div className={classes.myclass}>\n\n<Backdrop className={classes.backdrop} open={loading1}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n\n        \n        <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        >\n          <Paper elevation={5} className={classes.papernewclass}>\n      <form onSubmit={formik.handleSubmit}>\n        \n       \n        <br />\n        \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"coupoun_code\"\n          name=\"coupoun_code\"\n          label=\"Coupoun Code\"\n          value={formik.values.coupoun_code}\n          onChange={formik.handleChange}\n          error={formik.touched.coupoun_code && Boolean(formik.errors.coupoun_code)}\n          helperText={formik.touched.coupoun_code && formik.errors.coupoun_code}\n        />\n       \n        <br />\n        \n        \n         \n        <FormControl className={classes.form}>\n        \n            <InputLabel id=\"coupon_type\">Coupon type</InputLabel>\n            <Select\n            labelId=\"coupon_type\"\n            id=\"coupon_type\"\n            value={formik.values.coupon_type}\n            onChange={(e) => {formik.setFieldValue('coupon_type',e.target.value);\n            }}\n            error={formik.touched.coupon_type && Boolean(formik.errors.coupon_type)}\n            helperText={formik.touched.coupon_type && formik.errors.coupon_type}\n            >\n            <MenuItem value={'discount'}>% Discount</MenuItem>\n            <MenuItem value={'off_price'}>Reduce some money</MenuItem>\n            </Select>\n        </FormControl>\n        <br />\n      \n   \n\n        \n        <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Discount Amount \n        </Typography>\n      \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"off\"\n          name=\"off\"\n          label=\"Off\"\n          value={formik.values.off}\n          onChange={(e) => {formik.setFieldValue('off',parseInt(e.target.value)); \n          }}\n          error={formik.touched.off && Boolean(formik.errors.off)}\n          helperText={formik.touched.off && formik.errors.off}\n        />\n       </>\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Min price for discount to be applied\n        </Typography>\n    \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"min_price\"\n          name=\"min_price\"\n          label=\"Min price to be applied on\"\n          value={formik.values.min_price}\n          onChange={(e) => {formik.setFieldValue('min_price',parseInt(e.target.value)); \n          }}\n          error={formik.touched.min_price && Boolean(formik.errors.min_price)}\n          helperText={formik.touched.min_price && formik.errors.min_price}\n        />\n       </>\n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Valid from\n        </Typography>\n      \n       \n      <DateSelect value={formik.values.valid_from} setvalue={formik.setFieldValue} name={'valid_from'} />\n </>\n\n  \n\n  <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      Max. discount amount\n        </Typography>\n     \n        <TextField\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          \n          fullWidth\n          rows={1}\n          id=\"max_off_price\"\n          name=\"max_off_price\"\n          label=\"Max discount price\"\n          value={formik.values.max_off_price}\n          onChange={(e) => {formik.setFieldValue('max_off_price',parseInt(e.target.value)); \n          }}\n          error={formik.touched.max_off_price && Boolean(formik.errors.max_off_price)}\n          helperText={formik.touched.max_off_price && formik.errors.max_off_price}\n        />\n       </>\n\n        <br />\n\n\n\n        <><br />\n      <Typography variant=\"body1\" color=\"textSecondary\" className={classes.textclass}>\n      life (no. of days)\n        </Typography>\n     \n        <TextField\n           multiline\n           variant=\"outlined\"\n           margin=\"normal\"\n           \n           fullWidth\n          rows={1}\n          id=\"life\"\n          name=\"life\"\n          label=\"Expiry after\"\n          value={formik.values.life}\n          onChange={(e) => {formik.setFieldValue('life',parseInt(e.target.value)); \n          }}\n          error={formik.touched.life && Boolean(formik.errors.life)}\n          helperText={formik.touched.life && formik.errors.life}\n        />\n      </>\n<br />\n  \n        <Typography variant=\"h6\" color=\"textSecondary\" >\n      Rooms\n        </Typography>\n       \n          {\n              edit===false && myrooms.map((room) => (\n                  <div>\n                      <Checkbox\n        checked={formik.values.coupoun_rooms.includes(room.room_id)}\n        \n        inputProps={{ 'aria-label': 'primary checkbox' } } className={classes.textclass1}\n        onChange={e => handleChange(e,room.room_id,formik.values.coupoun_rooms.includes(room.room_id))}\n      />\n     <Typography variant=\"body1\" color=\"textSecondary\" >\n      {room.title}\n        </Typography>\n\n                  </div>\n              ))\n          }\n\n          <br />\n         \n          <Typography variant=\"h6\" color=\"textSecondary\" >\n      Shops\n        </Typography>\n       \n        <br />\n\n{\n              edit===false && myshops.map((shop) => (\n                  <div>\n                      <Checkbox\n        checked={formik.values.coupoun_shops.indexOf(shop.shop_id)!==-1}\n        \n        inputProps={{ 'aria-label': 'primary checkbox' } } className={classes.textclass1}\n        onChange={e => handleChange1(e,shop.shop_id,formik.values.coupoun_shops.indexOf(shop.shop_id)!==-1)}\n      />\n     <Typography variant=\"body1\" color=\"textSecondary\" >\n      {shop.title}\n        </Typography>\n\n        <br /></div>\n              ))\n          }\n\n\n          <Typography variant=\"h6\" color=\"textSecondary\" >\n      Apartment\n        </Typography>\n      \n        <br />\n\n{\n             edit===false && myapartments.map((apartment) => (\n                  <div>\n                      <Checkbox\n        checked={formik.values.coupoun_apartments.includes(apartment.apartment_id)}\n        \n        inputProps={{ 'aria-label': 'primary checkbox' } } className={classes.textclass1}\n        onChange={e => handleChange2(e,apartment.apartment_id,formik.values.coupoun_apartments.includes(apartment.apartment_id))}\n      />\n     <Typography variant=\"body1\" color=\"textSecondary\" >\n      {apartment.title}\n        </Typography>\n\n        <br /></div>\n              ))\n          }\n\n\n          \n \n        <br />\n\n        {\n          edit ? null : <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n        }\n        \n        \n      </form>\n      </Paper>\n      </Grid>\n    \n    </div>\n    </div>\n  );\n}\n\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.authreducers.isAuthenticated,\n  profile : state.authreducers.user\n});\n\nexport default connect(mapStateToProps)(CouponForm)\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/eror.js",["1427"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/coupon_card.js",["1428","1429","1430"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/complaintcard_apartment.js",["1431"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/hocs/layout2.js",["1432","1433"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/complaintcard_shop.js",["1434"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/seller_rating_and_reviews.js",["1435","1436","1437","1438","1439","1440"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/complaintcard.js",["1441"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/selleranalytics.js",["1442","1443","1444","1445","1446"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport BarChart from './barchart';\n\nimport  {useMediaQuery} from '@material-ui/core';\nimport PieChart from './piechart';\nimport Multicolor_chart from './multicolor_chart';\nimport PieChart2 from './piechart2';\nimport PieChart3 from './piechart3';\nimport LineGraph from './linegraph';\nimport Load1 from './Spinner';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(1),\n        width: theme.spacing(16),\n        height: theme.spacing(16),\n      },\n    },\n    paperclass: {\n        width:'200px',\n        height:'150px',\n      \n    \n    },\n    paraclass:{\n        textAlign: 'center',\n        marginTop:'20px'\n    },\n    paraclass1:{\n        textAlign: 'center',\n        marginTop:'20px',\n        color:'red',\n    },\n    graphclass:{\n        width:'90vw',\n        [theme.breakpoints.up('sm')]: {\n            width:'80vw',\n            maxWidth:440,\n          },\n          [theme.breakpoints.up('md')]: {\n            width:'40vw',\n            maxWidth:440,\n          },\n    },\n    graphclass1:{\n        width:'80vw',\n        [theme.breakpoints.up('sm')]: {\n            width:'80vw',\n            maxWidth:440,\n          },\n          [theme.breakpoints.up('md')]: {\n            width:'40vw',\n            maxWidth:440,\n          },\n    }\n\n  }));\n\nfunction Selleranalytics({roombookings,shopbookings,apartmentbookings,bank}) {\n\n    var earning = 0;\n\n    roombookings.map((booking) => {\n        if(booking.cancelled===false)\n        {\n            earning = earning + booking.seller_pay\n        }\n    })\n\n    shopbookings.map((booking1) => {\n        if(booking1.cancelled===false)\n        {\n            earning = earning + booking1.seller_pay\n        }\n    })\n\n    apartmentbookings.map((booking2) => {\n        if(booking2.cancelled===false)\n        {\n            earning = earning + booking2.seller_pay\n        }\n    })\n\n    const isSmall = useMediaQuery(\"(max-width: 375px)\");\n    // const isSmall1 = useMediaQuery(\"(max-width: 375px)\");\n\n    const classes = useStyles();\n    if(bank && roombookings && shopbookings && apartmentbookings){\n    return (\n        <div>\n            <Grid\n  container\n  direction=\"column\"\n  justify=\"center\"\n  alignItems=\"center\"\n>\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n                <Grid item>\n        <div className={classes.root}>\n        <Paper elevation={3} className={classes.paperclass}>\n\n            <Typography variant='h6' className={classes.paraclass}>\n                Your due payment :\n            </Typography>\n            <Typography variant='body1' className={classes.paraclass1}>\n                {bank.currency} {bank.total_due_payment}\n            </Typography>\n\n        </Paper>\n        </div>\n        </Grid>\n\n        <Grid item>\n        <div className={classes.root}>\n        <Paper elevation={3} className={classes.paperclass}>\n\n            <Typography variant='h6' className={classes.paraclass}>\n                Your earnings :\n            </Typography>\n            <Typography variant='body1' className={classes.paraclass1}>\n                {bank.currency} {earning}\n            </Typography>\n\n        </Paper>\n        </div>\n        </Grid>\n\n        </Grid>\n        \n\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={3}\n            >\n                \n                <Grid item>\n                    {isSmall && \n                        <div >\n                        <BarChart roombookings={roombookings} shopbookings={shopbookings} apartmentbookings={apartmentbookings}/>\n                        </div>\n                    }\n                    {\n                        !isSmall &&\n                        <div className={classes.graphclass1}>\n                        <BarChart roombookings={roombookings} shopbookings={shopbookings} apartmentbookings={apartmentbookings}/>\n                        </div>\n                    }\n                    \n                </Grid>\n                \n                <Grid item>\n                {isSmall && \n                        <div className={classes.graphclass}>\n                        <PieChart roombookings={roombookings} shopbookings={shopbookings} apartmentbookings={apartmentbookings}/>\n                        \n                        </div>\n                    }\n                    {\n                        !isSmall &&\n                        <div className={classes.graphclass1}>\n                        <PieChart roombookings={roombookings} shopbookings={shopbookings} apartmentbookings={apartmentbookings}/>\n                    </div>\n                    }\n                    \n                    \n                </Grid> \n\n\n                <Grid item>\n                {isSmall && \n                        <div className={classes.graphclass}>\n                        <Multicolor_chart roombookings={roombookings} shopbookings={shopbookings} apartmentbookings={apartmentbookings}/>\n                        \n                        </div>\n                    }\n                    {\n                        !isSmall &&\n                        <div className={classes.graphclass1}>\n                    <Multicolor_chart roombookings={roombookings} shopbookings={shopbookings} apartmentbookings={apartmentbookings}/>\n                    \n                    </div>\n                    }\n                    \n                    \n                </Grid>\n\n                <Grid item>\n                {isSmall && \n                        <div className={classes.graphclass}>\n                        <PieChart2 roombookings={roombookings} shopbookings={shopbookings} apartmentbookings={apartmentbookings}/>\n                        \n                        </div>\n                    }\n                    {\n                        !isSmall &&\n                        <div className={classes.graphclass1}>\n                    <PieChart2 roombookings={roombookings} shopbookings={shopbookings} apartmentbookings={apartmentbookings}/>\n                    \n                    </div>\n                    }\n                    \n                    \n                </Grid>\n\n                <Grid item>\n                {isSmall && \n                        <div className={classes.graphclass}>\n                        <PieChart3 roombookings={roombookings} shopbookings={shopbookings} apartmentbookings={apartmentbookings}/>\n                        \n                        </div>\n                    }\n                    {\n                        !isSmall &&\n                        <div className={classes.graphclass1}>\n                    <PieChart3 roombookings={roombookings} shopbookings={shopbookings} apartmentbookings={apartmentbookings}/>\n                    \n                    </div>\n                    }\n                    \n                    \n                </Grid>\n                <Grid item>\n                {isSmall && \n                        <div >\n                        <LineGraph roombookings={roombookings} shopbookings={shopbookings} apartmentbookings={apartmentbookings}/>\n                        </div>\n                    }\n                    {\n                        !isSmall &&\n                        <div className={classes.graphclass1}>\n                        <LineGraph roombookings={roombookings} shopbookings={shopbookings} apartmentbookings={apartmentbookings}/>\n                        </div>\n                    }\n                </Grid>\n            </Grid>\n            </Grid>\n\n            \n        </div>\n    );}\n    else{\n        return (<div>\n            <Load1 loading={true} />\n        </div>);\n    }\n}\n\nexport default Selleranalytics\n\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/redux/auth/actions/auth_actions.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/seller_reviews_pop.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/footer.js",["1447","1448"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/ScrollableIcons.js",["1449","1450"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Navbar.js",["1451","1452"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/wishlistsmackbar.js",["1453","1454"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/cartsmackbar.js",["1455"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mapcomp.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mapmobile.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/MobileRatingSearchCard.js",["1456","1457"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcardmodel.js",["1458"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/roomrules.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/dateselect.js",["1459"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RatingBar.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/linegraph.js",["1460","1461","1462","1463","1464","1465"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/redux/auth/reducers/index.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/redux/auth/actiontypes/auth_action_types.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/seller_reviews_product.js",["1466","1467","1468"],"import React,{ useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport axios from 'axios'\nimport Eror from '../components/eror'\nimport Grid from '@material-ui/core/Grid';\n\n\nimport Load1 from './Spinner';\n\nimport SellerReviews from './seller_rating_and_reviews'\n\naxios.defaults.xsrfHeaderName = `${process.env.REACT_APP_XSRF_COOKIE}`;\naxios.defaults.xsrfCookieName = `${process.env.REACT_APP_CSRF_COOKIE}`;\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    \n  \n \n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0),\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n      marginLeft:drawerWidth,\n      padding: theme.spacing(3),\n    },\n  },\n  erorclass:{\n    width:'50%',\n    marginLeft:'25%',\n  },\n  textclass:{\n    float: 'left',\n  },\n  table: {\n    width:'30%'\n  },\n  head: {\n    fontSize:'20px'\n  },\n  row: {\n    fontSize:'20px'\n  },\n  barclass: {\n    width:'0%',\n    display: 'block',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    \n  },\n  myclass: {\n      \n      width:'85vw',\n      [theme.breakpoints.up('sm')]: {\n        width:'60vw',\n      },\n  },\n}));\n  \n\nfunction MyReviews({id}) {\n\n    const [error,seterror] = useState(false)\n    const [myreviews,setreviews] = useState()\n\n    const [params1,setparams] = useState({\n        page:1,\n        ordering:'-rating'\n      })\n    \n   \n\n    React.useEffect(\n        async () => {\n            const config = {\n                headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `JWT ${localStorage.getItem('access')}`,\n                },\n              };\n              \n              if(id)\n              \n              {\n               \n                try{\n                    const res1 = await axios.get(`${process.env.REACT_APP_API_URL}/sourcedsjeui829u3u89hd98y42gsvsggwww/seller/product/reviews/`,{\n                      params:{\n                        seller_id:id,\n                        page:params1.page,\n                        ordering:params1.ordering,\n                      },\n                      config:config\n                    });\n                    \n                   \n                    \n                        setreviews(res1.data.results);\n                        \n                        \n                    }  catch (err) {\n                      // Handle Error Here\n                      console.error(err);\n                  }\n                \n              \n        }\n    }\n    \n    ,[id,params1])\n\n\n    const classes = useStyles();\n\n    \n\n    if(error==true)\n    {\n      return <div className={classes.erorclass}><Eror error='Error' /></div>\n    }\n\n    if(id && myreviews){\n    \n    \n    return (\n        <div>\n             \n\n            <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n            <Grid item>\n            <div className={classes.myclass}>\n            <SellerReviews reviews={myreviews} params={params1} setparams={setparams}/>\n            </div>\n            </Grid>\n\n            </Grid>\n\n            \n           \n        </div>\n    )\n}\nelse{\n  return <div><Load1 loading={true} /></div>\n}\n}\n\n\n\nexport default MyReviews\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/BookCard.js",["1469","1470","1471","1472","1473","1474","1475","1476","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/error_snackbar.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/success_snackbar.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/capacityselect.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/FacilityIconProvider.js",["1501","1502"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/MonthSelect.js",["1503"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/CancellationPolicyPopover.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcarddatepicker.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/redux/auth/reducers/authreducers.js",["1504"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/piechart3.js",["1505","1506","1507","1508","1509"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/piechart2.js",["1510","1511","1512","1513","1514"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/multicolor_chart.js",["1515","1516","1517"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/piechart.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/barchart.js",["1518","1519","1520","1521","1522","1523","1524","1525","1526","1527"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Rating.js",["1528"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/map_form.js",["1529","1530"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mobileimages.js",["1531"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mobileappbar.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RatingWithCompliment.js",["1532","1533"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RoomDescriptionContent.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/scrolloffers.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RatingAndReviews.js",["1534","1535","1536","1537","1538","1539","1540","1541","1542"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/SpecificRoomCarousel.js",["1543","1544","1545"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/apartmentcard.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/shop_card.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/room_card.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/address_card.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bank_card.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/profilecard.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/FacilityIconProvider_shop.js",["1546","1547"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RecentBookingsTable_apartment.js",["1548","1549","1550","1551"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RecentBookingsTable_shop.js",["1552","1553","1554","1555"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/RecentBookingTable.js",["1556","1557","1558"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/SellerDetails.js",["1559","1560"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Review.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/PaymentForm.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/AddressForm.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/booksummary_apartment.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/customerdetails.js",["1561"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/imagemodal.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/descriptiontableapartment.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/newcoupon.js",["1562","1563","1564","1565","1566"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/descriptiontableshop.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/rating_meter.js",["1567"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/couponmodal.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/descriptiontable.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/coupon_card1.js",["1568","1569","1570"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/booksummary_shop.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/booksummary.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/customerpolicies.js",["1571","1572","1573","1574"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/sellerpolicies.js",["1575","1576","1577","1578"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/complainttable.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcardmodel1_apartment.js",["1579"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcardmodel1_shop.js",["1580"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/searchlist_apartment.js",["1581"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/searchlist_shops.js",["1582"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/facilitiestable.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/invoice.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/detailstable.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/wishlistapartments.js",["1583","1584","1585","1586","1587","1588","1589","1590","1591","1592"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/wishlistshops.js",["1593","1594","1595","1596","1597","1598","1599","1600","1601","1602"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/wishlistrooms.js",["1603","1604","1605","1606","1607","1608","1609","1610","1611","1612"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcardmodel_shop.js",["1613"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcardmodel_apartment.js",["1614"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcard_shop.js",["1615","1616","1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mobileimages_apartments.js",["1629"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcard_apartment.js",["1630","1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642","1643"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/specificapartmentcarosel.js",["1644","1645","1646"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookcardmodel1.js",["1647"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/searchlist.js",["1648"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/datepick.js",["1649"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/scrollapartment.js",["1650","1651","1652"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/scrollshops.js",["1653","1654"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Welcome.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/scrollroom.js",["1655","1656"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/scrollcoupons.js",["1657","1658","1659"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/locationfilter.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/apartment_type.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mapmount_apartment.js",["1660","1661"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/BHKfilter.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/sort.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/searchfilter.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/searchfilter2.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bedtypefilter.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/floorfilter.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/minwindows_apartment.js",["1662"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/sequrityfilter.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/minratingfilter.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mintrustpoints.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/datefilter.js",["1663","1664","1665"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/facilities_filter_apartment.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/priceslider.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/PaginationOutlined.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/post_apartment.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/bookedcheckbox.js",["1666"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/minwindows_shop.js",["1667"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mapmount_shops.js",["1668"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/facilitiesfilter_shop.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceThankYouMsg.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceItemsTable.js",["1669"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceNo.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/BillTo.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceTitle.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Spinner.js",["1670","1671","1672"],"import React from 'react'\nimport { css } from \"@emotion/core\";\nimport HashLoader from \"react-spinners/HashLoader\";\nimport Load from '../loading.gif'\nimport Grid from '@material-ui/core/Grid';\n\n\n\n\nfunction Spinner({loading}) {\n\n   const override = css`\n   display: block;\n   margin: 0 auto;\n   border-color: #f50057;\n   color: #f50057;\n    `;\n\n    return (\n            <div>\n\n                \n\n\n                {\n                    loading ?                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    style={{height:'50vh'}}\n                    >\n                    <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    >\n                    <img src={Load} style={{maxWidth:300,width:'50vw'}}/>\n    \n                    </Grid></Grid> : null\n                }\n                \n                 \n            </div> \n    );\n}\n\nexport default Spinner;\n","/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/card_1_apartment.js",["1673","1674"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/searchcard_apartment.js",["1675","1676","1677","1678","1679","1680","1681","1682","1683","1684","1685"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/card_1.js",["1686","1687"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/searchcard_shop.js",["1688","1689","1690","1691","1692","1693","1694","1695","1696","1697","1698"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/monthselect_shop.js",["1699"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/facilityiconprovider_apartment.js",["1700","1701"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/card_1_shop.js",["1702","1703"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Mapmount.js",["1704"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/minwindows.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/facilitiesfilter.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Capacityfilter.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/foodcheckbox.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/categoryselect.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/Posts.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/post_shops.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/newcardapartment.js",["1705","1706","1707"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/newcardshop.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/containers/Serachbox.js",["1708","1709"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/newcardroom.js",["1710","1711","1712","1713"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mapview.js",["1714","1715","1716"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceTableFooter.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceTableRow.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/InvoiceTableHeader.js",[],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mobilesearchapartmentimage.js",["1717","1718"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/MobileSearchCardImage.js",["1719","1720"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/mobilesearchshopimage.js",["1721","1722"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/SearchCard.js",["1723","1724","1725","1726","1727","1728","1729","1730","1731","1732","1733","1734","1735","1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/newcardimage.js",["1751","1752","1753","1754","1755","1756"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/components/iconscroll.js",["1757","1758","1759","1760"],"/home/punisher/Desktop/temp_new/new/dev_project/frontend/rentit_front/src/hooks/usescript.js",[],{"ruleId":"1761","replacedBy":"1762"},{"ruleId":"1763","replacedBy":"1764"},{"ruleId":"1765","severity":1,"message":"1766","line":18,"column":8,"nodeType":"1767","messageId":"1768","endLine":18,"endColumn":21},{"ruleId":"1765","severity":1,"message":"1769","line":19,"column":8,"nodeType":"1767","messageId":"1768","endLine":19,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1770","line":26,"column":8,"nodeType":"1767","messageId":"1768","endLine":26,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1771","line":248,"column":11,"nodeType":"1767","messageId":"1768","endLine":248,"endColumn":18},{"ruleId":"1765","severity":1,"message":"1772","line":255,"column":12,"nodeType":"1767","messageId":"1768","endLine":255,"endColumn":25},{"ruleId":"1765","severity":1,"message":"1773","line":255,"column":26,"nodeType":"1767","messageId":"1768","endLine":255,"endColumn":42},{"ruleId":"1774","severity":1,"message":"1775","line":265,"column":19,"nodeType":"1776","messageId":"1777","endLine":265,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1779","line":279,"column":21,"nodeType":"1780","endLine":302,"endColumn":6},{"ruleId":"1778","severity":1,"message":"1779","line":304,"column":21,"nodeType":"1780","endLine":326,"endColumn":6},{"ruleId":"1778","severity":1,"message":"1779","line":328,"column":21,"nodeType":"1780","endLine":350,"endColumn":6},{"ruleId":"1778","severity":1,"message":"1779","line":355,"column":21,"nodeType":"1780","endLine":378,"endColumn":6},{"ruleId":"1778","severity":1,"message":"1779","line":380,"column":21,"nodeType":"1780","endLine":403,"endColumn":6},{"ruleId":"1778","severity":1,"message":"1779","line":405,"column":21,"nodeType":"1780","endLine":428,"endColumn":6},{"ruleId":"1765","severity":1,"message":"1781","line":66,"column":17,"nodeType":"1767","messageId":"1768","endLine":66,"endColumn":25},{"ruleId":"1765","severity":1,"message":"1782","line":160,"column":13,"nodeType":"1767","messageId":"1768","endLine":160,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1783","line":234,"column":6,"nodeType":"1784","endLine":234,"endColumn":27,"suggestions":"1785"},{"ruleId":"1778","severity":1,"message":"1779","line":237,"column":13,"nodeType":"1780","endLine":260,"endColumn":4},{"ruleId":"1765","severity":1,"message":"1786","line":264,"column":9,"nodeType":"1767","messageId":"1768","endLine":264,"endColumn":25},{"ruleId":"1787","severity":1,"message":"1788","line":79,"column":3,"nodeType":"1789","messageId":"1777","endLine":79,"endColumn":11},{"ruleId":"1765","severity":1,"message":"1790","line":167,"column":10,"nodeType":"1767","messageId":"1768","endLine":167,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1791","line":176,"column":10,"nodeType":"1767","messageId":"1768","endLine":176,"endColumn":19},{"ruleId":"1765","severity":1,"message":"1792","line":176,"column":20,"nodeType":"1767","messageId":"1768","endLine":176,"endColumn":35},{"ruleId":"1765","severity":1,"message":"1793","line":180,"column":10,"nodeType":"1767","messageId":"1768","endLine":180,"endColumn":13},{"ruleId":"1778","severity":1,"message":"1794","line":217,"column":6,"nodeType":"1784","endLine":217,"endColumn":29,"suggestions":"1795"},{"ruleId":"1778","severity":1,"message":"1779","line":219,"column":14,"nodeType":"1780","endLine":263,"endColumn":4},{"ruleId":"1778","severity":1,"message":"1796","line":263,"column":5,"nodeType":"1784","endLine":263,"endColumn":7,"suggestions":"1797"},{"ruleId":"1778","severity":1,"message":"1779","line":265,"column":14,"nodeType":"1780","endLine":305,"endColumn":4},{"ruleId":"1765","severity":1,"message":"1798","line":267,"column":11,"nodeType":"1767","messageId":"1768","endLine":267,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1794","line":305,"column":5,"nodeType":"1784","endLine":305,"endColumn":28,"suggestions":"1799"},{"ruleId":"1774","severity":1,"message":"1775","line":324,"column":21,"nodeType":"1776","messageId":"1777","endLine":324,"endColumn":23},{"ruleId":"1774","severity":1,"message":"1775","line":350,"column":21,"nodeType":"1776","messageId":"1777","endLine":350,"endColumn":23},{"ruleId":"1787","severity":1,"message":"1788","line":82,"column":3,"nodeType":"1789","messageId":"1777","endLine":82,"endColumn":11},{"ruleId":"1765","severity":1,"message":"1790","line":169,"column":10,"nodeType":"1767","messageId":"1768","endLine":169,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1791","line":178,"column":10,"nodeType":"1767","messageId":"1768","endLine":178,"endColumn":19},{"ruleId":"1765","severity":1,"message":"1792","line":178,"column":20,"nodeType":"1767","messageId":"1768","endLine":178,"endColumn":35},{"ruleId":"1765","severity":1,"message":"1793","line":182,"column":10,"nodeType":"1767","messageId":"1768","endLine":182,"endColumn":13},{"ruleId":"1778","severity":1,"message":"1794","line":219,"column":6,"nodeType":"1784","endLine":219,"endColumn":29,"suggestions":"1800"},{"ruleId":"1778","severity":1,"message":"1779","line":221,"column":14,"nodeType":"1780","endLine":265,"endColumn":4},{"ruleId":"1778","severity":1,"message":"1796","line":265,"column":5,"nodeType":"1784","endLine":265,"endColumn":7,"suggestions":"1801"},{"ruleId":"1778","severity":1,"message":"1779","line":267,"column":14,"nodeType":"1780","endLine":307,"endColumn":4},{"ruleId":"1765","severity":1,"message":"1798","line":269,"column":11,"nodeType":"1767","messageId":"1768","endLine":269,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1794","line":307,"column":5,"nodeType":"1784","endLine":307,"endColumn":28,"suggestions":"1802"},{"ruleId":"1774","severity":1,"message":"1775","line":326,"column":21,"nodeType":"1776","messageId":"1777","endLine":326,"endColumn":23},{"ruleId":"1774","severity":1,"message":"1775","line":352,"column":21,"nodeType":"1776","messageId":"1777","endLine":352,"endColumn":23},{"ruleId":"1765","severity":1,"message":"1803","line":130,"column":9,"nodeType":"1767","messageId":"1768","endLine":130,"endColumn":25},{"ruleId":"1765","severity":1,"message":"1804","line":16,"column":8,"nodeType":"1767","messageId":"1768","endLine":16,"endColumn":14},{"ruleId":"1765","severity":1,"message":"1805","line":29,"column":7,"nodeType":"1767","messageId":"1768","endLine":29,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1779","line":108,"column":9,"nodeType":"1780","endLine":222,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1806","line":224,"column":6,"nodeType":"1784","endLine":224,"endColumn":8,"suggestions":"1807"},{"ruleId":"1774","severity":1,"message":"1775","line":243,"column":13,"nodeType":"1776","messageId":"1777","endLine":243,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1804","line":18,"column":8,"nodeType":"1767","messageId":"1768","endLine":18,"endColumn":14},{"ruleId":"1765","severity":1,"message":"1805","line":31,"column":7,"nodeType":"1767","messageId":"1768","endLine":31,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1779","line":105,"column":7,"nodeType":"1780","endLine":198,"endColumn":8},{"ruleId":"1778","severity":1,"message":"1806","line":200,"column":4,"nodeType":"1784","endLine":200,"endColumn":6,"suggestions":"1808"},{"ruleId":"1774","severity":1,"message":"1775","line":217,"column":11,"nodeType":"1776","messageId":"1777","endLine":217,"endColumn":13},{"ruleId":"1809","severity":1,"message":"1810","line":416,"column":97,"nodeType":"1811","endLine":416,"endColumn":142},{"ruleId":"1765","severity":1,"message":"1804","line":19,"column":8,"nodeType":"1767","messageId":"1768","endLine":19,"endColumn":14},{"ruleId":"1765","severity":1,"message":"1805","line":32,"column":7,"nodeType":"1767","messageId":"1768","endLine":32,"endColumn":10},{"ruleId":"1765","severity":1,"message":"1812","line":95,"column":10,"nodeType":"1767","messageId":"1768","endLine":95,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1813","line":95,"column":18,"nodeType":"1767","messageId":"1768","endLine":95,"endColumn":28},{"ruleId":"1778","severity":1,"message":"1779","line":106,"column":9,"nodeType":"1780","endLine":182,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1806","line":184,"column":6,"nodeType":"1784","endLine":184,"endColumn":8,"suggestions":"1814"},{"ruleId":"1774","severity":1,"message":"1775","line":201,"column":13,"nodeType":"1776","messageId":"1777","endLine":201,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1781","line":57,"column":17,"nodeType":"1767","messageId":"1768","endLine":57,"endColumn":25},{"ruleId":"1787","severity":1,"message":"1815","line":130,"column":5,"nodeType":"1789","messageId":"1777","endLine":130,"endColumn":12},{"ruleId":"1765","severity":1,"message":"1782","line":146,"column":13,"nodeType":"1767","messageId":"1768","endLine":146,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1783","line":217,"column":6,"nodeType":"1784","endLine":217,"endColumn":27,"suggestions":"1816"},{"ruleId":"1778","severity":1,"message":"1779","line":220,"column":13,"nodeType":"1780","endLine":243,"endColumn":4},{"ruleId":"1765","severity":1,"message":"1786","line":247,"column":9,"nodeType":"1767","messageId":"1768","endLine":247,"endColumn":25},{"ruleId":"1765","severity":1,"message":"1781","line":58,"column":17,"nodeType":"1767","messageId":"1768","endLine":58,"endColumn":25},{"ruleId":"1765","severity":1,"message":"1782","line":156,"column":13,"nodeType":"1767","messageId":"1768","endLine":156,"endColumn":17},{"ruleId":"1787","severity":1,"message":"1817","line":193,"column":11,"nodeType":"1789","messageId":"1777","endLine":193,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1783","line":237,"column":6,"nodeType":"1784","endLine":237,"endColumn":27,"suggestions":"1818"},{"ruleId":"1778","severity":1,"message":"1779","line":240,"column":13,"nodeType":"1780","endLine":263,"endColumn":4},{"ruleId":"1765","severity":1,"message":"1786","line":267,"column":9,"nodeType":"1767","messageId":"1768","endLine":267,"endColumn":25},{"ruleId":"1765","severity":1,"message":"1819","line":9,"column":8,"nodeType":"1767","messageId":"1768","endLine":9,"endColumn":22},{"ruleId":"1765","severity":1,"message":"1820","line":60,"column":12,"nodeType":"1767","messageId":"1768","endLine":60,"endColumn":19},{"ruleId":"1765","severity":1,"message":"1821","line":64,"column":12,"nodeType":"1767","messageId":"1768","endLine":64,"endColumn":21},{"ruleId":"1765","severity":1,"message":"1822","line":67,"column":12,"nodeType":"1767","messageId":"1768","endLine":67,"endColumn":16},{"ruleId":"1823","severity":1,"message":"1824","line":114,"column":47,"nodeType":"1776","messageId":"1825","endLine":114,"endColumn":48},{"ruleId":"1765","severity":1,"message":"1826","line":149,"column":17,"nodeType":"1767","messageId":"1768","endLine":149,"endColumn":20},{"ruleId":"1827","severity":1,"message":"1828","line":190,"column":36,"nodeType":"1780","messageId":"1829","endLine":190,"endColumn":38},{"ruleId":"1823","severity":1,"message":"1824","line":192,"column":53,"nodeType":"1776","messageId":"1825","endLine":192,"endColumn":54},{"ruleId":"1765","severity":1,"message":"1826","line":230,"column":21,"nodeType":"1767","messageId":"1768","endLine":230,"endColumn":24},{"ruleId":"1827","severity":1,"message":"1828","line":270,"column":40,"nodeType":"1780","messageId":"1829","endLine":270,"endColumn":42},{"ruleId":"1823","severity":1,"message":"1824","line":272,"column":57,"nodeType":"1776","messageId":"1825","endLine":272,"endColumn":58},{"ruleId":"1778","severity":1,"message":"1779","line":138,"column":9,"nodeType":"1780","endLine":204,"endColumn":6},{"ruleId":"1765","severity":1,"message":"1830","line":246,"column":13,"nodeType":"1767","messageId":"1768","endLine":246,"endColumn":17},{"ruleId":"1774","severity":1,"message":"1775","line":343,"column":13,"nodeType":"1776","messageId":"1777","endLine":343,"endColumn":15},{"ruleId":"1831","severity":1,"message":"1832","line":408,"column":106,"nodeType":"1833","endLine":408,"endColumn":136},{"ruleId":"1831","severity":1,"message":"1832","line":449,"column":241,"nodeType":"1833","endLine":449,"endColumn":264},{"ruleId":"1831","severity":1,"message":"1832","line":461,"column":209,"nodeType":"1833","endLine":461,"endColumn":232},{"ruleId":"1765","severity":1,"message":"1834","line":130,"column":11,"nodeType":"1767","messageId":"1768","endLine":130,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1835","line":139,"column":18,"nodeType":"1767","messageId":"1768","endLine":139,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1779","line":149,"column":9,"nodeType":"1780","endLine":170,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":258,"column":14,"nodeType":"1776","messageId":"1777","endLine":258,"endColumn":16},{"ruleId":"1831","severity":1,"message":"1832","line":303,"column":9,"nodeType":"1833","endLine":303,"endColumn":67},{"ruleId":"1778","severity":1,"message":"1779","line":145,"column":9,"nodeType":"1780","endLine":211,"endColumn":6},{"ruleId":"1765","severity":1,"message":"1830","line":253,"column":13,"nodeType":"1767","messageId":"1768","endLine":253,"endColumn":17},{"ruleId":"1774","severity":1,"message":"1775","line":350,"column":13,"nodeType":"1776","messageId":"1777","endLine":350,"endColumn":15},{"ruleId":"1831","severity":1,"message":"1832","line":415,"column":106,"nodeType":"1833","endLine":415,"endColumn":136},{"ruleId":"1831","severity":1,"message":"1832","line":456,"column":241,"nodeType":"1833","endLine":456,"endColumn":264},{"ruleId":"1831","severity":1,"message":"1832","line":468,"column":209,"nodeType":"1833","endLine":468,"endColumn":232},{"ruleId":"1765","severity":1,"message":"1834","line":130,"column":11,"nodeType":"1767","messageId":"1768","endLine":130,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1835","line":139,"column":18,"nodeType":"1767","messageId":"1768","endLine":139,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1779","line":149,"column":9,"nodeType":"1780","endLine":170,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":258,"column":14,"nodeType":"1776","messageId":"1777","endLine":258,"endColumn":16},{"ruleId":"1831","severity":1,"message":"1832","line":303,"column":9,"nodeType":"1833","endLine":303,"endColumn":67},{"ruleId":"1778","severity":1,"message":"1779","line":156,"column":9,"nodeType":"1780","endLine":222,"endColumn":6},{"ruleId":"1765","severity":1,"message":"1830","line":264,"column":13,"nodeType":"1767","messageId":"1768","endLine":264,"endColumn":17},{"ruleId":"1774","severity":1,"message":"1775","line":361,"column":13,"nodeType":"1776","messageId":"1777","endLine":361,"endColumn":15},{"ruleId":"1831","severity":1,"message":"1832","line":426,"column":106,"nodeType":"1833","endLine":426,"endColumn":136},{"ruleId":"1831","severity":1,"message":"1832","line":467,"column":241,"nodeType":"1833","endLine":467,"endColumn":264},{"ruleId":"1831","severity":1,"message":"1832","line":479,"column":209,"nodeType":"1833","endLine":479,"endColumn":232},{"ruleId":"1765","severity":1,"message":"1834","line":130,"column":11,"nodeType":"1767","messageId":"1768","endLine":130,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1835","line":139,"column":18,"nodeType":"1767","messageId":"1768","endLine":139,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1779","line":149,"column":9,"nodeType":"1780","endLine":170,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":258,"column":14,"nodeType":"1776","messageId":"1777","endLine":258,"endColumn":16},{"ruleId":"1831","severity":1,"message":"1832","line":303,"column":9,"nodeType":"1833","endLine":303,"endColumn":67},{"ruleId":"1765","severity":1,"message":"1836","line":1,"column":17,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":25},{"ruleId":"1765","severity":1,"message":"1837","line":1,"column":27,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":36},{"ruleId":"1765","severity":1,"message":"1838","line":4,"column":8,"nodeType":"1767","messageId":"1768","endLine":4,"endColumn":19},{"ruleId":"1765","severity":1,"message":"1839","line":5,"column":8,"nodeType":"1767","messageId":"1768","endLine":5,"endColumn":18},{"ruleId":"1765","severity":1,"message":"1840","line":3,"column":10,"nodeType":"1767","messageId":"1768","endLine":3,"endColumn":14},{"ruleId":"1765","severity":1,"message":"1841","line":5,"column":17,"nodeType":"1767","messageId":"1768","endLine":5,"endColumn":26},{"ruleId":"1831","severity":1,"message":"1832","line":115,"column":99,"nodeType":"1833","endLine":115,"endColumn":145},{"ruleId":"1778","severity":1,"message":"1842","line":18,"column":8,"nodeType":"1784","endLine":18,"endColumn":10,"suggestions":"1843"},{"ruleId":"1778","severity":1,"message":"1779","line":158,"column":5,"nodeType":"1780","endLine":193,"endColumn":6},{"ruleId":"1778","severity":1,"message":"1779","line":165,"column":7,"nodeType":"1780","endLine":233,"endColumn":8},{"ruleId":"1778","severity":1,"message":"1844","line":235,"column":4,"nodeType":"1784","endLine":235,"endColumn":52,"suggestions":"1845"},{"ruleId":"1765","severity":1,"message":"1826","line":282,"column":15,"nodeType":"1767","messageId":"1768","endLine":282,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1779","line":153,"column":7,"nodeType":"1780","endLine":219,"endColumn":8},{"ruleId":"1846","severity":1,"message":"1847","line":173,"column":17,"nodeType":"1767","messageId":"1848","endLine":173,"endColumn":19},{"ruleId":"1778","severity":1,"message":"1849","line":221,"column":4,"nodeType":"1784","endLine":221,"endColumn":52,"suggestions":"1850"},{"ruleId":"1765","severity":1,"message":"1826","line":275,"column":15,"nodeType":"1767","messageId":"1768","endLine":275,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1779","line":156,"column":7,"nodeType":"1780","endLine":224,"endColumn":8},{"ruleId":"1846","severity":1,"message":"1847","line":175,"column":17,"nodeType":"1767","messageId":"1848","endLine":175,"endColumn":19},{"ruleId":"1778","severity":1,"message":"1851","line":226,"column":4,"nodeType":"1784","endLine":226,"endColumn":52,"suggestions":"1852"},{"ruleId":"1765","severity":1,"message":"1826","line":280,"column":15,"nodeType":"1767","messageId":"1768","endLine":280,"endColumn":18},{"ruleId":"1765","severity":1,"message":"1853","line":5,"column":8,"nodeType":"1767","messageId":"1768","endLine":5,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1854","line":15,"column":8,"nodeType":"1767","messageId":"1768","endLine":15,"endColumn":14},{"ruleId":"1765","severity":1,"message":"1855","line":17,"column":10,"nodeType":"1767","messageId":"1768","endLine":17,"endColumn":19},{"ruleId":"1765","severity":1,"message":"1834","line":35,"column":11,"nodeType":"1767","messageId":"1768","endLine":35,"endColumn":16},{"ruleId":"1778","severity":1,"message":"1779","line":100,"column":9,"nodeType":"1780","endLine":116,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1806","line":118,"column":6,"nodeType":"1784","endLine":118,"endColumn":8,"suggestions":"1856"},{"ruleId":"1765","severity":1,"message":"1826","line":137,"column":19,"nodeType":"1767","messageId":"1768","endLine":137,"endColumn":22},{"ruleId":"1765","severity":1,"message":"1826","line":140,"column":19,"nodeType":"1767","messageId":"1768","endLine":140,"endColumn":22},{"ruleId":"1774","severity":1,"message":"1775","line":174,"column":13,"nodeType":"1776","messageId":"1777","endLine":174,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1834","line":45,"column":11,"nodeType":"1767","messageId":"1768","endLine":45,"endColumn":16},{"ruleId":"1778","severity":1,"message":"1779","line":51,"column":9,"nodeType":"1780","endLine":86,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1779","line":100,"column":9,"nodeType":"1780","endLine":116,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1806","line":118,"column":6,"nodeType":"1784","endLine":118,"endColumn":8,"suggestions":"1857"},{"ruleId":"1765","severity":1,"message":"1826","line":137,"column":19,"nodeType":"1767","messageId":"1768","endLine":137,"endColumn":22},{"ruleId":"1765","severity":1,"message":"1826","line":140,"column":19,"nodeType":"1767","messageId":"1768","endLine":140,"endColumn":22},{"ruleId":"1774","severity":1,"message":"1775","line":173,"column":13,"nodeType":"1776","messageId":"1777","endLine":173,"endColumn":15},{"ruleId":"1778","severity":1,"message":"1779","line":100,"column":9,"nodeType":"1780","endLine":116,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1806","line":118,"column":6,"nodeType":"1784","endLine":118,"endColumn":8,"suggestions":"1858"},{"ruleId":"1765","severity":1,"message":"1826","line":137,"column":19,"nodeType":"1767","messageId":"1768","endLine":137,"endColumn":22},{"ruleId":"1765","severity":1,"message":"1826","line":140,"column":19,"nodeType":"1767","messageId":"1768","endLine":140,"endColumn":22},{"ruleId":"1774","severity":1,"message":"1775","line":173,"column":13,"nodeType":"1776","messageId":"1777","endLine":173,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1859","line":101,"column":10,"nodeType":"1767","messageId":"1768","endLine":101,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1779","line":150,"column":9,"nodeType":"1780","endLine":238,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1860","line":240,"column":6,"nodeType":"1784","endLine":240,"endColumn":8,"suggestions":"1861"},{"ruleId":"1774","severity":1,"message":"1862","line":244,"column":15,"nodeType":"1776","messageId":"1777","endLine":244,"endColumn":17},{"ruleId":"1774","severity":1,"message":"1775","line":245,"column":96,"nodeType":"1776","messageId":"1777","endLine":245,"endColumn":98},{"ruleId":"1774","severity":1,"message":"1775","line":245,"column":154,"nodeType":"1776","messageId":"1777","endLine":245,"endColumn":156},{"ruleId":"1774","severity":1,"message":"1775","line":246,"column":94,"nodeType":"1776","messageId":"1777","endLine":246,"endColumn":96},{"ruleId":"1774","severity":1,"message":"1862","line":258,"column":38,"nodeType":"1776","messageId":"1777","endLine":258,"endColumn":40},{"ruleId":"1774","severity":1,"message":"1862","line":268,"column":38,"nodeType":"1776","messageId":"1777","endLine":268,"endColumn":40},{"ruleId":"1774","severity":1,"message":"1775","line":270,"column":111,"nodeType":"1776","messageId":"1777","endLine":270,"endColumn":113},{"ruleId":"1774","severity":1,"message":"1862","line":277,"column":38,"nodeType":"1776","messageId":"1777","endLine":277,"endColumn":40},{"ruleId":"1774","severity":1,"message":"1775","line":279,"column":111,"nodeType":"1776","messageId":"1777","endLine":279,"endColumn":113},{"ruleId":"1774","severity":1,"message":"1862","line":286,"column":38,"nodeType":"1776","messageId":"1777","endLine":286,"endColumn":40},{"ruleId":"1774","severity":1,"message":"1775","line":288,"column":111,"nodeType":"1776","messageId":"1777","endLine":288,"endColumn":113},{"ruleId":"1774","severity":1,"message":"1862","line":295,"column":38,"nodeType":"1776","messageId":"1777","endLine":295,"endColumn":40},{"ruleId":"1774","severity":1,"message":"1775","line":297,"column":111,"nodeType":"1776","messageId":"1777","endLine":297,"endColumn":113},{"ruleId":"1774","severity":1,"message":"1862","line":304,"column":38,"nodeType":"1776","messageId":"1777","endLine":304,"endColumn":40},{"ruleId":"1774","severity":1,"message":"1775","line":306,"column":111,"nodeType":"1776","messageId":"1777","endLine":306,"endColumn":113},{"ruleId":"1774","severity":1,"message":"1862","line":313,"column":38,"nodeType":"1776","messageId":"1777","endLine":313,"endColumn":40},{"ruleId":"1774","severity":1,"message":"1775","line":315,"column":111,"nodeType":"1776","messageId":"1777","endLine":315,"endColumn":113},{"ruleId":"1774","severity":1,"message":"1862","line":322,"column":38,"nodeType":"1776","messageId":"1777","endLine":322,"endColumn":40},{"ruleId":"1774","severity":1,"message":"1775","line":324,"column":111,"nodeType":"1776","messageId":"1777","endLine":324,"endColumn":113},{"ruleId":"1774","severity":1,"message":"1862","line":331,"column":38,"nodeType":"1776","messageId":"1777","endLine":331,"endColumn":40},{"ruleId":"1774","severity":1,"message":"1775","line":333,"column":111,"nodeType":"1776","messageId":"1777","endLine":333,"endColumn":113},{"ruleId":"1774","severity":1,"message":"1862","line":340,"column":40,"nodeType":"1776","messageId":"1777","endLine":340,"endColumn":42},{"ruleId":"1774","severity":1,"message":"1775","line":342,"column":113,"nodeType":"1776","messageId":"1777","endLine":342,"endColumn":115},{"ruleId":"1774","severity":1,"message":"1775","line":364,"column":28,"nodeType":"1776","messageId":"1777","endLine":364,"endColumn":30},{"ruleId":"1774","severity":1,"message":"1775","line":364,"column":44,"nodeType":"1776","messageId":"1777","endLine":364,"endColumn":46},{"ruleId":"1774","severity":1,"message":"1862","line":368,"column":18,"nodeType":"1776","messageId":"1777","endLine":368,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1863","line":374,"column":7,"nodeType":"1784","endLine":374,"endColumn":17,"suggestions":"1864"},{"ruleId":"1765","severity":1,"message":"1826","line":425,"column":13,"nodeType":"1767","messageId":"1768","endLine":425,"endColumn":16},{"ruleId":"1774","severity":1,"message":"1775","line":427,"column":28,"nodeType":"1776","messageId":"1777","endLine":427,"endColumn":30},{"ruleId":"1765","severity":1,"message":"1865","line":494,"column":13,"nodeType":"1767","messageId":"1768","endLine":494,"endColumn":21},{"ruleId":"1774","severity":1,"message":"1862","line":502,"column":30,"nodeType":"1776","messageId":"1777","endLine":502,"endColumn":32},{"ruleId":"1774","severity":1,"message":"1775","line":502,"column":44,"nodeType":"1776","messageId":"1777","endLine":502,"endColumn":46},{"ruleId":"1774","severity":1,"message":"1775","line":544,"column":13,"nodeType":"1776","messageId":"1777","endLine":544,"endColumn":15},{"ruleId":"1778","severity":1,"message":"1779","line":156,"column":9,"nodeType":"1780","endLine":238,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1860","line":240,"column":6,"nodeType":"1784","endLine":240,"endColumn":8,"suggestions":"1866"},{"ruleId":"1774","severity":1,"message":"1862","line":244,"column":15,"nodeType":"1776","messageId":"1777","endLine":244,"endColumn":17},{"ruleId":"1774","severity":1,"message":"1775","line":245,"column":96,"nodeType":"1776","messageId":"1777","endLine":245,"endColumn":98},{"ruleId":"1774","severity":1,"message":"1775","line":245,"column":154,"nodeType":"1776","messageId":"1777","endLine":245,"endColumn":156},{"ruleId":"1774","severity":1,"message":"1775","line":246,"column":94,"nodeType":"1776","messageId":"1777","endLine":246,"endColumn":96},{"ruleId":"1774","severity":1,"message":"1775","line":261,"column":28,"nodeType":"1776","messageId":"1777","endLine":261,"endColumn":30},{"ruleId":"1774","severity":1,"message":"1775","line":261,"column":44,"nodeType":"1776","messageId":"1777","endLine":261,"endColumn":46},{"ruleId":"1774","severity":1,"message":"1862","line":265,"column":18,"nodeType":"1776","messageId":"1777","endLine":265,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1863","line":271,"column":7,"nodeType":"1784","endLine":271,"endColumn":17,"suggestions":"1867"},{"ruleId":"1765","severity":1,"message":"1826","line":323,"column":13,"nodeType":"1767","messageId":"1768","endLine":323,"endColumn":16},{"ruleId":"1774","severity":1,"message":"1775","line":326,"column":28,"nodeType":"1776","messageId":"1777","endLine":326,"endColumn":30},{"ruleId":"1774","severity":1,"message":"1862","line":400,"column":30,"nodeType":"1776","messageId":"1777","endLine":400,"endColumn":32},{"ruleId":"1774","severity":1,"message":"1775","line":400,"column":44,"nodeType":"1776","messageId":"1777","endLine":400,"endColumn":46},{"ruleId":"1774","severity":1,"message":"1775","line":442,"column":13,"nodeType":"1776","messageId":"1777","endLine":442,"endColumn":15},{"ruleId":"1778","severity":1,"message":"1779","line":161,"column":9,"nodeType":"1780","endLine":247,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1860","line":249,"column":6,"nodeType":"1784","endLine":249,"endColumn":8,"suggestions":"1868"},{"ruleId":"1774","severity":1,"message":"1862","line":253,"column":15,"nodeType":"1776","messageId":"1777","endLine":253,"endColumn":17},{"ruleId":"1774","severity":1,"message":"1775","line":254,"column":96,"nodeType":"1776","messageId":"1777","endLine":254,"endColumn":98},{"ruleId":"1774","severity":1,"message":"1775","line":254,"column":154,"nodeType":"1776","messageId":"1777","endLine":254,"endColumn":156},{"ruleId":"1774","severity":1,"message":"1775","line":255,"column":94,"nodeType":"1776","messageId":"1777","endLine":255,"endColumn":96},{"ruleId":"1774","severity":1,"message":"1775","line":270,"column":28,"nodeType":"1776","messageId":"1777","endLine":270,"endColumn":30},{"ruleId":"1774","severity":1,"message":"1775","line":270,"column":44,"nodeType":"1776","messageId":"1777","endLine":270,"endColumn":46},{"ruleId":"1774","severity":1,"message":"1862","line":274,"column":18,"nodeType":"1776","messageId":"1777","endLine":274,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1863","line":280,"column":7,"nodeType":"1784","endLine":280,"endColumn":17,"suggestions":"1869"},{"ruleId":"1765","severity":1,"message":"1826","line":329,"column":13,"nodeType":"1767","messageId":"1768","endLine":329,"endColumn":16},{"ruleId":"1774","severity":1,"message":"1775","line":332,"column":28,"nodeType":"1776","messageId":"1777","endLine":332,"endColumn":30},{"ruleId":"1774","severity":1,"message":"1862","line":406,"column":30,"nodeType":"1776","messageId":"1777","endLine":406,"endColumn":32},{"ruleId":"1774","severity":1,"message":"1775","line":406,"column":44,"nodeType":"1776","messageId":"1777","endLine":406,"endColumn":46},{"ruleId":"1774","severity":1,"message":"1775","line":448,"column":13,"nodeType":"1776","messageId":"1777","endLine":448,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1834","line":130,"column":11,"nodeType":"1767","messageId":"1768","endLine":130,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1835","line":146,"column":18,"nodeType":"1767","messageId":"1768","endLine":146,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1779","line":153,"column":9,"nodeType":"1780","endLine":182,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":207,"column":145,"nodeType":"1776","messageId":"1777","endLine":207,"endColumn":147},{"ruleId":"1774","severity":1,"message":"1775","line":356,"column":14,"nodeType":"1776","messageId":"1777","endLine":356,"endColumn":16},{"ruleId":"1831","severity":1,"message":"1832","line":397,"column":9,"nodeType":"1833","endLine":397,"endColumn":67},{"ruleId":"1765","severity":1,"message":"1835","line":84,"column":18,"nodeType":"1767","messageId":"1768","endLine":84,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1779","line":95,"column":9,"nodeType":"1780","endLine":136,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":141,"column":17,"nodeType":"1776","messageId":"1777","endLine":141,"endColumn":19},{"ruleId":"1778","severity":1,"message":"1870","line":160,"column":7,"nodeType":"1784","endLine":160,"endColumn":16,"suggestions":"1871"},{"ruleId":"1774","severity":1,"message":"1775","line":183,"column":13,"nodeType":"1776","messageId":"1777","endLine":183,"endColumn":15},{"ruleId":"1778","severity":1,"message":"1779","line":117,"column":9,"nodeType":"1780","endLine":145,"endColumn":6},{"ruleId":"1765","severity":1,"message":"1826","line":179,"column":19,"nodeType":"1767","messageId":"1768","endLine":179,"endColumn":22},{"ruleId":"1765","severity":1,"message":"1826","line":190,"column":19,"nodeType":"1767","messageId":"1768","endLine":190,"endColumn":22},{"ruleId":"1774","severity":1,"message":"1775","line":203,"column":14,"nodeType":"1776","messageId":"1777","endLine":203,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1835","line":150,"column":18,"nodeType":"1767","messageId":"1768","endLine":150,"endColumn":26},{"ruleId":"1765","severity":1,"message":"1872","line":152,"column":20,"nodeType":"1767","messageId":"1768","endLine":152,"endColumn":29},{"ruleId":"1765","severity":1,"message":"1873","line":154,"column":23,"nodeType":"1767","messageId":"1768","endLine":154,"endColumn":35},{"ruleId":"1778","severity":1,"message":"1779","line":161,"column":9,"nodeType":"1780","endLine":185,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":211,"column":13,"nodeType":"1776","messageId":"1777","endLine":211,"endColumn":15},{"ruleId":"1778","severity":1,"message":"1779","line":111,"column":9,"nodeType":"1780","endLine":139,"endColumn":6},{"ruleId":"1765","severity":1,"message":"1826","line":172,"column":19,"nodeType":"1767","messageId":"1768","endLine":172,"endColumn":22},{"ruleId":"1765","severity":1,"message":"1826","line":183,"column":19,"nodeType":"1767","messageId":"1768","endLine":183,"endColumn":22},{"ruleId":"1774","severity":1,"message":"1775","line":196,"column":14,"nodeType":"1776","messageId":"1777","endLine":196,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1835","line":124,"column":18,"nodeType":"1767","messageId":"1768","endLine":124,"endColumn":26},{"ruleId":"1765","severity":1,"message":"1872","line":127,"column":20,"nodeType":"1767","messageId":"1768","endLine":127,"endColumn":29},{"ruleId":"1765","severity":1,"message":"1873","line":129,"column":23,"nodeType":"1767","messageId":"1768","endLine":129,"endColumn":35},{"ruleId":"1778","severity":1,"message":"1779","line":140,"column":9,"nodeType":"1780","endLine":162,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":188,"column":13,"nodeType":"1776","messageId":"1777","endLine":188,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1826","line":108,"column":23,"nodeType":"1767","messageId":"1768","endLine":108,"endColumn":26},{"ruleId":"1774","severity":1,"message":"1775","line":124,"column":13,"nodeType":"1776","messageId":"1777","endLine":124,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1826","line":107,"column":23,"nodeType":"1767","messageId":"1768","endLine":107,"endColumn":26},{"ruleId":"1774","severity":1,"message":"1775","line":123,"column":13,"nodeType":"1776","messageId":"1777","endLine":123,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1835","line":120,"column":18,"nodeType":"1767","messageId":"1768","endLine":120,"endColumn":26},{"ruleId":"1765","severity":1,"message":"1872","line":123,"column":20,"nodeType":"1767","messageId":"1768","endLine":123,"endColumn":29},{"ruleId":"1765","severity":1,"message":"1873","line":125,"column":23,"nodeType":"1767","messageId":"1768","endLine":125,"endColumn":35},{"ruleId":"1778","severity":1,"message":"1779","line":135,"column":9,"nodeType":"1780","endLine":157,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":180,"column":13,"nodeType":"1776","messageId":"1777","endLine":180,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1874","line":24,"column":7,"nodeType":"1767","messageId":"1768","endLine":24,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1875","line":25,"column":7,"nodeType":"1767","messageId":"1768","endLine":25,"endColumn":24},{"ruleId":"1765","severity":1,"message":"1834","line":96,"column":11,"nodeType":"1767","messageId":"1768","endLine":96,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1826","line":167,"column":19,"nodeType":"1767","messageId":"1768","endLine":167,"endColumn":22},{"ruleId":"1774","severity":1,"message":"1775","line":255,"column":14,"nodeType":"1776","messageId":"1777","endLine":255,"endColumn":16},{"ruleId":"1831","severity":1,"message":"1832","line":295,"column":11,"nodeType":"1833","endLine":295,"endColumn":69},{"ruleId":"1831","severity":1,"message":"1832","line":305,"column":11,"nodeType":"1833","endLine":305,"endColumn":69},{"ruleId":"1831","severity":1,"message":"1832","line":315,"column":11,"nodeType":"1833","endLine":315,"endColumn":69},{"ruleId":"1765","severity":1,"message":"1837","line":1,"column":26,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":35},{"ruleId":"1765","severity":1,"message":"1876","line":2,"column":10,"nodeType":"1767","messageId":"1768","endLine":2,"endColumn":20},{"ruleId":"1765","severity":1,"message":"1835","line":83,"column":18,"nodeType":"1767","messageId":"1768","endLine":83,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1779","line":112,"column":9,"nodeType":"1780","endLine":148,"endColumn":10},{"ruleId":"1778","severity":1,"message":"1779","line":152,"column":21,"nodeType":"1780","endLine":173,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":183,"column":13,"nodeType":"1776","messageId":"1777","endLine":183,"endColumn":15},{"ruleId":"1774","severity":1,"message":"1775","line":187,"column":19,"nodeType":"1776","messageId":"1777","endLine":187,"endColumn":21},{"ruleId":"1765","severity":1,"message":"1835","line":87,"column":18,"nodeType":"1767","messageId":"1768","endLine":87,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1779","line":98,"column":9,"nodeType":"1780","endLine":132,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":141,"column":13,"nodeType":"1776","messageId":"1777","endLine":141,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1837","line":1,"column":26,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":35},{"ruleId":"1765","severity":1,"message":"1835","line":122,"column":18,"nodeType":"1767","messageId":"1768","endLine":122,"endColumn":26},{"ruleId":"1765","severity":1,"message":"1872","line":124,"column":20,"nodeType":"1767","messageId":"1768","endLine":124,"endColumn":29},{"ruleId":"1765","severity":1,"message":"1873","line":126,"column":23,"nodeType":"1767","messageId":"1768","endLine":126,"endColumn":35},{"ruleId":"1778","severity":1,"message":"1779","line":133,"column":9,"nodeType":"1780","endLine":157,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":178,"column":13,"nodeType":"1776","messageId":"1777","endLine":178,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1837","line":1,"column":26,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":35},{"ruleId":"1765","severity":1,"message":"1877","line":9,"column":18,"nodeType":"1767","messageId":"1768","endLine":9,"endColumn":22},{"ruleId":"1765","severity":1,"message":"1835","line":122,"column":18,"nodeType":"1767","messageId":"1768","endLine":122,"endColumn":26},{"ruleId":"1765","severity":1,"message":"1872","line":124,"column":20,"nodeType":"1767","messageId":"1768","endLine":124,"endColumn":29},{"ruleId":"1765","severity":1,"message":"1873","line":126,"column":23,"nodeType":"1767","messageId":"1768","endLine":126,"endColumn":35},{"ruleId":"1778","severity":1,"message":"1779","line":133,"column":9,"nodeType":"1780","endLine":157,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":178,"column":13,"nodeType":"1776","messageId":"1777","endLine":178,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1837","line":1,"column":26,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":35},{"ruleId":"1765","severity":1,"message":"1877","line":9,"column":18,"nodeType":"1767","messageId":"1768","endLine":9,"endColumn":22},{"ruleId":"1765","severity":1,"message":"1835","line":122,"column":18,"nodeType":"1767","messageId":"1768","endLine":122,"endColumn":26},{"ruleId":"1765","severity":1,"message":"1872","line":124,"column":20,"nodeType":"1767","messageId":"1768","endLine":124,"endColumn":29},{"ruleId":"1765","severity":1,"message":"1873","line":126,"column":23,"nodeType":"1767","messageId":"1768","endLine":126,"endColumn":35},{"ruleId":"1778","severity":1,"message":"1779","line":133,"column":9,"nodeType":"1780","endLine":157,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":178,"column":13,"nodeType":"1776","messageId":"1777","endLine":178,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1835","line":124,"column":18,"nodeType":"1767","messageId":"1768","endLine":124,"endColumn":26},{"ruleId":"1765","severity":1,"message":"1872","line":127,"column":20,"nodeType":"1767","messageId":"1768","endLine":127,"endColumn":29},{"ruleId":"1765","severity":1,"message":"1873","line":129,"column":23,"nodeType":"1767","messageId":"1768","endLine":129,"endColumn":35},{"ruleId":"1778","severity":1,"message":"1779","line":139,"column":9,"nodeType":"1780","endLine":162,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":185,"column":13,"nodeType":"1776","messageId":"1777","endLine":185,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1790","line":163,"column":10,"nodeType":"1767","messageId":"1768","endLine":163,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1791","line":172,"column":10,"nodeType":"1767","messageId":"1768","endLine":172,"endColumn":19},{"ruleId":"1765","severity":1,"message":"1792","line":172,"column":20,"nodeType":"1767","messageId":"1768","endLine":172,"endColumn":35},{"ruleId":"1765","severity":1,"message":"1793","line":176,"column":10,"nodeType":"1767","messageId":"1768","endLine":176,"endColumn":13},{"ruleId":"1778","severity":1,"message":"1794","line":214,"column":6,"nodeType":"1784","endLine":214,"endColumn":29,"suggestions":"1878"},{"ruleId":"1778","severity":1,"message":"1779","line":216,"column":14,"nodeType":"1780","endLine":260,"endColumn":4},{"ruleId":"1778","severity":1,"message":"1796","line":260,"column":5,"nodeType":"1784","endLine":260,"endColumn":7,"suggestions":"1879"},{"ruleId":"1778","severity":1,"message":"1779","line":262,"column":14,"nodeType":"1780","endLine":302,"endColumn":4},{"ruleId":"1765","severity":1,"message":"1798","line":264,"column":11,"nodeType":"1767","messageId":"1768","endLine":264,"endColumn":17},{"ruleId":"1778","severity":1,"message":"1794","line":302,"column":5,"nodeType":"1784","endLine":302,"endColumn":28,"suggestions":"1880"},{"ruleId":"1774","severity":1,"message":"1775","line":321,"column":21,"nodeType":"1776","messageId":"1777","endLine":321,"endColumn":23},{"ruleId":"1774","severity":1,"message":"1775","line":347,"column":21,"nodeType":"1776","messageId":"1777","endLine":347,"endColumn":23},{"ruleId":"1765","severity":1,"message":"1874","line":31,"column":7,"nodeType":"1767","messageId":"1768","endLine":31,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1875","line":32,"column":7,"nodeType":"1767","messageId":"1768","endLine":32,"endColumn":24},{"ruleId":"1765","severity":1,"message":"1881","line":39,"column":7,"nodeType":"1767","messageId":"1768","endLine":39,"endColumn":25},{"ruleId":"1765","severity":1,"message":"1834","line":413,"column":9,"nodeType":"1767","messageId":"1768","endLine":413,"endColumn":14},{"ruleId":"1778","severity":1,"message":"1779","line":564,"column":9,"nodeType":"1780","endLine":713,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1862","line":961,"column":28,"nodeType":"1776","messageId":"1777","endLine":961,"endColumn":30},{"ruleId":"1774","severity":1,"message":"1862","line":970,"column":28,"nodeType":"1776","messageId":"1777","endLine":970,"endColumn":30},{"ruleId":"1774","severity":1,"message":"1862","line":978,"column":29,"nodeType":"1776","messageId":"1777","endLine":978,"endColumn":31},{"ruleId":"1774","severity":1,"message":"1862","line":986,"column":25,"nodeType":"1776","messageId":"1777","endLine":986,"endColumn":27},{"ruleId":"1765","severity":1,"message":"1826","line":1013,"column":19,"nodeType":"1767","messageId":"1768","endLine":1013,"endColumn":22},{"ruleId":"1765","severity":1,"message":"1826","line":1026,"column":19,"nodeType":"1767","messageId":"1768","endLine":1026,"endColumn":22},{"ruleId":"1882","severity":1,"message":"1883","line":1052,"column":8,"nodeType":"1776","messageId":"1884","endLine":1052,"endColumn":51},{"ruleId":"1778","severity":1,"message":"1885","line":1056,"column":2,"nodeType":"1784","endLine":1056,"endColumn":24,"suggestions":"1886"},{"ruleId":"1882","severity":1,"message":"1883","line":1060,"column":8,"nodeType":"1776","messageId":"1884","endLine":1060,"endColumn":53},{"ruleId":"1778","severity":1,"message":"1885","line":1064,"column":2,"nodeType":"1784","endLine":1064,"endColumn":25,"suggestions":"1887"},{"ruleId":"1882","severity":1,"message":"1883","line":1068,"column":8,"nodeType":"1776","messageId":"1884","endLine":1068,"endColumn":51},{"ruleId":"1778","severity":1,"message":"1885","line":1072,"column":2,"nodeType":"1784","endLine":1072,"endColumn":24,"suggestions":"1888"},{"ruleId":"1882","severity":1,"message":"1883","line":1077,"column":8,"nodeType":"1776","messageId":"1884","endLine":1077,"endColumn":67},{"ruleId":"1778","severity":1,"message":"1885","line":1081,"column":2,"nodeType":"1784","endLine":1081,"endColumn":32,"suggestions":"1889"},{"ruleId":"1882","severity":1,"message":"1883","line":1086,"column":8,"nodeType":"1776","messageId":"1884","endLine":1086,"endColumn":63},{"ruleId":"1778","severity":1,"message":"1885","line":1090,"column":2,"nodeType":"1784","endLine":1090,"endColumn":30,"suggestions":"1890"},{"ruleId":"1882","severity":1,"message":"1883","line":1095,"column":8,"nodeType":"1776","messageId":"1884","endLine":1095,"endColumn":57},{"ruleId":"1778","severity":1,"message":"1885","line":1099,"column":2,"nodeType":"1784","endLine":1099,"endColumn":27,"suggestions":"1891"},{"ruleId":"1882","severity":1,"message":"1883","line":1104,"column":8,"nodeType":"1776","messageId":"1884","endLine":1104,"endColumn":75},{"ruleId":"1882","severity":1,"message":"1883","line":1105,"column":8,"nodeType":"1776","messageId":"1884","endLine":1105,"endColumn":83},{"ruleId":"1778","severity":1,"message":"1885","line":1109,"column":2,"nodeType":"1784","endLine":1109,"endColumn":73,"suggestions":"1892"},{"ruleId":"1882","severity":1,"message":"1883","line":1115,"column":8,"nodeType":"1776","messageId":"1884","endLine":1115,"endColumn":53},{"ruleId":"1882","severity":1,"message":"1883","line":1116,"column":8,"nodeType":"1776","messageId":"1884","endLine":1116,"endColumn":61},{"ruleId":"1778","severity":1,"message":"1885","line":1120,"column":2,"nodeType":"1784","endLine":1120,"endColumn":51,"suggestions":"1893"},{"ruleId":"1882","severity":1,"message":"1883","line":1126,"column":8,"nodeType":"1776","messageId":"1884","endLine":1126,"endColumn":53},{"ruleId":"1882","severity":1,"message":"1883","line":1127,"column":8,"nodeType":"1776","messageId":"1884","endLine":1127,"endColumn":77},{"ruleId":"1882","severity":1,"message":"1883","line":1128,"column":8,"nodeType":"1776","messageId":"1884","endLine":1128,"endColumn":61},{"ruleId":"1778","severity":1,"message":"1885","line":1132,"column":2,"nodeType":"1784","endLine":1132,"endColumn":85,"suggestions":"1894"},{"ruleId":"1882","severity":1,"message":"1883","line":1138,"column":8,"nodeType":"1776","messageId":"1884","endLine":1138,"endColumn":61},{"ruleId":"1882","severity":1,"message":"1883","line":1139,"column":8,"nodeType":"1776","messageId":"1884","endLine":1139,"endColumn":71},{"ruleId":"1882","severity":1,"message":"1883","line":1140,"column":8,"nodeType":"1776","messageId":"1884","endLine":1140,"endColumn":59},{"ruleId":"1778","severity":1,"message":"1885","line":1144,"column":2,"nodeType":"1784","endLine":1144,"endColumn":85,"suggestions":"1895"},{"ruleId":"1882","severity":1,"message":"1883","line":1150,"column":8,"nodeType":"1776","messageId":"1884","endLine":1150,"endColumn":57},{"ruleId":"1882","severity":1,"message":"1883","line":1151,"column":8,"nodeType":"1776","messageId":"1884","endLine":1151,"endColumn":57},{"ruleId":"1882","severity":1,"message":"1883","line":1152,"column":8,"nodeType":"1776","messageId":"1884","endLine":1152,"endColumn":67},{"ruleId":"1882","severity":1,"message":"1883","line":1153,"column":8,"nodeType":"1776","messageId":"1884","endLine":1153,"endColumn":59},{"ruleId":"1882","severity":1,"message":"1883","line":1154,"column":8,"nodeType":"1776","messageId":"1884","endLine":1154,"endColumn":61},{"ruleId":"1882","severity":1,"message":"1883","line":1155,"column":8,"nodeType":"1776","messageId":"1884","endLine":1155,"endColumn":63},{"ruleId":"1882","severity":1,"message":"1883","line":1156,"column":8,"nodeType":"1776","messageId":"1884","endLine":1156,"endColumn":57},{"ruleId":"1882","severity":1,"message":"1883","line":1157,"column":8,"nodeType":"1776","messageId":"1884","endLine":1157,"endColumn":65},{"ruleId":"1778","severity":1,"message":"1885","line":1160,"column":2,"nodeType":"1784","endLine":1160,"endColumn":210,"suggestions":"1896"},{"ruleId":"1774","severity":1,"message":"1775","line":1311,"column":15,"nodeType":"1776","messageId":"1777","endLine":1311,"endColumn":17},{"ruleId":"1774","severity":1,"message":"1775","line":1319,"column":14,"nodeType":"1776","messageId":"1777","endLine":1319,"endColumn":16},{"ruleId":"1831","severity":1,"message":"1832","line":1364,"column":11,"nodeType":"1833","endLine":1364,"endColumn":67},{"ruleId":"1831","severity":1,"message":"1832","line":1376,"column":11,"nodeType":"1833","endLine":1376,"endColumn":67},{"ruleId":"1831","severity":1,"message":"1832","line":1387,"column":11,"nodeType":"1833","endLine":1387,"endColumn":67},{"ruleId":"1831","severity":1,"message":"1832","line":1415,"column":13,"nodeType":"1833","endLine":1415,"endColumn":69},{"ruleId":"1831","severity":1,"message":"1832","line":1426,"column":13,"nodeType":"1833","endLine":1426,"endColumn":69},{"ruleId":"1809","severity":1,"message":"1810","line":2532,"column":11,"nodeType":"1811","endLine":2532,"endColumn":29},{"ruleId":"1809","severity":1,"message":"1810","line":2533,"column":11,"nodeType":"1811","endLine":2533,"endColumn":26},{"ruleId":"1809","severity":1,"message":"1810","line":2534,"column":11,"nodeType":"1811","endLine":2534,"endColumn":20},{"ruleId":"1809","severity":1,"message":"1810","line":3058,"column":11,"nodeType":"1811","endLine":3058,"endColumn":41},{"ruleId":"1809","severity":1,"message":"1810","line":3116,"column":11,"nodeType":"1811","endLine":3116,"endColumn":41},{"ruleId":"1809","severity":1,"message":"1810","line":3176,"column":11,"nodeType":"1811","endLine":3176,"endColumn":41},{"ruleId":"1765","severity":1,"message":"1874","line":33,"column":7,"nodeType":"1767","messageId":"1768","endLine":33,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1875","line":34,"column":7,"nodeType":"1767","messageId":"1768","endLine":34,"endColumn":24},{"ruleId":"1765","severity":1,"message":"1881","line":41,"column":7,"nodeType":"1767","messageId":"1768","endLine":41,"endColumn":25},{"ruleId":"1765","severity":1,"message":"1834","line":310,"column":9,"nodeType":"1767","messageId":"1768","endLine":310,"endColumn":14},{"ruleId":"1778","severity":1,"message":"1779","line":420,"column":9,"nodeType":"1780","endLine":531,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1862","line":701,"column":28,"nodeType":"1776","messageId":"1777","endLine":701,"endColumn":30},{"ruleId":"1774","severity":1,"message":"1862","line":711,"column":25,"nodeType":"1776","messageId":"1777","endLine":711,"endColumn":27},{"ruleId":"1765","severity":1,"message":"1826","line":738,"column":19,"nodeType":"1767","messageId":"1768","endLine":738,"endColumn":22},{"ruleId":"1765","severity":1,"message":"1826","line":751,"column":19,"nodeType":"1767","messageId":"1768","endLine":751,"endColumn":22},{"ruleId":"1882","severity":1,"message":"1883","line":777,"column":8,"nodeType":"1776","messageId":"1884","endLine":777,"endColumn":51},{"ruleId":"1778","severity":1,"message":"1885","line":781,"column":2,"nodeType":"1784","endLine":781,"endColumn":24,"suggestions":"1897"},{"ruleId":"1882","severity":1,"message":"1883","line":785,"column":8,"nodeType":"1776","messageId":"1884","endLine":785,"endColumn":53},{"ruleId":"1778","severity":1,"message":"1885","line":789,"column":2,"nodeType":"1784","endLine":789,"endColumn":25,"suggestions":"1898"},{"ruleId":"1882","severity":1,"message":"1883","line":793,"column":8,"nodeType":"1776","messageId":"1884","endLine":793,"endColumn":51},{"ruleId":"1778","severity":1,"message":"1885","line":797,"column":2,"nodeType":"1784","endLine":797,"endColumn":24,"suggestions":"1899"},{"ruleId":"1882","severity":1,"message":"1883","line":802,"column":8,"nodeType":"1776","messageId":"1884","endLine":802,"endColumn":67},{"ruleId":"1778","severity":1,"message":"1885","line":806,"column":2,"nodeType":"1784","endLine":806,"endColumn":32,"suggestions":"1900"},{"ruleId":"1882","severity":1,"message":"1883","line":811,"column":8,"nodeType":"1776","messageId":"1884","endLine":811,"endColumn":63},{"ruleId":"1778","severity":1,"message":"1885","line":815,"column":2,"nodeType":"1784","endLine":815,"endColumn":30,"suggestions":"1901"},{"ruleId":"1882","severity":1,"message":"1883","line":820,"column":8,"nodeType":"1776","messageId":"1884","endLine":820,"endColumn":57},{"ruleId":"1778","severity":1,"message":"1885","line":824,"column":2,"nodeType":"1784","endLine":824,"endColumn":27,"suggestions":"1902"},{"ruleId":"1882","severity":1,"message":"1883","line":835,"column":8,"nodeType":"1776","messageId":"1884","endLine":835,"endColumn":77},{"ruleId":"1778","severity":1,"message":"1885","line":840,"column":2,"nodeType":"1784","endLine":840,"endColumn":37,"suggestions":"1903"},{"ruleId":"1882","severity":1,"message":"1883","line":847,"column":8,"nodeType":"1776","messageId":"1884","endLine":847,"endColumn":71},{"ruleId":"1882","severity":1,"message":"1883","line":848,"column":8,"nodeType":"1776","messageId":"1884","endLine":848,"endColumn":59},{"ruleId":"1882","severity":1,"message":"1883","line":849,"column":8,"nodeType":"1776","messageId":"1884","endLine":849,"endColumn":53},{"ruleId":"1882","severity":1,"message":"1883","line":850,"column":8,"nodeType":"1776","messageId":"1884","endLine":850,"endColumn":53},{"ruleId":"1882","severity":1,"message":"1883","line":851,"column":8,"nodeType":"1776","messageId":"1884","endLine":851,"endColumn":61},{"ruleId":"1778","severity":1,"message":"1885","line":854,"column":2,"nodeType":"1784","endLine":854,"endColumn":124,"suggestions":"1904"},{"ruleId":"1882","severity":1,"message":"1883","line":860,"column":8,"nodeType":"1776","messageId":"1884","endLine":860,"endColumn":57},{"ruleId":"1882","severity":1,"message":"1883","line":861,"column":8,"nodeType":"1776","messageId":"1884","endLine":861,"endColumn":57},{"ruleId":"1882","severity":1,"message":"1883","line":863,"column":8,"nodeType":"1776","messageId":"1884","endLine":863,"endColumn":65},{"ruleId":"1778","severity":1,"message":"1885","line":866,"column":2,"nodeType":"1784","endLine":866,"endColumn":79,"suggestions":"1905"},{"ruleId":"1774","severity":1,"message":"1775","line":1017,"column":15,"nodeType":"1776","messageId":"1777","endLine":1017,"endColumn":17},{"ruleId":"1774","severity":1,"message":"1775","line":1027,"column":14,"nodeType":"1776","messageId":"1777","endLine":1027,"endColumn":16},{"ruleId":"1831","severity":1,"message":"1832","line":1072,"column":11,"nodeType":"1833","endLine":1072,"endColumn":67},{"ruleId":"1831","severity":1,"message":"1832","line":1084,"column":11,"nodeType":"1833","endLine":1084,"endColumn":67},{"ruleId":"1831","severity":1,"message":"1832","line":1095,"column":11,"nodeType":"1833","endLine":1095,"endColumn":67},{"ruleId":"1831","severity":1,"message":"1832","line":1124,"column":13,"nodeType":"1833","endLine":1124,"endColumn":69},{"ruleId":"1831","severity":1,"message":"1832","line":1135,"column":13,"nodeType":"1833","endLine":1135,"endColumn":69},{"ruleId":"1809","severity":1,"message":"1810","line":2031,"column":11,"nodeType":"1811","endLine":2031,"endColumn":41},{"ruleId":"1765","severity":1,"message":"1874","line":33,"column":7,"nodeType":"1767","messageId":"1768","endLine":33,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1875","line":34,"column":7,"nodeType":"1767","messageId":"1768","endLine":34,"endColumn":24},{"ruleId":"1765","severity":1,"message":"1881","line":41,"column":7,"nodeType":"1767","messageId":"1768","endLine":41,"endColumn":25},{"ruleId":"1787","severity":1,"message":"1906","line":189,"column":3,"nodeType":"1789","messageId":"1777","endLine":189,"endColumn":6},{"ruleId":"1765","severity":1,"message":"1834","line":377,"column":9,"nodeType":"1767","messageId":"1768","endLine":377,"endColumn":14},{"ruleId":"1778","severity":1,"message":"1779","line":513,"column":9,"nodeType":"1780","endLine":645,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1862","line":859,"column":33,"nodeType":"1776","messageId":"1777","endLine":859,"endColumn":35},{"ruleId":"1774","severity":1,"message":"1862","line":868,"column":25,"nodeType":"1776","messageId":"1777","endLine":868,"endColumn":27},{"ruleId":"1765","severity":1,"message":"1826","line":895,"column":19,"nodeType":"1767","messageId":"1768","endLine":895,"endColumn":22},{"ruleId":"1765","severity":1,"message":"1826","line":908,"column":19,"nodeType":"1767","messageId":"1768","endLine":908,"endColumn":22},{"ruleId":"1882","severity":1,"message":"1883","line":935,"column":8,"nodeType":"1776","messageId":"1884","endLine":935,"endColumn":51},{"ruleId":"1778","severity":1,"message":"1885","line":939,"column":2,"nodeType":"1784","endLine":939,"endColumn":24,"suggestions":"1907"},{"ruleId":"1882","severity":1,"message":"1883","line":943,"column":8,"nodeType":"1776","messageId":"1884","endLine":943,"endColumn":53},{"ruleId":"1778","severity":1,"message":"1885","line":947,"column":2,"nodeType":"1784","endLine":947,"endColumn":25,"suggestions":"1908"},{"ruleId":"1882","severity":1,"message":"1883","line":951,"column":8,"nodeType":"1776","messageId":"1884","endLine":951,"endColumn":51},{"ruleId":"1778","severity":1,"message":"1885","line":955,"column":2,"nodeType":"1784","endLine":955,"endColumn":24,"suggestions":"1909"},{"ruleId":"1882","severity":1,"message":"1883","line":960,"column":8,"nodeType":"1776","messageId":"1884","endLine":960,"endColumn":67},{"ruleId":"1778","severity":1,"message":"1885","line":964,"column":2,"nodeType":"1784","endLine":964,"endColumn":32,"suggestions":"1910"},{"ruleId":"1882","severity":1,"message":"1883","line":969,"column":8,"nodeType":"1776","messageId":"1884","endLine":969,"endColumn":63},{"ruleId":"1778","severity":1,"message":"1885","line":973,"column":2,"nodeType":"1784","endLine":973,"endColumn":30,"suggestions":"1911"},{"ruleId":"1882","severity":1,"message":"1883","line":978,"column":8,"nodeType":"1776","messageId":"1884","endLine":978,"endColumn":57},{"ruleId":"1778","severity":1,"message":"1885","line":982,"column":2,"nodeType":"1784","endLine":982,"endColumn":27,"suggestions":"1912"},{"ruleId":"1882","severity":1,"message":"1883","line":987,"column":8,"nodeType":"1776","messageId":"1884","endLine":987,"endColumn":75},{"ruleId":"1778","severity":1,"message":"1885","line":992,"column":2,"nodeType":"1784","endLine":992,"endColumn":36,"suggestions":"1913"},{"ruleId":"1882","severity":1,"message":"1883","line":998,"column":8,"nodeType":"1776","messageId":"1884","endLine":998,"endColumn":53},{"ruleId":"1778","severity":1,"message":"1885","line":1003,"column":2,"nodeType":"1784","endLine":1003,"endColumn":25,"suggestions":"1914"},{"ruleId":"1882","severity":1,"message":"1883","line":1009,"column":8,"nodeType":"1776","messageId":"1884","endLine":1009,"endColumn":53},{"ruleId":"1882","severity":1,"message":"1883","line":1010,"column":8,"nodeType":"1776","messageId":"1884","endLine":1010,"endColumn":77},{"ruleId":"1882","severity":1,"message":"1883","line":1011,"column":8,"nodeType":"1776","messageId":"1884","endLine":1011,"endColumn":61},{"ruleId":"1778","severity":1,"message":"1885","line":1015,"column":2,"nodeType":"1784","endLine":1015,"endColumn":85,"suggestions":"1915"},{"ruleId":"1882","severity":1,"message":"1883","line":1021,"column":8,"nodeType":"1776","messageId":"1884","endLine":1021,"endColumn":61},{"ruleId":"1882","severity":1,"message":"1883","line":1022,"column":8,"nodeType":"1776","messageId":"1884","endLine":1022,"endColumn":71},{"ruleId":"1882","severity":1,"message":"1883","line":1023,"column":8,"nodeType":"1776","messageId":"1884","endLine":1023,"endColumn":59},{"ruleId":"1778","severity":1,"message":"1885","line":1027,"column":2,"nodeType":"1784","endLine":1027,"endColumn":85,"suggestions":"1916"},{"ruleId":"1882","severity":1,"message":"1883","line":1033,"column":8,"nodeType":"1776","messageId":"1884","endLine":1033,"endColumn":57},{"ruleId":"1882","severity":1,"message":"1883","line":1034,"column":8,"nodeType":"1776","messageId":"1884","endLine":1034,"endColumn":57},{"ruleId":"1882","severity":1,"message":"1883","line":1036,"column":8,"nodeType":"1776","messageId":"1884","endLine":1036,"endColumn":63},{"ruleId":"1882","severity":1,"message":"1883","line":1038,"column":8,"nodeType":"1776","messageId":"1884","endLine":1038,"endColumn":65},{"ruleId":"1778","severity":1,"message":"1885","line":1041,"column":2,"nodeType":"1784","endLine":1041,"endColumn":106,"suggestions":"1917"},{"ruleId":"1774","severity":1,"message":"1775","line":1215,"column":15,"nodeType":"1776","messageId":"1777","endLine":1215,"endColumn":17},{"ruleId":"1774","severity":1,"message":"1775","line":1224,"column":14,"nodeType":"1776","messageId":"1777","endLine":1224,"endColumn":16},{"ruleId":"1831","severity":1,"message":"1832","line":1269,"column":11,"nodeType":"1833","endLine":1269,"endColumn":67},{"ruleId":"1831","severity":1,"message":"1832","line":1281,"column":11,"nodeType":"1833","endLine":1281,"endColumn":67},{"ruleId":"1831","severity":1,"message":"1832","line":1292,"column":11,"nodeType":"1833","endLine":1292,"endColumn":67},{"ruleId":"1831","severity":1,"message":"1832","line":1321,"column":13,"nodeType":"1833","endLine":1321,"endColumn":69},{"ruleId":"1831","severity":1,"message":"1832","line":1332,"column":13,"nodeType":"1833","endLine":1332,"endColumn":69},{"ruleId":"1831","severity":1,"message":"1832","line":1343,"column":13,"nodeType":"1833","endLine":1343,"endColumn":69},{"ruleId":"1809","severity":1,"message":"1810","line":2604,"column":11,"nodeType":"1811","endLine":2604,"endColumn":41},{"ruleId":"1809","severity":1,"message":"1810","line":2691,"column":11,"nodeType":"1811","endLine":2691,"endColumn":41},{"ruleId":"1778","severity":1,"message":"1779","line":161,"column":9,"nodeType":"1780","endLine":229,"endColumn":6},{"ruleId":"1778","severity":1,"message":"1918","line":231,"column":6,"nodeType":"1784","endLine":231,"endColumn":16,"suggestions":"1919"},{"ruleId":"1765","severity":1,"message":"1826","line":268,"column":19,"nodeType":"1767","messageId":"1768","endLine":268,"endColumn":22},{"ruleId":"1882","severity":1,"message":"1883","line":287,"column":10,"nodeType":"1776","messageId":"1884","endLine":287,"endColumn":47},{"ruleId":"1778","severity":1,"message":"1885","line":291,"column":4,"nodeType":"1784","endLine":291,"endColumn":23,"suggestions":"1920"},{"ruleId":"1882","severity":1,"message":"1883","line":295,"column":10,"nodeType":"1776","messageId":"1884","endLine":295,"endColumn":59},{"ruleId":"1778","severity":1,"message":"1885","line":299,"column":4,"nodeType":"1784","endLine":299,"endColumn":29,"suggestions":"1921"},{"ruleId":"1882","severity":1,"message":"1883","line":303,"column":10,"nodeType":"1776","messageId":"1884","endLine":303,"endColumn":67},{"ruleId":"1778","severity":1,"message":"1885","line":307,"column":4,"nodeType":"1784","endLine":307,"endColumn":33,"suggestions":"1922"},{"ruleId":"1882","severity":1,"message":"1883","line":311,"column":10,"nodeType":"1776","messageId":"1884","endLine":311,"endColumn":49},{"ruleId":"1778","severity":1,"message":"1885","line":315,"column":4,"nodeType":"1784","endLine":315,"endColumn":24,"suggestions":"1923"},{"ruleId":"1774","severity":1,"message":"1775","line":322,"column":19,"nodeType":"1776","messageId":"1777","endLine":322,"endColumn":21},{"ruleId":"1774","severity":1,"message":"1775","line":330,"column":14,"nodeType":"1776","messageId":"1777","endLine":330,"endColumn":16},{"ruleId":"1831","severity":1,"message":"1832","line":6,"column":13,"nodeType":"1833","endLine":6,"endColumn":90},{"ruleId":"1765","severity":1,"message":"1924","line":68,"column":9,"nodeType":"1767","messageId":"1768","endLine":68,"endColumn":13},{"ruleId":"1831","severity":1,"message":"1832","line":75,"column":85,"nodeType":"1833","endLine":75,"endColumn":135},{"ruleId":"1831","severity":1,"message":"1832","line":75,"column":179,"nodeType":"1833","endLine":75,"endColumn":230},{"ruleId":"1765","severity":1,"message":"1924","line":44,"column":9,"nodeType":"1767","messageId":"1768","endLine":44,"endColumn":13},{"ruleId":"1778","severity":1,"message":"1779","line":124,"column":5,"nodeType":"1780","endLine":150,"endColumn":6},{"ruleId":"1831","severity":1,"message":"1832","line":158,"column":86,"nodeType":"1833","endLine":158,"endColumn":104},{"ruleId":"1765","severity":1,"message":"1924","line":44,"column":9,"nodeType":"1767","messageId":"1768","endLine":44,"endColumn":13},{"ruleId":"1827","severity":1,"message":"1828","line":101,"column":24,"nodeType":"1780","messageId":"1829","endLine":101,"endColumn":26},{"ruleId":"1774","severity":1,"message":"1775","line":102,"column":21,"nodeType":"1776","messageId":"1777","endLine":102,"endColumn":23},{"ruleId":"1774","severity":1,"message":"1775","line":103,"column":26,"nodeType":"1776","messageId":"1777","endLine":103,"endColumn":28},{"ruleId":"1774","severity":1,"message":"1775","line":104,"column":26,"nodeType":"1776","messageId":"1777","endLine":104,"endColumn":28},{"ruleId":"1774","severity":1,"message":"1775","line":105,"column":26,"nodeType":"1776","messageId":"1777","endLine":105,"endColumn":28},{"ruleId":"1774","severity":1,"message":"1775","line":106,"column":26,"nodeType":"1776","messageId":"1777","endLine":106,"endColumn":28},{"ruleId":"1765","severity":1,"message":"1924","line":44,"column":9,"nodeType":"1767","messageId":"1768","endLine":44,"endColumn":13},{"ruleId":"1827","severity":1,"message":"1828","line":72,"column":32,"nodeType":"1780","messageId":"1829","endLine":72,"endColumn":34},{"ruleId":"1827","severity":1,"message":"1828","line":79,"column":33,"nodeType":"1780","messageId":"1829","endLine":79,"endColumn":35},{"ruleId":"1827","severity":1,"message":"1828","line":86,"column":38,"nodeType":"1780","messageId":"1829","endLine":86,"endColumn":40},{"ruleId":"1925","severity":1,"message":"1926","line":189,"column":25,"nodeType":"1833","endLine":189,"endColumn":138},{"ruleId":"1925","severity":1,"message":"1926","line":196,"column":21,"nodeType":"1833","endLine":196,"endColumn":134},{"ruleId":"1778","severity":1,"message":"1779","line":130,"column":21,"nodeType":"1780","endLine":147,"endColumn":6},{"ruleId":"1831","severity":1,"message":"1832","line":182,"column":44,"nodeType":"1833","endLine":182,"endColumn":62},{"ruleId":"1765","severity":1,"message":"1927","line":88,"column":10,"nodeType":"1767","messageId":"1768","endLine":88,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1928","line":88,"column":17,"nodeType":"1767","messageId":"1768","endLine":88,"endColumn":25},{"ruleId":"1778","severity":1,"message":"1779","line":194,"column":5,"nodeType":"1780","endLine":229,"endColumn":6},{"ruleId":"1831","severity":1,"message":"1832","line":310,"column":46,"nodeType":"1833","endLine":310,"endColumn":64},{"ruleId":"1765","severity":1,"message":"1929","line":2,"column":8,"nodeType":"1767","messageId":"1768","endLine":2,"endColumn":14},{"ruleId":"1765","severity":1,"message":"1930","line":9,"column":9,"nodeType":"1767","messageId":"1768","endLine":9,"endColumn":20},{"ruleId":"1765","severity":1,"message":"1930","line":9,"column":9,"nodeType":"1767","messageId":"1768","endLine":9,"endColumn":20},{"ruleId":"1765","severity":1,"message":"1931","line":38,"column":9,"nodeType":"1767","messageId":"1768","endLine":38,"endColumn":24},{"ruleId":"1778","severity":1,"message":"1932","line":57,"column":6,"nodeType":"1784","endLine":57,"endColumn":8,"suggestions":"1933"},{"ruleId":"1765","severity":1,"message":"1934","line":56,"column":10,"nodeType":"1767","messageId":"1768","endLine":56,"endColumn":20},{"ruleId":"1765","severity":1,"message":"1876","line":9,"column":22,"nodeType":"1767","messageId":"1768","endLine":9,"endColumn":32},{"ruleId":"1765","severity":1,"message":"1935","line":44,"column":7,"nodeType":"1767","messageId":"1768","endLine":44,"endColumn":11},{"ruleId":"1765","severity":1,"message":"1936","line":45,"column":7,"nodeType":"1767","messageId":"1768","endLine":45,"endColumn":12},{"ruleId":"1765","severity":1,"message":"1937","line":46,"column":7,"nodeType":"1767","messageId":"1768","endLine":46,"endColumn":11},{"ruleId":"1827","severity":1,"message":"1828","line":102,"column":26,"nodeType":"1780","messageId":"1829","endLine":102,"endColumn":28},{"ruleId":"1827","severity":1,"message":"1828","line":122,"column":29,"nodeType":"1780","messageId":"1829","endLine":122,"endColumn":31},{"ruleId":"1827","severity":1,"message":"1828","line":143,"column":34,"nodeType":"1780","messageId":"1829","endLine":143,"endColumn":36},{"ruleId":"1765","severity":1,"message":"1835","line":83,"column":18,"nodeType":"1767","messageId":"1768","endLine":83,"endColumn":26},{"ruleId":"1778","severity":1,"message":"1779","line":94,"column":9,"nodeType":"1780","endLine":128,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":137,"column":13,"nodeType":"1776","messageId":"1777","endLine":137,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1938","line":79,"column":10,"nodeType":"1767","messageId":"1768","endLine":79,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1939","line":79,"column":18,"nodeType":"1767","messageId":"1768","endLine":79,"endColumn":27},{"ruleId":"1765","severity":1,"message":"1940","line":98,"column":10,"nodeType":"1767","messageId":"1768","endLine":98,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1941","line":98,"column":16,"nodeType":"1767","messageId":"1768","endLine":98,"endColumn":24},{"ruleId":"1774","severity":1,"message":"1862","line":108,"column":13,"nodeType":"1776","messageId":"1777","endLine":108,"endColumn":15},{"ruleId":"1774","severity":1,"message":"1775","line":109,"column":98,"nodeType":"1776","messageId":"1777","endLine":109,"endColumn":100},{"ruleId":"1774","severity":1,"message":"1775","line":109,"column":156,"nodeType":"1776","messageId":"1777","endLine":109,"endColumn":158},{"ruleId":"1774","severity":1,"message":"1775","line":110,"column":94,"nodeType":"1776","messageId":"1777","endLine":110,"endColumn":96},{"ruleId":"1846","severity":1,"message":"1942","line":131,"column":5,"nodeType":"1767","messageId":"1848","endLine":131,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1862","line":134,"column":40,"nodeType":"1776","messageId":"1777","endLine":134,"endColumn":42},{"ruleId":"1774","severity":1,"message":"1862","line":144,"column":40,"nodeType":"1776","messageId":"1777","endLine":144,"endColumn":42},{"ruleId":"1774","severity":1,"message":"1775","line":146,"column":113,"nodeType":"1776","messageId":"1777","endLine":146,"endColumn":115},{"ruleId":"1774","severity":1,"message":"1862","line":153,"column":40,"nodeType":"1776","messageId":"1777","endLine":153,"endColumn":42},{"ruleId":"1774","severity":1,"message":"1775","line":155,"column":113,"nodeType":"1776","messageId":"1777","endLine":155,"endColumn":115},{"ruleId":"1774","severity":1,"message":"1862","line":162,"column":40,"nodeType":"1776","messageId":"1777","endLine":162,"endColumn":42},{"ruleId":"1774","severity":1,"message":"1775","line":164,"column":113,"nodeType":"1776","messageId":"1777","endLine":164,"endColumn":115},{"ruleId":"1774","severity":1,"message":"1862","line":171,"column":40,"nodeType":"1776","messageId":"1777","endLine":171,"endColumn":42},{"ruleId":"1774","severity":1,"message":"1775","line":173,"column":113,"nodeType":"1776","messageId":"1777","endLine":173,"endColumn":115},{"ruleId":"1774","severity":1,"message":"1862","line":180,"column":40,"nodeType":"1776","messageId":"1777","endLine":180,"endColumn":42},{"ruleId":"1774","severity":1,"message":"1775","line":182,"column":113,"nodeType":"1776","messageId":"1777","endLine":182,"endColumn":115},{"ruleId":"1774","severity":1,"message":"1862","line":189,"column":40,"nodeType":"1776","messageId":"1777","endLine":189,"endColumn":42},{"ruleId":"1774","severity":1,"message":"1775","line":191,"column":113,"nodeType":"1776","messageId":"1777","endLine":191,"endColumn":115},{"ruleId":"1774","severity":1,"message":"1862","line":198,"column":40,"nodeType":"1776","messageId":"1777","endLine":198,"endColumn":42},{"ruleId":"1774","severity":1,"message":"1775","line":200,"column":113,"nodeType":"1776","messageId":"1777","endLine":200,"endColumn":115},{"ruleId":"1774","severity":1,"message":"1862","line":207,"column":40,"nodeType":"1776","messageId":"1777","endLine":207,"endColumn":42},{"ruleId":"1774","severity":1,"message":"1775","line":209,"column":113,"nodeType":"1776","messageId":"1777","endLine":209,"endColumn":115},{"ruleId":"1774","severity":1,"message":"1862","line":216,"column":42,"nodeType":"1776","messageId":"1777","endLine":216,"endColumn":44},{"ruleId":"1774","severity":1,"message":"1775","line":218,"column":115,"nodeType":"1776","messageId":"1777","endLine":218,"endColumn":117},{"ruleId":"1778","severity":1,"message":"1943","line":231,"column":5,"nodeType":"1784","endLine":231,"endColumn":40,"suggestions":"1944"},{"ruleId":"1774","severity":1,"message":"1862","line":235,"column":27,"nodeType":"1776","messageId":"1777","endLine":235,"endColumn":29},{"ruleId":"1774","severity":1,"message":"1775","line":235,"column":37,"nodeType":"1776","messageId":"1777","endLine":235,"endColumn":39},{"ruleId":"1778","severity":1,"message":"1945","line":284,"column":5,"nodeType":"1784","endLine":284,"endColumn":7,"suggestions":"1946"},{"ruleId":"1765","severity":1,"message":"1947","line":61,"column":11,"nodeType":"1767","messageId":"1768","endLine":61,"endColumn":18},{"ruleId":"1765","severity":1,"message":"1948","line":65,"column":11,"nodeType":"1767","messageId":"1768","endLine":65,"endColumn":19},{"ruleId":"1774","severity":1,"message":"1775","line":39,"column":26,"nodeType":"1776","messageId":"1777","endLine":39,"endColumn":28},{"ruleId":"1949","severity":1,"message":"1950","line":20,"column":1,"nodeType":"1951","endLine":72,"endColumn":2},{"ruleId":"1827","severity":1,"message":"1828","line":26,"column":30,"nodeType":"1780","messageId":"1829","endLine":26,"endColumn":32},{"ruleId":"1827","severity":1,"message":"1828","line":30,"column":30,"nodeType":"1780","messageId":"1829","endLine":30,"endColumn":32},{"ruleId":"1827","severity":1,"message":"1828","line":34,"column":35,"nodeType":"1780","messageId":"1829","endLine":34,"endColumn":37},{"ruleId":"1765","severity":1,"message":"1952","line":53,"column":13,"nodeType":"1767","messageId":"1768","endLine":53,"endColumn":23},{"ruleId":"1765","severity":1,"message":"1953","line":62,"column":13,"nodeType":"1767","messageId":"1768","endLine":62,"endColumn":23},{"ruleId":"1827","severity":1,"message":"1828","line":26,"column":30,"nodeType":"1780","messageId":"1829","endLine":26,"endColumn":32},{"ruleId":"1827","severity":1,"message":"1828","line":30,"column":30,"nodeType":"1780","messageId":"1829","endLine":30,"endColumn":32},{"ruleId":"1827","severity":1,"message":"1828","line":34,"column":35,"nodeType":"1780","messageId":"1829","endLine":34,"endColumn":37},{"ruleId":"1765","severity":1,"message":"1952","line":53,"column":13,"nodeType":"1767","messageId":"1768","endLine":53,"endColumn":23},{"ruleId":"1765","severity":1,"message":"1953","line":62,"column":13,"nodeType":"1767","messageId":"1768","endLine":62,"endColumn":23},{"ruleId":"1827","severity":1,"message":"1828","line":70,"column":26,"nodeType":"1780","messageId":"1829","endLine":70,"endColumn":28},{"ruleId":"1827","severity":1,"message":"1828","line":90,"column":27,"nodeType":"1780","messageId":"1829","endLine":90,"endColumn":29},{"ruleId":"1827","severity":1,"message":"1828","line":111,"column":32,"nodeType":"1780","messageId":"1829","endLine":111,"endColumn":34},{"ruleId":"1765","severity":1,"message":"1954","line":29,"column":9,"nodeType":"1767","messageId":"1768","endLine":29,"endColumn":10},{"ruleId":"1765","severity":1,"message":"1955","line":30,"column":9,"nodeType":"1767","messageId":"1768","endLine":30,"endColumn":10},{"ruleId":"1765","severity":1,"message":"1956","line":31,"column":9,"nodeType":"1767","messageId":"1768","endLine":31,"endColumn":10},{"ruleId":"1765","severity":1,"message":"1957","line":32,"column":9,"nodeType":"1767","messageId":"1768","endLine":32,"endColumn":10},{"ruleId":"1827","severity":1,"message":"1828","line":34,"column":30,"nodeType":"1780","messageId":"1829","endLine":34,"endColumn":32},{"ruleId":"1774","severity":1,"message":"1775","line":35,"column":29,"nodeType":"1776","messageId":"1777","endLine":35,"endColumn":31},{"ruleId":"1827","severity":1,"message":"1828","line":54,"column":31,"nodeType":"1780","messageId":"1829","endLine":54,"endColumn":33},{"ruleId":"1774","severity":1,"message":"1775","line":55,"column":28,"nodeType":"1776","messageId":"1777","endLine":55,"endColumn":30},{"ruleId":"1827","severity":1,"message":"1828","line":75,"column":36,"nodeType":"1780","messageId":"1829","endLine":75,"endColumn":38},{"ruleId":"1774","severity":1,"message":"1775","line":76,"column":28,"nodeType":"1776","messageId":"1777","endLine":76,"endColumn":30},{"ruleId":"1765","severity":1,"message":"1931","line":36,"column":9,"nodeType":"1767","messageId":"1768","endLine":36,"endColumn":24},{"ruleId":"1765","severity":1,"message":"1958","line":56,"column":10,"nodeType":"1767","messageId":"1768","endLine":56,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1959","line":72,"column":6,"nodeType":"1784","endLine":72,"endColumn":8,"suggestions":"1960"},{"ruleId":"1787","severity":1,"message":"1961","line":85,"column":5,"nodeType":"1789","messageId":"1777","endLine":85,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1931","line":41,"column":9,"nodeType":"1767","messageId":"1768","endLine":41,"endColumn":24},{"ruleId":"1778","severity":1,"message":"1932","line":60,"column":6,"nodeType":"1784","endLine":60,"endColumn":8,"suggestions":"1962"},{"ruleId":"1827","severity":1,"message":"1828","line":112,"column":24,"nodeType":"1780","messageId":"1829","endLine":112,"endColumn":26},{"ruleId":"1774","severity":1,"message":"1775","line":113,"column":21,"nodeType":"1776","messageId":"1777","endLine":113,"endColumn":23},{"ruleId":"1774","severity":1,"message":"1775","line":114,"column":26,"nodeType":"1776","messageId":"1777","endLine":114,"endColumn":28},{"ruleId":"1774","severity":1,"message":"1775","line":115,"column":26,"nodeType":"1776","messageId":"1777","endLine":115,"endColumn":28},{"ruleId":"1774","severity":1,"message":"1775","line":116,"column":26,"nodeType":"1776","messageId":"1777","endLine":116,"endColumn":28},{"ruleId":"1774","severity":1,"message":"1775","line":117,"column":26,"nodeType":"1776","messageId":"1777","endLine":117,"endColumn":28},{"ruleId":"1827","severity":1,"message":"1828","line":122,"column":24,"nodeType":"1780","messageId":"1829","endLine":122,"endColumn":26},{"ruleId":"1831","severity":1,"message":"1832","line":195,"column":111,"nodeType":"1833","endLine":195,"endColumn":130},{"ruleId":"1831","severity":1,"message":"1832","line":206,"column":111,"nodeType":"1833","endLine":206,"endColumn":130},{"ruleId":"1787","severity":1,"message":"1961","line":103,"column":5,"nodeType":"1789","messageId":"1777","endLine":103,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1963","line":286,"column":12,"nodeType":"1767","messageId":"1768","endLine":286,"endColumn":20},{"ruleId":"1765","severity":1,"message":"1964","line":291,"column":11,"nodeType":"1767","messageId":"1768","endLine":291,"endColumn":19},{"ruleId":"1765","severity":1,"message":"1947","line":52,"column":11,"nodeType":"1767","messageId":"1768","endLine":52,"endColumn":18},{"ruleId":"1765","severity":1,"message":"1948","line":56,"column":11,"nodeType":"1767","messageId":"1768","endLine":56,"endColumn":19},{"ruleId":"1765","severity":1,"message":"1965","line":23,"column":7,"nodeType":"1767","messageId":"1768","endLine":23,"endColumn":16},{"ruleId":"1787","severity":1,"message":"1966","line":36,"column":5,"nodeType":"1789","messageId":"1777","endLine":36,"endColumn":10},{"ruleId":"1765","severity":1,"message":"1967","line":57,"column":10,"nodeType":"1767","messageId":"1768","endLine":57,"endColumn":24},{"ruleId":"1765","severity":1,"message":"1968","line":61,"column":10,"nodeType":"1767","messageId":"1768","endLine":61,"endColumn":20},{"ruleId":"1765","severity":1,"message":"1965","line":23,"column":7,"nodeType":"1767","messageId":"1768","endLine":23,"endColumn":16},{"ruleId":"1787","severity":1,"message":"1966","line":36,"column":5,"nodeType":"1789","messageId":"1777","endLine":36,"endColumn":10},{"ruleId":"1765","severity":1,"message":"1967","line":57,"column":10,"nodeType":"1767","messageId":"1768","endLine":57,"endColumn":24},{"ruleId":"1765","severity":1,"message":"1968","line":61,"column":10,"nodeType":"1767","messageId":"1768","endLine":61,"endColumn":20},{"ruleId":"1765","severity":1,"message":"1965","line":23,"column":7,"nodeType":"1767","messageId":"1768","endLine":23,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1967","line":55,"column":10,"nodeType":"1767","messageId":"1768","endLine":55,"endColumn":24},{"ruleId":"1765","severity":1,"message":"1968","line":59,"column":10,"nodeType":"1767","messageId":"1768","endLine":59,"endColumn":20},{"ruleId":"1765","severity":1,"message":"1969","line":5,"column":8,"nodeType":"1767","messageId":"1768","endLine":5,"endColumn":24},{"ruleId":"1765","severity":1,"message":"1970","line":6,"column":8,"nodeType":"1767","messageId":"1768","endLine":6,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1971","line":8,"column":21,"nodeType":"1767","messageId":"1768","endLine":8,"endColumn":29},{"ruleId":"1765","severity":1,"message":"1972","line":9,"column":8,"nodeType":"1767","messageId":"1768","endLine":9,"endColumn":12},{"ruleId":"1765","severity":1,"message":"1973","line":10,"column":8,"nodeType":"1767","messageId":"1768","endLine":10,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1974","line":11,"column":8,"nodeType":"1767","messageId":"1768","endLine":11,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1924","line":111,"column":9,"nodeType":"1767","messageId":"1768","endLine":111,"endColumn":13},{"ruleId":"1831","severity":1,"message":"1832","line":142,"column":5,"nodeType":"1833","endLine":142,"endColumn":47},{"ruleId":"1765","severity":1,"message":"1975","line":16,"column":7,"nodeType":"1767","messageId":"1768","endLine":16,"endColumn":19},{"ruleId":"1765","severity":1,"message":"1924","line":61,"column":9,"nodeType":"1767","messageId":"1768","endLine":61,"endColumn":13},{"ruleId":"1831","severity":1,"message":"1832","line":68,"column":85,"nodeType":"1833","endLine":68,"endColumn":135},{"ruleId":"1831","severity":1,"message":"1832","line":68,"column":179,"nodeType":"1833","endLine":68,"endColumn":230},{"ruleId":"1765","severity":1,"message":"1836","line":1,"column":17,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":25},{"ruleId":"1765","severity":1,"message":"1837","line":1,"column":27,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":36},{"ruleId":"1765","severity":1,"message":"1838","line":4,"column":8,"nodeType":"1767","messageId":"1768","endLine":4,"endColumn":19},{"ruleId":"1765","severity":1,"message":"1976","line":8,"column":10,"nodeType":"1767","messageId":"1768","endLine":8,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1836","line":1,"column":17,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":25},{"ruleId":"1765","severity":1,"message":"1837","line":1,"column":27,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":36},{"ruleId":"1765","severity":1,"message":"1838","line":4,"column":8,"nodeType":"1767","messageId":"1768","endLine":4,"endColumn":19},{"ruleId":"1765","severity":1,"message":"1976","line":8,"column":10,"nodeType":"1767","messageId":"1768","endLine":8,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1934","line":56,"column":10,"nodeType":"1767","messageId":"1768","endLine":56,"endColumn":20},{"ruleId":"1765","severity":1,"message":"1934","line":56,"column":10,"nodeType":"1767","messageId":"1768","endLine":56,"endColumn":20},{"ruleId":"1809","severity":1,"message":"1810","line":188,"column":128,"nodeType":"1811","endLine":188,"endColumn":157},{"ruleId":"1809","severity":1,"message":"1810","line":189,"column":128,"nodeType":"1811","endLine":189,"endColumn":157},{"ruleId":"1765","severity":1,"message":"1804","line":5,"column":8,"nodeType":"1767","messageId":"1768","endLine":5,"endColumn":14},{"ruleId":"1765","severity":1,"message":"1977","line":9,"column":8,"nodeType":"1767","messageId":"1768","endLine":9,"endColumn":18},{"ruleId":"1765","severity":1,"message":"1835","line":22,"column":18,"nodeType":"1767","messageId":"1768","endLine":22,"endColumn":26},{"ruleId":"1765","severity":1,"message":"1978","line":24,"column":12,"nodeType":"1767","messageId":"1768","endLine":24,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1979","line":25,"column":12,"nodeType":"1767","messageId":"1768","endLine":25,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1791","line":27,"column":12,"nodeType":"1767","messageId":"1768","endLine":27,"endColumn":21},{"ruleId":"1765","severity":1,"message":"1792","line":27,"column":22,"nodeType":"1767","messageId":"1768","endLine":27,"endColumn":37},{"ruleId":"1765","severity":1,"message":"1980","line":29,"column":11,"nodeType":"1767","messageId":"1768","endLine":29,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1779","line":33,"column":15,"nodeType":"1780","endLine":52,"endColumn":6},{"ruleId":"1778","severity":1,"message":"1981","line":52,"column":7,"nodeType":"1784","endLine":52,"endColumn":9,"suggestions":"1982"},{"ruleId":"1765","severity":1,"message":"1804","line":5,"column":8,"nodeType":"1767","messageId":"1768","endLine":5,"endColumn":14},{"ruleId":"1765","severity":1,"message":"1977","line":8,"column":8,"nodeType":"1767","messageId":"1768","endLine":8,"endColumn":18},{"ruleId":"1765","severity":1,"message":"1835","line":21,"column":18,"nodeType":"1767","messageId":"1768","endLine":21,"endColumn":26},{"ruleId":"1765","severity":1,"message":"1978","line":23,"column":12,"nodeType":"1767","messageId":"1768","endLine":23,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1979","line":24,"column":12,"nodeType":"1767","messageId":"1768","endLine":24,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1791","line":26,"column":12,"nodeType":"1767","messageId":"1768","endLine":26,"endColumn":21},{"ruleId":"1765","severity":1,"message":"1792","line":26,"column":22,"nodeType":"1767","messageId":"1768","endLine":26,"endColumn":37},{"ruleId":"1765","severity":1,"message":"1980","line":28,"column":11,"nodeType":"1767","messageId":"1768","endLine":28,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1779","line":32,"column":15,"nodeType":"1780","endLine":51,"endColumn":6},{"ruleId":"1778","severity":1,"message":"1981","line":51,"column":7,"nodeType":"1784","endLine":51,"endColumn":9,"suggestions":"1983"},{"ruleId":"1765","severity":1,"message":"1804","line":5,"column":8,"nodeType":"1767","messageId":"1768","endLine":5,"endColumn":14},{"ruleId":"1765","severity":1,"message":"1977","line":8,"column":8,"nodeType":"1767","messageId":"1768","endLine":8,"endColumn":18},{"ruleId":"1765","severity":1,"message":"1835","line":21,"column":18,"nodeType":"1767","messageId":"1768","endLine":21,"endColumn":26},{"ruleId":"1765","severity":1,"message":"1978","line":23,"column":12,"nodeType":"1767","messageId":"1768","endLine":23,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1979","line":24,"column":12,"nodeType":"1767","messageId":"1768","endLine":24,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1791","line":26,"column":12,"nodeType":"1767","messageId":"1768","endLine":26,"endColumn":21},{"ruleId":"1765","severity":1,"message":"1792","line":26,"column":22,"nodeType":"1767","messageId":"1768","endLine":26,"endColumn":37},{"ruleId":"1765","severity":1,"message":"1980","line":28,"column":11,"nodeType":"1767","messageId":"1768","endLine":28,"endColumn":18},{"ruleId":"1778","severity":1,"message":"1779","line":32,"column":15,"nodeType":"1780","endLine":53,"endColumn":6},{"ruleId":"1778","severity":1,"message":"1981","line":53,"column":7,"nodeType":"1784","endLine":53,"endColumn":9,"suggestions":"1984"},{"ruleId":"1765","severity":1,"message":"1934","line":57,"column":10,"nodeType":"1767","messageId":"1768","endLine":57,"endColumn":20},{"ruleId":"1765","severity":1,"message":"1934","line":56,"column":10,"nodeType":"1767","messageId":"1768","endLine":56,"endColumn":20},{"ruleId":"1765","severity":1,"message":"1938","line":75,"column":10,"nodeType":"1767","messageId":"1768","endLine":75,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1939","line":75,"column":18,"nodeType":"1767","messageId":"1768","endLine":75,"endColumn":27},{"ruleId":"1765","severity":1,"message":"1859","line":84,"column":10,"nodeType":"1767","messageId":"1768","endLine":84,"endColumn":18},{"ruleId":"1765","severity":1,"message":"1985","line":84,"column":19,"nodeType":"1767","messageId":"1768","endLine":84,"endColumn":30},{"ruleId":"1765","severity":1,"message":"1940","line":94,"column":10,"nodeType":"1767","messageId":"1768","endLine":94,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1941","line":94,"column":16,"nodeType":"1767","messageId":"1768","endLine":94,"endColumn":24},{"ruleId":"1774","severity":1,"message":"1862","line":104,"column":13,"nodeType":"1776","messageId":"1777","endLine":104,"endColumn":15},{"ruleId":"1774","severity":1,"message":"1775","line":105,"column":98,"nodeType":"1776","messageId":"1777","endLine":105,"endColumn":100},{"ruleId":"1774","severity":1,"message":"1775","line":105,"column":156,"nodeType":"1776","messageId":"1777","endLine":105,"endColumn":158},{"ruleId":"1774","severity":1,"message":"1775","line":106,"column":94,"nodeType":"1776","messageId":"1777","endLine":106,"endColumn":96},{"ruleId":"1778","severity":1,"message":"1943","line":130,"column":5,"nodeType":"1784","endLine":130,"endColumn":40,"suggestions":"1986"},{"ruleId":"1774","severity":1,"message":"1862","line":134,"column":27,"nodeType":"1776","messageId":"1777","endLine":134,"endColumn":29},{"ruleId":"1774","severity":1,"message":"1775","line":134,"column":37,"nodeType":"1776","messageId":"1777","endLine":134,"endColumn":39},{"ruleId":"1778","severity":1,"message":"1945","line":183,"column":5,"nodeType":"1784","endLine":183,"endColumn":7,"suggestions":"1987"},{"ruleId":"1787","severity":1,"message":"1961","line":85,"column":5,"nodeType":"1789","messageId":"1777","endLine":85,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1938","line":83,"column":10,"nodeType":"1767","messageId":"1768","endLine":83,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1939","line":83,"column":18,"nodeType":"1767","messageId":"1768","endLine":83,"endColumn":27},{"ruleId":"1765","severity":1,"message":"1859","line":92,"column":10,"nodeType":"1767","messageId":"1768","endLine":92,"endColumn":18},{"ruleId":"1765","severity":1,"message":"1985","line":92,"column":19,"nodeType":"1767","messageId":"1768","endLine":92,"endColumn":30},{"ruleId":"1765","severity":1,"message":"1940","line":103,"column":10,"nodeType":"1767","messageId":"1768","endLine":103,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1941","line":103,"column":16,"nodeType":"1767","messageId":"1768","endLine":103,"endColumn":24},{"ruleId":"1774","severity":1,"message":"1862","line":113,"column":13,"nodeType":"1776","messageId":"1777","endLine":113,"endColumn":15},{"ruleId":"1774","severity":1,"message":"1775","line":114,"column":98,"nodeType":"1776","messageId":"1777","endLine":114,"endColumn":100},{"ruleId":"1774","severity":1,"message":"1775","line":114,"column":156,"nodeType":"1776","messageId":"1777","endLine":114,"endColumn":158},{"ruleId":"1774","severity":1,"message":"1775","line":115,"column":94,"nodeType":"1776","messageId":"1777","endLine":115,"endColumn":96},{"ruleId":"1778","severity":1,"message":"1943","line":139,"column":5,"nodeType":"1784","endLine":139,"endColumn":40,"suggestions":"1988"},{"ruleId":"1778","severity":1,"message":"1945","line":149,"column":5,"nodeType":"1784","endLine":149,"endColumn":7,"suggestions":"1989"},{"ruleId":"1774","severity":1,"message":"1862","line":153,"column":27,"nodeType":"1776","messageId":"1777","endLine":153,"endColumn":29},{"ruleId":"1774","severity":1,"message":"1775","line":153,"column":37,"nodeType":"1776","messageId":"1777","endLine":153,"endColumn":39},{"ruleId":"1787","severity":1,"message":"1961","line":103,"column":5,"nodeType":"1789","messageId":"1777","endLine":103,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1963","line":309,"column":12,"nodeType":"1767","messageId":"1768","endLine":309,"endColumn":20},{"ruleId":"1765","severity":1,"message":"1964","line":314,"column":11,"nodeType":"1767","messageId":"1768","endLine":314,"endColumn":19},{"ruleId":"1765","severity":1,"message":"1934","line":56,"column":10,"nodeType":"1767","messageId":"1768","endLine":56,"endColumn":20},{"ruleId":"1809","severity":1,"message":"1810","line":196,"column":128,"nodeType":"1811","endLine":196,"endColumn":157},{"ruleId":"1787","severity":1,"message":"1990","line":44,"column":7,"nodeType":"1789","messageId":"1777","endLine":44,"endColumn":33},{"ruleId":"1765","severity":1,"message":"1876","line":3,"column":22,"nodeType":"1767","messageId":"1768","endLine":3,"endColumn":32},{"ruleId":"1765","severity":1,"message":"1991","line":50,"column":12,"nodeType":"1767","messageId":"1768","endLine":50,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1992","line":50,"column":17,"nodeType":"1767","messageId":"1768","endLine":50,"endColumn":21},{"ruleId":"1765","severity":1,"message":"1991","line":48,"column":12,"nodeType":"1767","messageId":"1768","endLine":48,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1992","line":48,"column":17,"nodeType":"1767","messageId":"1768","endLine":48,"endColumn":21},{"ruleId":"1765","severity":1,"message":"1991","line":48,"column":12,"nodeType":"1767","messageId":"1768","endLine":48,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1992","line":48,"column":17,"nodeType":"1767","messageId":"1768","endLine":48,"endColumn":21},{"ruleId":"1765","severity":1,"message":"1876","line":3,"column":22,"nodeType":"1767","messageId":"1768","endLine":3,"endColumn":32},{"ruleId":"1765","severity":1,"message":"1991","line":48,"column":12,"nodeType":"1767","messageId":"1768","endLine":48,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1992","line":48,"column":17,"nodeType":"1767","messageId":"1768","endLine":48,"endColumn":21},{"ruleId":"1778","severity":1,"message":"1779","line":16,"column":9,"nodeType":"1780","endLine":92,"endColumn":10},{"ruleId":"1787","severity":1,"message":"1817","line":55,"column":21,"nodeType":"1789","messageId":"1777","endLine":55,"endColumn":33},{"ruleId":"1765","severity":1,"message":"1993","line":104,"column":11,"nodeType":"1767","messageId":"1768","endLine":104,"endColumn":23},{"ruleId":"1765","severity":1,"message":"1994","line":10,"column":10,"nodeType":"1767","messageId":"1768","endLine":10,"endColumn":20},{"ruleId":"1774","severity":1,"message":"1862","line":18,"column":34,"nodeType":"1776","messageId":"1777","endLine":18,"endColumn":36},{"ruleId":"1787","severity":1,"message":"1990","line":67,"column":7,"nodeType":"1789","messageId":"1777","endLine":67,"endColumn":33},{"ruleId":"1765","severity":1,"message":"1995","line":4,"column":10,"nodeType":"1767","messageId":"1768","endLine":4,"endColumn":15},{"ruleId":"1765","severity":1,"message":"1993","line":99,"column":11,"nodeType":"1767","messageId":"1768","endLine":99,"endColumn":23},{"ruleId":"1778","severity":1,"message":"1779","line":17,"column":9,"nodeType":"1780","endLine":81,"endColumn":10},{"ruleId":"1765","severity":1,"message":"1996","line":8,"column":7,"nodeType":"1767","messageId":"1768","endLine":8,"endColumn":21},{"ruleId":"1765","severity":1,"message":"1997","line":3,"column":8,"nodeType":"1767","messageId":"1768","endLine":3,"endColumn":18},{"ruleId":"1765","severity":1,"message":"1998","line":12,"column":10,"nodeType":"1767","messageId":"1768","endLine":12,"endColumn":18},{"ruleId":"1831","severity":1,"message":"1832","line":39,"column":21,"nodeType":"1833","endLine":39,"endColumn":74},{"ruleId":"1778","severity":1,"message":"1779","line":55,"column":18,"nodeType":"1780","endLine":80,"endColumn":8},{"ruleId":"1778","severity":1,"message":"1999","line":81,"column":10,"nodeType":"1784","endLine":81,"endColumn":27,"suggestions":"2000"},{"ruleId":"1787","severity":1,"message":"1961","line":107,"column":5,"nodeType":"1789","messageId":"1777","endLine":107,"endColumn":15},{"ruleId":"1765","severity":1,"message":"2001","line":174,"column":10,"nodeType":"1767","messageId":"1768","endLine":174,"endColumn":15},{"ruleId":"1765","severity":1,"message":"2002","line":174,"column":16,"nodeType":"1767","messageId":"1768","endLine":174,"endColumn":24},{"ruleId":"1778","severity":1,"message":"2003","line":188,"column":5,"nodeType":"1784","endLine":188,"endColumn":7,"suggestions":"2004"},{"ruleId":"1778","severity":1,"message":"1779","line":235,"column":15,"nodeType":"1780","endLine":272,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":243,"column":100,"nodeType":"1776","messageId":"1777","endLine":243,"endColumn":102},{"ruleId":"1774","severity":1,"message":"1775","line":243,"column":160,"nodeType":"1776","messageId":"1777","endLine":243,"endColumn":162},{"ruleId":"1774","severity":1,"message":"1775","line":244,"column":94,"nodeType":"1776","messageId":"1777","endLine":244,"endColumn":96},{"ruleId":"1765","severity":1,"message":"1964","line":381,"column":11,"nodeType":"1767","messageId":"1768","endLine":381,"endColumn":19},{"ruleId":"1774","severity":1,"message":"1775","line":402,"column":23,"nodeType":"1776","messageId":"1777","endLine":402,"endColumn":25},{"ruleId":"1774","severity":1,"message":"1775","line":428,"column":23,"nodeType":"1776","messageId":"1777","endLine":428,"endColumn":25},{"ruleId":"1778","severity":1,"message":"1779","line":55,"column":18,"nodeType":"1780","endLine":80,"endColumn":8},{"ruleId":"1778","severity":1,"message":"2005","line":81,"column":10,"nodeType":"1784","endLine":81,"endColumn":27,"suggestions":"2006"},{"ruleId":"1787","severity":1,"message":"1961","line":107,"column":5,"nodeType":"1789","messageId":"1777","endLine":107,"endColumn":15},{"ruleId":"1765","severity":1,"message":"2001","line":174,"column":10,"nodeType":"1767","messageId":"1768","endLine":174,"endColumn":15},{"ruleId":"1765","severity":1,"message":"2002","line":174,"column":16,"nodeType":"1767","messageId":"1768","endLine":174,"endColumn":24},{"ruleId":"1778","severity":1,"message":"2003","line":187,"column":5,"nodeType":"1784","endLine":187,"endColumn":7,"suggestions":"2007"},{"ruleId":"1778","severity":1,"message":"1779","line":234,"column":15,"nodeType":"1780","endLine":271,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":243,"column":100,"nodeType":"1776","messageId":"1777","endLine":243,"endColumn":102},{"ruleId":"1774","severity":1,"message":"1775","line":243,"column":160,"nodeType":"1776","messageId":"1777","endLine":243,"endColumn":162},{"ruleId":"1774","severity":1,"message":"1775","line":244,"column":94,"nodeType":"1776","messageId":"1777","endLine":244,"endColumn":96},{"ruleId":"1765","severity":1,"message":"1964","line":380,"column":11,"nodeType":"1767","messageId":"1768","endLine":380,"endColumn":19},{"ruleId":"1774","severity":1,"message":"1775","line":401,"column":23,"nodeType":"1776","messageId":"1777","endLine":401,"endColumn":25},{"ruleId":"1774","severity":1,"message":"1775","line":427,"column":23,"nodeType":"1776","messageId":"1777","endLine":427,"endColumn":25},{"ruleId":"1774","severity":1,"message":"1775","line":39,"column":26,"nodeType":"1776","messageId":"1777","endLine":39,"endColumn":28},{"ruleId":"1765","severity":1,"message":"1947","line":52,"column":11,"nodeType":"1767","messageId":"1768","endLine":52,"endColumn":18},{"ruleId":"1765","severity":1,"message":"1948","line":56,"column":11,"nodeType":"1767","messageId":"1768","endLine":56,"endColumn":19},{"ruleId":"1778","severity":1,"message":"1779","line":55,"column":18,"nodeType":"1780","endLine":80,"endColumn":8},{"ruleId":"1778","severity":1,"message":"2008","line":81,"column":10,"nodeType":"1784","endLine":81,"endColumn":27,"suggestions":"2009"},{"ruleId":"1778","severity":1,"message":"1779","line":17,"column":9,"nodeType":"1780","endLine":85,"endColumn":10},{"ruleId":"1765","severity":1,"message":"1836","line":1,"column":16,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":24},{"ruleId":"1765","severity":1,"message":"1837","line":1,"column":25,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":34},{"ruleId":"1765","severity":1,"message":"1976","line":15,"column":10,"nodeType":"1767","messageId":"1768","endLine":15,"endColumn":17},{"ruleId":"1765","severity":1,"message":"2010","line":11,"column":8,"nodeType":"1767","messageId":"1768","endLine":11,"endColumn":13},{"ruleId":"1765","severity":1,"message":"1877","line":21,"column":9,"nodeType":"1767","messageId":"1768","endLine":21,"endColumn":13},{"ruleId":"1765","severity":1,"message":"1836","line":1,"column":16,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":24},{"ruleId":"1765","severity":1,"message":"1837","line":1,"column":25,"nodeType":"1767","messageId":"1768","endLine":1,"endColumn":34},{"ruleId":"1765","severity":1,"message":"2011","line":12,"column":8,"nodeType":"1767","messageId":"1768","endLine":12,"endColumn":18},{"ruleId":"1765","severity":1,"message":"1976","line":16,"column":10,"nodeType":"1767","messageId":"1768","endLine":16,"endColumn":17},{"ruleId":"1765","severity":1,"message":"1834","line":67,"column":9,"nodeType":"1767","messageId":"1768","endLine":67,"endColumn":14},{"ruleId":"1765","severity":1,"message":"1948","line":115,"column":7,"nodeType":"1767","messageId":"1768","endLine":115,"endColumn":15},{"ruleId":"1774","severity":1,"message":"1775","line":167,"column":60,"nodeType":"1776","messageId":"1777","endLine":167,"endColumn":62},{"ruleId":"1774","severity":1,"message":"1775","line":80,"column":23,"nodeType":"1776","messageId":"1777","endLine":80,"endColumn":25},{"ruleId":"1774","severity":1,"message":"1775","line":106,"column":23,"nodeType":"1776","messageId":"1777","endLine":106,"endColumn":25},{"ruleId":"1774","severity":1,"message":"1775","line":80,"column":23,"nodeType":"1776","messageId":"1777","endLine":80,"endColumn":25},{"ruleId":"1774","severity":1,"message":"1775","line":106,"column":23,"nodeType":"1776","messageId":"1777","endLine":106,"endColumn":25},{"ruleId":"1774","severity":1,"message":"1775","line":80,"column":23,"nodeType":"1776","messageId":"1777","endLine":80,"endColumn":25},{"ruleId":"1774","severity":1,"message":"1775","line":106,"column":23,"nodeType":"1776","messageId":"1777","endLine":106,"endColumn":25},{"ruleId":"1787","severity":1,"message":"1961","line":107,"column":5,"nodeType":"1789","messageId":"1777","endLine":107,"endColumn":15},{"ruleId":"1778","severity":1,"message":"2003","line":188,"column":5,"nodeType":"1784","endLine":188,"endColumn":7,"suggestions":"2012"},{"ruleId":"1778","severity":1,"message":"1779","line":232,"column":15,"nodeType":"1780","endLine":365,"endColumn":6},{"ruleId":"1774","severity":1,"message":"1775","line":240,"column":100,"nodeType":"1776","messageId":"1777","endLine":240,"endColumn":102},{"ruleId":"1774","severity":1,"message":"1775","line":240,"column":160,"nodeType":"1776","messageId":"1777","endLine":240,"endColumn":162},{"ruleId":"1774","severity":1,"message":"1775","line":241,"column":94,"nodeType":"1776","messageId":"1777","endLine":241,"endColumn":96},{"ruleId":"1774","severity":1,"message":"1862","line":249,"column":40,"nodeType":"1776","messageId":"1777","endLine":249,"endColumn":42},{"ruleId":"1774","severity":1,"message":"1862","line":259,"column":34,"nodeType":"1776","messageId":"1777","endLine":259,"endColumn":36},{"ruleId":"1774","severity":1,"message":"1775","line":261,"column":108,"nodeType":"1776","messageId":"1777","endLine":261,"endColumn":110},{"ruleId":"1774","severity":1,"message":"1862","line":268,"column":34,"nodeType":"1776","messageId":"1777","endLine":268,"endColumn":36},{"ruleId":"1774","severity":1,"message":"1775","line":270,"column":108,"nodeType":"1776","messageId":"1777","endLine":270,"endColumn":110},{"ruleId":"1774","severity":1,"message":"1862","line":277,"column":34,"nodeType":"1776","messageId":"1777","endLine":277,"endColumn":36},{"ruleId":"1774","severity":1,"message":"1775","line":279,"column":108,"nodeType":"1776","messageId":"1777","endLine":279,"endColumn":110},{"ruleId":"1774","severity":1,"message":"1862","line":286,"column":34,"nodeType":"1776","messageId":"1777","endLine":286,"endColumn":36},{"ruleId":"1774","severity":1,"message":"1775","line":288,"column":108,"nodeType":"1776","messageId":"1777","endLine":288,"endColumn":110},{"ruleId":"1774","severity":1,"message":"1862","line":295,"column":34,"nodeType":"1776","messageId":"1777","endLine":295,"endColumn":36},{"ruleId":"1774","severity":1,"message":"1775","line":297,"column":108,"nodeType":"1776","messageId":"1777","endLine":297,"endColumn":110},{"ruleId":"1774","severity":1,"message":"1862","line":304,"column":34,"nodeType":"1776","messageId":"1777","endLine":304,"endColumn":36},{"ruleId":"1774","severity":1,"message":"1775","line":306,"column":108,"nodeType":"1776","messageId":"1777","endLine":306,"endColumn":110},{"ruleId":"1774","severity":1,"message":"1862","line":313,"column":34,"nodeType":"1776","messageId":"1777","endLine":313,"endColumn":36},{"ruleId":"1774","severity":1,"message":"1775","line":315,"column":108,"nodeType":"1776","messageId":"1777","endLine":315,"endColumn":110},{"ruleId":"1774","severity":1,"message":"1862","line":322,"column":34,"nodeType":"1776","messageId":"1777","endLine":322,"endColumn":36},{"ruleId":"1774","severity":1,"message":"1775","line":324,"column":108,"nodeType":"1776","messageId":"1777","endLine":324,"endColumn":110},{"ruleId":"1774","severity":1,"message":"1862","line":331,"column":36,"nodeType":"1776","messageId":"1777","endLine":331,"endColumn":38},{"ruleId":"1774","severity":1,"message":"1775","line":333,"column":110,"nodeType":"1776","messageId":"1777","endLine":333,"endColumn":112},{"ruleId":"1765","severity":1,"message":"1964","line":474,"column":11,"nodeType":"1767","messageId":"1768","endLine":474,"endColumn":19},{"ruleId":"1774","severity":1,"message":"1775","line":495,"column":23,"nodeType":"1776","messageId":"1777","endLine":495,"endColumn":25},{"ruleId":"1774","severity":1,"message":"1775","line":521,"column":23,"nodeType":"1776","messageId":"1777","endLine":521,"endColumn":25},{"ruleId":"1765","severity":1,"message":"2013","line":5,"column":8,"nodeType":"1767","messageId":"1768","endLine":5,"endColumn":22},{"ruleId":"1765","severity":1,"message":"2014","line":8,"column":8,"nodeType":"1767","messageId":"1768","endLine":8,"endColumn":12},{"ruleId":"1765","severity":1,"message":"2015","line":9,"column":8,"nodeType":"1767","messageId":"1768","endLine":9,"endColumn":34},{"ruleId":"1765","severity":1,"message":"2016","line":10,"column":8,"nodeType":"1767","messageId":"1768","endLine":10,"endColumn":20},{"ruleId":"1765","severity":1,"message":"2017","line":11,"column":8,"nodeType":"1767","messageId":"1768","endLine":11,"endColumn":18},{"ruleId":"1765","severity":1,"message":"2018","line":53,"column":19,"nodeType":"1767","messageId":"1768","endLine":53,"endColumn":31},{"ruleId":"1765","severity":1,"message":"2019","line":149,"column":11,"nodeType":"1767","messageId":"1768","endLine":149,"endColumn":20},{"ruleId":"1765","severity":1,"message":"2020","line":150,"column":11,"nodeType":"1767","messageId":"1768","endLine":150,"endColumn":21},{"ruleId":"1765","severity":1,"message":"1991","line":151,"column":12,"nodeType":"1767","messageId":"1768","endLine":151,"endColumn":16},{"ruleId":"1765","severity":1,"message":"1992","line":151,"column":17,"nodeType":"1767","messageId":"1768","endLine":151,"endColumn":21},"no-native-reassign",["2021"],"no-negated-in-lhs",["2022"],"no-unused-vars","'RecentBooking' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'Dashboard' is defined but never used.","'isSmall' is assigned a value but never used.","'totalbookings' is assigned a value but never used.","'settotalbookings' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'setError' is assigned a value but never used.","'page' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'mapview'. Either include it or remove the dependency array.","ArrayExpression",["2023"],"'indexOfFirstPost' is assigned a value but never used.","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","'loading' is assigned a value but never used.","'cartitems' is assigned a value but never used.","'changeitemscart' is assigned a value but never used.","'nav' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'roomid'. Either include it or remove the dependency array.",["2024"],"React Hook useEffect has missing dependencies: 'params1.ordering', 'params1.page', and 'roomid'. Either include them or remove the dependency array.",["2025"],"'config' is assigned a value but never used.",["2026"],["2027"],["2028"],["2029"],"'fixedHeightPaper' is assigned a value but never used.","'Hidden' is defined but never used.","'ref' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'bookingid'. Either include it or remove the dependency array.",["2030"],["2031"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'invoice' is assigned a value but never used.","'setinvoice' is assigned a value but never used.",["2032"],"Duplicate key 'windows'.",["2033"],"Duplicate key 'floor_filter'.",["2034"],"'FormHelperText' is defined but never used.","'booking' is assigned a value but never used.","'booking22' is assigned a value but never used.","'room' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'res' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'body' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'theme' is assigned a value but never used.","'seterror' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'CssBaseline' is defined but never used.","'Typography' is defined but never used.","'fade' is defined but never used.","'StyleRoot' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["2035"],"React Hook React.useEffect has missing dependencies: 'bookdetails', 'value.AC', 'value.address', 'value.breakfast', 'value.capacity', 'value.cooler', 'value.coupon', 'value.currency', 'value.date', 'value.dinner', 'value.discount', 'value.duration', 'value.geyser', 'value.house_TV', 'value.house_refridgerator', 'value.lunch', 'value.month', 'value.month_price', 'value.monthsavings', 'value.price', 'value.purified_water', 'value.room_TV', 'value.room_refridgerator', 'value.roomid', 'value.savings', 'value.title', 'value.wifi', and 'value.year'. Either include them or remove the dependency array. You can also do a functional update 'setbookdetails(b => ...)' if you only need 'bookdetails' in the 'setbookdetails' call.",["2036"],"no-redeclare","'t1' is already defined.","redeclared","React Hook React.useEffect has missing dependencies: 'bookdetails', 'value.AC', 'value.TV', 'value.address', 'value.cooler', 'value.coupon', 'value.currency', 'value.date', 'value.discount', 'value.duration', 'value.month', 'value.month_price', 'value.monthsavings', 'value.price', 'value.purified_water', 'value.savings', 'value.shopid', 'value.title', 'value.wifi', and 'value.year'. Either include them or remove the dependency array. You can also do a functional update 'setbookdetails(b => ...)' if you only need 'bookdetails' in the 'setbookdetails' call.",["2037"],"React Hook React.useEffect has missing dependencies: 'bookdetails', 'value.AC', 'value.TV', 'value.address', 'value.apartmentid', 'value.cooler', 'value.coupon', 'value.currency', 'value.date', 'value.discount', 'value.duration', 'value.geyser', 'value.house_refridgerator', 'value.laundry', 'value.month', 'value.month_price', 'value.monthsavings', 'value.price', 'value.purified_water', 'value.savings', 'value.title', 'value.wifi', and 'value.year'. Either include them or remove the dependency array. You can also do a functional update 'setbookdetails(b => ...)' if you only need 'bookdetails' in the 'setbookdetails' call.",["2038"],"'Toolbar' is defined but never used.","'Review' is defined but never used.","'Copyright' is defined but never used.",["2039"],["2040"],["2041"],"'capacity' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'bookdetails' and 'bookingid'. Either include them or remove the dependency array. You can also do a functional update 'setbookdetails(b => ...)' if you only need 'bookdetails' in the 'setbookdetails' call.",["2042"],"Expected '!==' and instead saw '!='.","React Hook React.useEffect has a missing dependency: 'bookdetails'. Either include it or remove the dependency array. You can also do a functional update 'setbookdetails(b => ...)' if you only need 'bookdetails' in the 'setbookdetails' call.",["2043"],"'handleme' is assigned a value but never used.",["2044"],["2045"],["2046"],["2047"],"React Hook React.useEffect has a missing dependency: 'props.profile'. Either include it or remove the dependency array.",["2048"],"'setHidden' is assigned a value but never used.","'setDirection' is assigned a value but never used.","'FILE_SIZE' is assigned a value but never used.","'SUPPORTED_FORMATS' is assigned a value but never used.","'withStyles' is defined but never used.","'Link' is defined but never used.",["2049"],["2050"],["2051"],"'SUPPORTED_FORMATS1' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.",["2052"],["2053"],["2054"],["2055"],["2056"],["2057"],["2058"],["2059"],["2060"],["2061"],["2062"],["2063"],["2064"],["2065"],["2066"],["2067"],["2068"],["2069"],["2070"],["2071"],"Duplicate key 'BHK'.",["2072"],["2073"],["2074"],["2075"],["2076"],["2077"],["2078"],["2079"],["2080"],["2081"],["2082"],"React Hook useEffect has a missing dependency: 'props.profile'. Either include it or remove the dependency array.",["2083"],["2084"],["2085"],["2086"],["2087"],"'bull' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Multicolor_chart must be in PascalCase or SCREAMING_SNAKE_CASE","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'Button' is defined but never used.","'handleClick' is assigned a value but never used.","'isBackgroundRed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.rating'. Either include it or remove the dependency array.",["2088"],"'modalStyle' is assigned a value but never used.","'Root' is assigned a value but never used.","'Label' is assigned a value but never used.","'Item' is assigned a value but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'price' is assigned a value but never used.","'setprice' is assigned a value but never used.","'x' is already defined.","React Hook React.useEffect has a missing dependency: 'bookvalues'. Either include it or remove the dependency array. You can also do a functional update 'setbookvalues(b => ...)' if you only need 'bookvalues' in the 'setbookvalues' call.",["2089"],"React Hook React.useEffect has a missing dependency: 'details.bookedtill'. Either include it or remove the dependency array.",["2090"],"'mystyle' is assigned a value but never used.","'mystyle1' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'LegendRoot' is assigned a value but never used.","'LegendItem' is assigned a value but never used.","'g' is assigned a value but never used.","'h' is assigned a value but never used.","'i' is assigned a value but never used.","'j' is assigned a value but never used.","'selected' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'setvalue'. Either include it or remove the dependency array. If 'setvalue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["2091"],"Duplicate key 'marginLeft'.",["2092"],"'NameCard' is defined but never used.","'mystyle3' is assigned a value but never used.","'MenuProps' is assigned a value but never used.","Duplicate key 'color'.","'preventDefault' is defined but never used.","'createData' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'useTheme' is defined but never used.","'Grid' is defined but never used.","'Discount' is defined but never used.","'Discount1' is defined but never used.","'StyledRating' is assigned a value but never used.","'connect' is defined but never used.","'SearchCard' is defined but never used.","'open1' is assigned a value but never used.","'open2' is assigned a value but never used.","'myStlye' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'access' and 'isAuthenticated'. Either include them or remove the dependency array.",["2093"],["2094"],["2095"],"'setcapacity' is assigned a value but never used.",["2096"],["2097"],["2098"],["2099"],"Duplicate key '& .MuiOutlinedInput-root'.","'try1' is assigned a value but never used.","'set1' is assigned a value but never used.","'handleclick8' is assigned a value but never used.","'makeStyles' is defined but never used.","'green' is defined but never used.","'tableRowsCount' is assigned a value but never used.","'HashLoader' is defined but never used.","'override' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'post.apartment_id'. Either include it or remove the dependency array.",["2100"],"'space' is assigned a value but never used.","'setspace' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'post.bookedtill'. Either include it or remove the dependency array.",["2101"],"React Hook useEffect has a missing dependency: 'post.room_id'. Either include it or remove the dependency array.",["2102"],["2103"],"React Hook useEffect has a missing dependency: 'post.shop_id'. Either include it or remove the dependency array.",["2104"],"'Paper' is defined but never used.","'ScrollIcon' is defined but never used.",["2105"],"'CardActionArea' is defined but never used.","'Icon' is defined but never used.","'FavoriteBorderOutlinedIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'IconButton' is defined but never used.","'changephotos' is assigned a value but never used.","'ArrowLeft' is assigned a value but never used.","'ArrowRight' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"2106","fix":"2107"},{"desc":"2108","fix":"2109"},{"desc":"2110","fix":"2111"},{"desc":"2108","fix":"2112"},{"desc":"2108","fix":"2113"},{"desc":"2110","fix":"2114"},{"desc":"2108","fix":"2115"},{"desc":"2116","fix":"2117"},{"desc":"2116","fix":"2118"},{"desc":"2116","fix":"2119"},{"desc":"2106","fix":"2120"},{"desc":"2106","fix":"2121"},{"desc":"2122","fix":"2123"},{"desc":"2124","fix":"2125"},{"desc":"2126","fix":"2127"},{"desc":"2128","fix":"2129"},{"desc":"2116","fix":"2130"},{"desc":"2116","fix":"2131"},{"desc":"2116","fix":"2132"},{"desc":"2133","fix":"2134"},{"desc":"2135","fix":"2136"},{"desc":"2133","fix":"2137"},{"desc":"2135","fix":"2138"},{"desc":"2133","fix":"2139"},{"desc":"2135","fix":"2140"},{"desc":"2141","fix":"2142"},{"desc":"2108","fix":"2143"},{"desc":"2110","fix":"2144"},{"desc":"2108","fix":"2145"},{"desc":"2146","fix":"2147"},{"desc":"2148","fix":"2149"},{"desc":"2150","fix":"2151"},{"desc":"2152","fix":"2153"},{"desc":"2154","fix":"2155"},{"desc":"2156","fix":"2157"},{"desc":"2158","fix":"2159"},{"desc":"2160","fix":"2161"},{"desc":"2162","fix":"2163"},{"desc":"2164","fix":"2165"},{"desc":"2166","fix":"2167"},{"desc":"2146","fix":"2168"},{"desc":"2148","fix":"2169"},{"desc":"2150","fix":"2170"},{"desc":"2152","fix":"2171"},{"desc":"2154","fix":"2172"},{"desc":"2156","fix":"2173"},{"desc":"2174","fix":"2175"},{"desc":"2176","fix":"2177"},{"desc":"2178","fix":"2179"},{"desc":"2146","fix":"2180"},{"desc":"2148","fix":"2181"},{"desc":"2150","fix":"2182"},{"desc":"2152","fix":"2183"},{"desc":"2154","fix":"2184"},{"desc":"2156","fix":"2185"},{"desc":"2186","fix":"2187"},{"desc":"2188","fix":"2189"},{"desc":"2162","fix":"2190"},{"desc":"2164","fix":"2191"},{"desc":"2192","fix":"2193"},{"desc":"2194","fix":"2195"},{"desc":"2196","fix":"2197"},{"desc":"2198","fix":"2199"},{"desc":"2200","fix":"2201"},{"desc":"2202","fix":"2203"},{"desc":"2204","fix":"2205"},{"desc":"2206","fix":"2207"},{"desc":"2208","fix":"2209"},{"desc":"2210","fix":"2211"},{"desc":"2204","fix":"2212"},{"desc":"2213","fix":"2214"},{"desc":"2213","fix":"2215"},{"desc":"2213","fix":"2216"},{"desc":"2206","fix":"2217"},{"desc":"2208","fix":"2218"},{"desc":"2206","fix":"2219"},{"desc":"2208","fix":"2220"},{"desc":"2221","fix":"2222"},{"desc":"2223","fix":"2224"},{"desc":"2225","fix":"2226"},{"desc":"2223","fix":"2227"},{"desc":"2228","fix":"2229"},{"desc":"2223","fix":"2230"},"Update the dependencies array to be: [currentPage, filters, mapview]",{"range":"2231","text":"2232"},"Update the dependencies array to be: [props.isAuthenticated, roomid]",{"range":"2233","text":"2234"},"Update the dependencies array to be: [params1.ordering, params1.page, roomid]",{"range":"2235","text":"2236"},{"range":"2237","text":"2234"},{"range":"2238","text":"2234"},{"range":"2239","text":"2236"},{"range":"2240","text":"2234"},"Update the dependencies array to be: [bookingid]",{"range":"2241","text":"2242"},{"range":"2243","text":"2242"},{"range":"2244","text":"2242"},{"range":"2245","text":"2232"},{"range":"2246","text":"2232"},"Update the dependencies array to be: [props]",{"range":"2247","text":"2248"},"Update the dependencies array to be: [bookdetails, props.location.state.property_id, props.profile, value.AC, value.address, value.breakfast, value.capacity, value.cooler, value.coupon, value.currency, value.date, value.dinner, value.discount, value.duration, value.geyser, value.house_TV, value.house_refridgerator, value.lunch, value.month, value.month_price, value.monthsavings, value.price, value.purified_water, value.room_TV, value.room_refridgerator, value.roomid, value.savings, value.title, value.wifi, value.year]",{"range":"2249","text":"2250"},"Update the dependencies array to be: [bookdetails, props.location.state.property_id, props.profile, value.AC, value.TV, value.address, value.cooler, value.coupon, value.currency, value.date, value.discount, value.duration, value.month, value.month_price, value.monthsavings, value.price, value.purified_water, value.savings, value.shopid, value.title, value.wifi, value.year]",{"range":"2251","text":"2252"},"Update the dependencies array to be: [bookdetails, props.location.state.property_id, props.profile, value.AC, value.TV, value.address, value.apartmentid, value.cooler, value.coupon, value.currency, value.date, value.discount, value.duration, value.geyser, value.house_refridgerator, value.laundry, value.month, value.month_price, value.monthsavings, value.price, value.purified_water, value.savings, value.title, value.wifi, value.year]",{"range":"2253","text":"2254"},{"range":"2255","text":"2242"},{"range":"2256","text":"2242"},{"range":"2257","text":"2242"},"Update the dependencies array to be: [bookdetails, bookingid]",{"range":"2258","text":"2259"},"Update the dependencies array to be: [bookdetails, mycoupon]",{"range":"2260","text":"2261"},{"range":"2262","text":"2259"},{"range":"2263","text":"2261"},{"range":"2264","text":"2259"},{"range":"2265","text":"2261"},"Update the dependencies array to be: [props.profile, warning]",{"range":"2266","text":"2267"},{"range":"2268","text":"2234"},{"range":"2269","text":"2236"},{"range":"2270","text":"2234"},"Update the dependencies array to be: [formik, formik.values.length]",{"range":"2271","text":"2272"},"Update the dependencies array to be: [formik, formik.values.breadth]",{"range":"2273","text":"2274"},"Update the dependencies array to be: [formik, formik.values.height]",{"range":"2275","text":"2276"},"Update the dependencies array to be: [formik, formik.values.owner_discount]",{"range":"2277","text":"2278"},"Update the dependencies array to be: [formik, formik.values.seller_price]",{"range":"2279","text":"2280"},"Update the dependencies array to be: [formik, formik.values.cost_wifi]",{"range":"2281","text":"2282"},"Update the dependencies array to be: [formik, formik.values.cost_refridgerator, formik.values.cost_roomrefridgerator]",{"range":"2283","text":"2284"},"Update the dependencies array to be: [formik, formik.values.cost_TV, formik.values.cost_roomTV]",{"range":"2285","text":"2286"},"Update the dependencies array to be: [formik.values.cost_AC, formik.values.cost_purified_water, formik.values.cost_geyser, formik]",{"range":"2287","text":"2288"},"Update the dependencies array to be: [formik, formik.values.cost_cooler, formik.values.cost_electricity, formik.values.cost_water]",{"range":"2289","text":"2290"},"Update the dependencies array to be: [formik.values.distance1, formik.values.distance2, formik.values.cost_breakfast, formik.values.cost_laundry, formik.values.cost_lunch, formik.values.cost_dinner, formik.values.cost_cleaning, formik.values.cost_iron, formik]",{"range":"2291","text":"2292"},{"range":"2293","text":"2272"},{"range":"2294","text":"2274"},{"range":"2295","text":"2276"},{"range":"2296","text":"2278"},{"range":"2297","text":"2280"},{"range":"2298","text":"2282"},"Update the dependencies array to be: [formik, formik.values.cost_purified_water]",{"range":"2299","text":"2300"},"Update the dependencies array to be: [formik.values.cost_electricity, formik.values.cost_water, formik.values.cost_AC, formik.values.cost_TV, formik.values.cooler, formik]",{"range":"2301","text":"2302"},"Update the dependencies array to be: [formik.values.distance1, formik.values.distance2, formik.values.cost_cleaning, formik]",{"range":"2303","text":"2304"},{"range":"2305","text":"2272"},{"range":"2306","text":"2274"},{"range":"2307","text":"2276"},{"range":"2308","text":"2278"},{"range":"2309","text":"2280"},{"range":"2310","text":"2282"},"Update the dependencies array to be: [formik, formik.values.cost_refridgerator]",{"range":"2311","text":"2312"},"Update the dependencies array to be: [formik, formik.values.cost_TV]",{"range":"2313","text":"2314"},{"range":"2315","text":"2288"},{"range":"2316","text":"2290"},"Update the dependencies array to be: [formik.values.distance1, formik.values.distance2, formik.values.cost_laundry, formik.values.cost_cleaning, formik]",{"range":"2317","text":"2318"},"Update the dependencies array to be: [couponid, props.profile]",{"range":"2319","text":"2320"},"Update the dependencies array to be: [formik, formik.values.off]",{"range":"2321","text":"2322"},"Update the dependencies array to be: [formik, formik.values.min_price]",{"range":"2323","text":"2324"},"Update the dependencies array to be: [formik, formik.values.max_off_price]",{"range":"2325","text":"2326"},"Update the dependencies array to be: [formik, formik.values.life]",{"range":"2327","text":"2328"},"Update the dependencies array to be: [props.rating]",{"range":"2329","text":"2330"},"Update the dependencies array to be: [date, details, selectedDate, profile, bookvalues]",{"range":"2331","text":"2332"},"Update the dependencies array to be: [details.bookedtill]",{"range":"2333","text":"2334"},"Update the dependencies array to be: [setvalue]",{"range":"2335","text":"2336"},{"range":"2337","text":"2330"},"Update the dependencies array to be: [access, isAuthenticated]",{"range":"2338","text":"2339"},{"range":"2340","text":"2339"},{"range":"2341","text":"2339"},{"range":"2342","text":"2332"},{"range":"2343","text":"2334"},{"range":"2344","text":"2332"},{"range":"2345","text":"2334"},"Update the dependencies array to be: [isAuthenticated, post.apartment_id]",{"range":"2346","text":"2347"},"Update the dependencies array to be: [post.bookedtill]",{"range":"2348","text":"2349"},"Update the dependencies array to be: [isAuthenticated, post.room_id]",{"range":"2350","text":"2351"},{"range":"2352","text":"2349"},"Update the dependencies array to be: [isAuthenticated, post.shop_id]",{"range":"2353","text":"2354"},{"range":"2355","text":"2349"},[5740,5761],"[currentPage, filters, mapview]",[5059,5082],"[props.isAuthenticated, roomid]",[6011,6013],"[params1.ordering, params1.page, roomid]",[6947,6970],[5078,5101],[6016,6018],[6938,6961],[6050,6052],"[bookingid]",[5155,5157],[4839,4841],[5256,5277],[5951,5972],[492,494],"[props]",[6510,6558],"[bookdetails, props.location.state.property_id, props.profile, value.AC, value.address, value.breakfast, value.capacity, value.cooler, value.coupon, value.currency, value.date, value.dinner, value.discount, value.duration, value.geyser, value.house_TV, value.house_refridgerator, value.lunch, value.month, value.month_price, value.monthsavings, value.price, value.purified_water, value.room_TV, value.room_refridgerator, value.roomid, value.savings, value.title, value.wifi, value.year]",[5872,5920],"[bookdetails, props.location.state.property_id, props.profile, value.AC, value.TV, value.address, value.cooler, value.coupon, value.currency, value.date, value.discount, value.duration, value.month, value.month_price, value.monthsavings, value.price, value.purified_water, value.savings, value.shopid, value.title, value.wifi, value.year]",[6103,6151],"[bookdetails, props.location.state.property_id, props.profile, value.AC, value.TV, value.address, value.apartmentid, value.cooler, value.coupon, value.currency, value.date, value.discount, value.duration, value.geyser, value.house_refridgerator, value.laundry, value.month, value.month_price, value.monthsavings, value.price, value.purified_water, value.savings, value.title, value.wifi, value.year]",[2926,2928],[2927,2929],[2934,2936],[7042,7044],"[bookdetails, bookingid]",[12913,12923],"[bookdetails, mycoupon]",[6364,6366],[7208,7218],[6746,6748],[7588,7598],[3777,3786],"[props.profile, warning]",[5126,5149],[6059,6061],[6979,7002],[27681,27703],"[formik, formik.values.length]",[27830,27853],"[formik, formik.values.breadth]",[27977,27999],"[formik, formik.values.height]",[28152,28182],"[formik, formik.values.owner_discount]",[28329,28357],"[formik, formik.values.seller_price]",[28495,28520],"[formik, formik.values.cost_wifi]",[28820,28891],"[formik, formik.values.cost_refridgerator, formik.values.cost_roomrefridgerator]",[29126,29175],"[formik, formik.values.cost_TV, formik.values.cost_roomTV]",[29536,29619],"[formik.values.cost_AC, formik.values.cost_purified_water, formik.values.cost_geyser, formik]",[29980,30063],"[formik, formik.values.cost_cooler, formik.values.cost_electricity, formik.values.cost_water]",[30914,31122],"[formik.values.distance1, formik.values.distance2, formik.values.cost_breakfast, formik.values.cost_laundry, formik.values.cost_lunch, formik.values.cost_dinner, formik.values.cost_cleaning, formik.values.cost_iron, formik]",[19831,19853],[19980,20003],[20127,20149],[20302,20332],[20479,20507],[20645,20670],[20845,20880],"[formik, formik.values.cost_purified_water]",[21421,21543],"[formik.values.cost_electricity, formik.values.cost_water, formik.values.cost_AC, formik.values.cost_TV, formik.values.cooler, formik]",[21886,21963],"[formik.values.distance1, formik.values.distance2, formik.values.cost_cleaning, formik]",[24477,24499],[24626,24649],[24773,24795],[24948,24978],[25125,25153],[25291,25316],[25485,25519],"[formik, formik.values.cost_refridgerator]",[25655,25678],"[formik, formik.values.cost_TV]",[26039,26122],[26483,26566],[27018,27122],"[formik.values.distance1, formik.values.distance2, formik.values.cost_laundry, formik.values.cost_cleaning, formik]",[6005,6015],"[couponid, props.profile]",[7419,7438],"[formik, formik.values.off]",[7585,7610],"[formik, formik.values.min_price]",[7769,7798],"[formik, formik.values.max_off_price]",[7930,7950],"[formik, formik.values.life]",[1238,1240],"[props.rating]",[9638,9673],"[date, details, selectedDate, profile, bookvalues]",[11188,11190],"[details.bookedtill]",[1341,1343],"[setvalue]",[1242,1244],[1601,1603],"[access, isAuthenticated]",[1578,1580],[1605,1607],[4015,4050],[5567,5569],[4272,4307],[4684,4686],[2045,2062],"[isAuthenticated, post.apartment_id]",[4123,4125],"[post.bookedtill]",[2027,2044],"[isAuthenticated, post.room_id]",[4116,4118],[2028,2045],"[isAuthenticated, post.shop_id]",[4113,4115]]